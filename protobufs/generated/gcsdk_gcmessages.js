/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    /**
     * GCClientLauncherType enum.
     * @exports GCClientLauncherType
     * @enum {number}
     * @property {number} GCClientLauncherType_DEFAULT=0 GCClientLauncherType_DEFAULT value
     * @property {number} GCClientLauncherType_PERFECTWORLD=1 GCClientLauncherType_PERFECTWORLD value
     * @property {number} GCClientLauncherType_STEAMCHINA=2 GCClientLauncherType_STEAMCHINA value
     * @property {number} GCClientLauncherType_SOURCE2=3 GCClientLauncherType_SOURCE2 value
     */
    $root.GCClientLauncherType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GCClientLauncherType_DEFAULT"] = 0;
        values[valuesById[1] = "GCClientLauncherType_PERFECTWORLD"] = 1;
        values[valuesById[2] = "GCClientLauncherType_STEAMCHINA"] = 2;
        values[valuesById[3] = "GCClientLauncherType_SOURCE2"] = 3;
        return values;
    })();
    
    /**
     * GCConnectionStatus enum.
     * @exports GCConnectionStatus
     * @enum {number}
     * @property {number} GCConnectionStatus_HAVE_SESSION=0 GCConnectionStatus_HAVE_SESSION value
     * @property {number} GCConnectionStatus_GC_GOING_DOWN=1 GCConnectionStatus_GC_GOING_DOWN value
     * @property {number} GCConnectionStatus_NO_SESSION=2 GCConnectionStatus_NO_SESSION value
     * @property {number} GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE=3 GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE value
     * @property {number} GCConnectionStatus_NO_STEAM=4 GCConnectionStatus_NO_STEAM value
     */
    $root.GCConnectionStatus = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GCConnectionStatus_HAVE_SESSION"] = 0;
        values[valuesById[1] = "GCConnectionStatus_GC_GOING_DOWN"] = 1;
        values[valuesById[2] = "GCConnectionStatus_NO_SESSION"] = 2;
        values[valuesById[3] = "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE"] = 3;
        values[valuesById[4] = "GCConnectionStatus_NO_STEAM"] = 4;
        return values;
    })();
    
    $root.CMsgSOIDOwner = (function() {
    
        /**
         * Properties of a CMsgSOIDOwner.
         * @exports ICMsgSOIDOwner
         * @interface ICMsgSOIDOwner
         * @property {number|null} [type] CMsgSOIDOwner type
         * @property {number|Long|null} [id] CMsgSOIDOwner id
         */
    
        /**
         * Constructs a new CMsgSOIDOwner.
         * @exports CMsgSOIDOwner
         * @classdesc Represents a CMsgSOIDOwner.
         * @implements ICMsgSOIDOwner
         * @constructor
         * @param {ICMsgSOIDOwner=} [properties] Properties to set
         */
        function CMsgSOIDOwner(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOIDOwner type.
         * @member {number} type
         * @memberof CMsgSOIDOwner
         * @instance
         */
        CMsgSOIDOwner.prototype.type = 0;
    
        /**
         * CMsgSOIDOwner id.
         * @member {number|Long} id
         * @memberof CMsgSOIDOwner
         * @instance
         */
        CMsgSOIDOwner.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgSOIDOwner instance using the specified properties.
         * @function create
         * @memberof CMsgSOIDOwner
         * @static
         * @param {ICMsgSOIDOwner=} [properties] Properties to set
         * @returns {CMsgSOIDOwner} CMsgSOIDOwner instance
         */
        CMsgSOIDOwner.create = function create(properties) {
            return new CMsgSOIDOwner(properties);
        };
    
        /**
         * Encodes the specified CMsgSOIDOwner message. Does not implicitly {@link CMsgSOIDOwner.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOIDOwner
         * @static
         * @param {ICMsgSOIDOwner} message CMsgSOIDOwner message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOIDOwner.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.type);
            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOIDOwner message, length delimited. Does not implicitly {@link CMsgSOIDOwner.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOIDOwner
         * @static
         * @param {ICMsgSOIDOwner} message CMsgSOIDOwner message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOIDOwner.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOIDOwner message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOIDOwner
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOIDOwner} CMsgSOIDOwner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOIDOwner.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOIDOwner();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.type = reader.uint32();
                        break;
                    }
                case 2: {
                        message.id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOIDOwner message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOIDOwner
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOIDOwner} CMsgSOIDOwner
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOIDOwner.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOIDOwner message.
         * @function verify
         * @memberof CMsgSOIDOwner
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOIDOwner.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.type != null && message.hasOwnProperty("type"))
                if (!$util.isInteger(message.type))
                    return "type: integer expected";
            if (message.id != null && message.hasOwnProperty("id"))
                if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                    return "id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgSOIDOwner message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOIDOwner
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOIDOwner} CMsgSOIDOwner
         */
        CMsgSOIDOwner.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOIDOwner)
                return object;
            var message = new $root.CMsgSOIDOwner();
            if (object.type != null)
                message.type = object.type >>> 0;
            if (object.id != null)
                if ($util.Long)
                    (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                else if (typeof object.id === "string")
                    message.id = parseInt(object.id, 10);
                else if (typeof object.id === "number")
                    message.id = object.id;
                else if (typeof object.id === "object")
                    message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOIDOwner message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOIDOwner
         * @static
         * @param {CMsgSOIDOwner} message CMsgSOIDOwner
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOIDOwner.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.type = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.id = options.longs === String ? "0" : 0;
            }
            if (message.type != null && message.hasOwnProperty("type"))
                object.type = message.type;
            if (message.id != null && message.hasOwnProperty("id"))
                if (typeof message.id === "number")
                    object.id = options.longs === String ? String(message.id) : message.id;
                else
                    object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
            return object;
        };
    
        /**
         * Converts this CMsgSOIDOwner to JSON.
         * @function toJSON
         * @memberof CMsgSOIDOwner
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOIDOwner.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOIDOwner
         * @function getTypeUrl
         * @memberof CMsgSOIDOwner
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOIDOwner.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOIDOwner";
        };
    
        return CMsgSOIDOwner;
    })();
    
    $root.CMsgSOSingleObject = (function() {
    
        /**
         * Properties of a CMsgSOSingleObject.
         * @exports ICMsgSOSingleObject
         * @interface ICMsgSOSingleObject
         * @property {number|null} [type_id] CMsgSOSingleObject type_id
         * @property {Uint8Array|null} [object_data] CMsgSOSingleObject object_data
         * @property {number|Long|null} [version] CMsgSOSingleObject version
         * @property {ICMsgSOIDOwner|null} [owner_soid] CMsgSOSingleObject owner_soid
         */
    
        /**
         * Constructs a new CMsgSOSingleObject.
         * @exports CMsgSOSingleObject
         * @classdesc Represents a CMsgSOSingleObject.
         * @implements ICMsgSOSingleObject
         * @constructor
         * @param {ICMsgSOSingleObject=} [properties] Properties to set
         */
        function CMsgSOSingleObject(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOSingleObject type_id.
         * @member {number} type_id
         * @memberof CMsgSOSingleObject
         * @instance
         */
        CMsgSOSingleObject.prototype.type_id = 0;
    
        /**
         * CMsgSOSingleObject object_data.
         * @member {Uint8Array} object_data
         * @memberof CMsgSOSingleObject
         * @instance
         */
        CMsgSOSingleObject.prototype.object_data = $util.newBuffer([]);
    
        /**
         * CMsgSOSingleObject version.
         * @member {number|Long} version
         * @memberof CMsgSOSingleObject
         * @instance
         */
        CMsgSOSingleObject.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgSOSingleObject owner_soid.
         * @member {ICMsgSOIDOwner|null|undefined} owner_soid
         * @memberof CMsgSOSingleObject
         * @instance
         */
        CMsgSOSingleObject.prototype.owner_soid = null;
    
        /**
         * Creates a new CMsgSOSingleObject instance using the specified properties.
         * @function create
         * @memberof CMsgSOSingleObject
         * @static
         * @param {ICMsgSOSingleObject=} [properties] Properties to set
         * @returns {CMsgSOSingleObject} CMsgSOSingleObject instance
         */
        CMsgSOSingleObject.create = function create(properties) {
            return new CMsgSOSingleObject(properties);
        };
    
        /**
         * Encodes the specified CMsgSOSingleObject message. Does not implicitly {@link CMsgSOSingleObject.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOSingleObject
         * @static
         * @param {ICMsgSOSingleObject} message CMsgSOSingleObject message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOSingleObject.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.type_id != null && Object.hasOwnProperty.call(message, "type_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type_id);
            if (message.object_data != null && Object.hasOwnProperty.call(message, "object_data"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.object_data);
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.version);
            if (message.owner_soid != null && Object.hasOwnProperty.call(message, "owner_soid"))
                $root.CMsgSOIDOwner.encode(message.owner_soid, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOSingleObject message, length delimited. Does not implicitly {@link CMsgSOSingleObject.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOSingleObject
         * @static
         * @param {ICMsgSOSingleObject} message CMsgSOSingleObject message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOSingleObject.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOSingleObject message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOSingleObject
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOSingleObject} CMsgSOSingleObject
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOSingleObject.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOSingleObject();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 2: {
                        message.type_id = reader.int32();
                        break;
                    }
                case 3: {
                        message.object_data = reader.bytes();
                        break;
                    }
                case 4: {
                        message.version = reader.fixed64();
                        break;
                    }
                case 5: {
                        message.owner_soid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOSingleObject message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOSingleObject
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOSingleObject} CMsgSOSingleObject
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOSingleObject.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOSingleObject message.
         * @function verify
         * @memberof CMsgSOSingleObject
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOSingleObject.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.type_id != null && message.hasOwnProperty("type_id"))
                if (!$util.isInteger(message.type_id))
                    return "type_id: integer expected";
            if (message.object_data != null && message.hasOwnProperty("object_data"))
                if (!(message.object_data && typeof message.object_data.length === "number" || $util.isString(message.object_data)))
                    return "object_data: buffer expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid")) {
                var error = $root.CMsgSOIDOwner.verify(message.owner_soid);
                if (error)
                    return "owner_soid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOSingleObject message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOSingleObject
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOSingleObject} CMsgSOSingleObject
         */
        CMsgSOSingleObject.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOSingleObject)
                return object;
            var message = new $root.CMsgSOSingleObject();
            if (object.type_id != null)
                message.type_id = object.type_id | 0;
            if (object.object_data != null)
                if (typeof object.object_data === "string")
                    $util.base64.decode(object.object_data, message.object_data = $util.newBuffer($util.base64.length(object.object_data)), 0);
                else if (object.object_data.length >= 0)
                    message.object_data = object.object_data;
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            if (object.owner_soid != null) {
                if (typeof object.owner_soid !== "object")
                    throw TypeError(".CMsgSOSingleObject.owner_soid: object expected");
                message.owner_soid = $root.CMsgSOIDOwner.fromObject(object.owner_soid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOSingleObject message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOSingleObject
         * @static
         * @param {CMsgSOSingleObject} message CMsgSOSingleObject
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOSingleObject.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.type_id = 0;
                if (options.bytes === String)
                    object.object_data = "";
                else {
                    object.object_data = [];
                    if (options.bytes !== Array)
                        object.object_data = $util.newBuffer(object.object_data);
                }
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
                object.owner_soid = null;
            }
            if (message.type_id != null && message.hasOwnProperty("type_id"))
                object.type_id = message.type_id;
            if (message.object_data != null && message.hasOwnProperty("object_data"))
                object.object_data = options.bytes === String ? $util.base64.encode(message.object_data, 0, message.object_data.length) : options.bytes === Array ? Array.prototype.slice.call(message.object_data) : message.object_data;
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid"))
                object.owner_soid = $root.CMsgSOIDOwner.toObject(message.owner_soid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOSingleObject to JSON.
         * @function toJSON
         * @memberof CMsgSOSingleObject
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOSingleObject.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOSingleObject
         * @function getTypeUrl
         * @memberof CMsgSOSingleObject
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOSingleObject.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOSingleObject";
        };
    
        return CMsgSOSingleObject;
    })();
    
    $root.CMsgSOMultipleObjects = (function() {
    
        /**
         * Properties of a CMsgSOMultipleObjects.
         * @exports ICMsgSOMultipleObjects
         * @interface ICMsgSOMultipleObjects
         * @property {Array.<CMsgSOMultipleObjects.ISingleObject>|null} [objects_modified] CMsgSOMultipleObjects objects_modified
         * @property {number|Long|null} [version] CMsgSOMultipleObjects version
         * @property {ICMsgSOIDOwner|null} [owner_soid] CMsgSOMultipleObjects owner_soid
         */
    
        /**
         * Constructs a new CMsgSOMultipleObjects.
         * @exports CMsgSOMultipleObjects
         * @classdesc Represents a CMsgSOMultipleObjects.
         * @implements ICMsgSOMultipleObjects
         * @constructor
         * @param {ICMsgSOMultipleObjects=} [properties] Properties to set
         */
        function CMsgSOMultipleObjects(properties) {
            this.objects_modified = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOMultipleObjects objects_modified.
         * @member {Array.<CMsgSOMultipleObjects.ISingleObject>} objects_modified
         * @memberof CMsgSOMultipleObjects
         * @instance
         */
        CMsgSOMultipleObjects.prototype.objects_modified = $util.emptyArray;
    
        /**
         * CMsgSOMultipleObjects version.
         * @member {number|Long} version
         * @memberof CMsgSOMultipleObjects
         * @instance
         */
        CMsgSOMultipleObjects.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgSOMultipleObjects owner_soid.
         * @member {ICMsgSOIDOwner|null|undefined} owner_soid
         * @memberof CMsgSOMultipleObjects
         * @instance
         */
        CMsgSOMultipleObjects.prototype.owner_soid = null;
    
        /**
         * Creates a new CMsgSOMultipleObjects instance using the specified properties.
         * @function create
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {ICMsgSOMultipleObjects=} [properties] Properties to set
         * @returns {CMsgSOMultipleObjects} CMsgSOMultipleObjects instance
         */
        CMsgSOMultipleObjects.create = function create(properties) {
            return new CMsgSOMultipleObjects(properties);
        };
    
        /**
         * Encodes the specified CMsgSOMultipleObjects message. Does not implicitly {@link CMsgSOMultipleObjects.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {ICMsgSOMultipleObjects} message CMsgSOMultipleObjects message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOMultipleObjects.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.objects_modified != null && message.objects_modified.length)
                for (var i = 0; i < message.objects_modified.length; ++i)
                    $root.CMsgSOMultipleObjects.SingleObject.encode(message.objects_modified[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.version);
            if (message.owner_soid != null && Object.hasOwnProperty.call(message, "owner_soid"))
                $root.CMsgSOIDOwner.encode(message.owner_soid, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOMultipleObjects message, length delimited. Does not implicitly {@link CMsgSOMultipleObjects.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {ICMsgSOMultipleObjects} message CMsgSOMultipleObjects message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOMultipleObjects.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOMultipleObjects message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOMultipleObjects} CMsgSOMultipleObjects
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOMultipleObjects.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOMultipleObjects();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 2: {
                        if (!(message.objects_modified && message.objects_modified.length))
                            message.objects_modified = [];
                        message.objects_modified.push($root.CMsgSOMultipleObjects.SingleObject.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.version = reader.fixed64();
                        break;
                    }
                case 6: {
                        message.owner_soid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOMultipleObjects message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOMultipleObjects} CMsgSOMultipleObjects
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOMultipleObjects.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOMultipleObjects message.
         * @function verify
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOMultipleObjects.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.objects_modified != null && message.hasOwnProperty("objects_modified")) {
                if (!Array.isArray(message.objects_modified))
                    return "objects_modified: array expected";
                for (var i = 0; i < message.objects_modified.length; ++i) {
                    var error = $root.CMsgSOMultipleObjects.SingleObject.verify(message.objects_modified[i]);
                    if (error)
                        return "objects_modified." + error;
                }
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid")) {
                var error = $root.CMsgSOIDOwner.verify(message.owner_soid);
                if (error)
                    return "owner_soid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOMultipleObjects message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOMultipleObjects} CMsgSOMultipleObjects
         */
        CMsgSOMultipleObjects.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOMultipleObjects)
                return object;
            var message = new $root.CMsgSOMultipleObjects();
            if (object.objects_modified) {
                if (!Array.isArray(object.objects_modified))
                    throw TypeError(".CMsgSOMultipleObjects.objects_modified: array expected");
                message.objects_modified = [];
                for (var i = 0; i < object.objects_modified.length; ++i) {
                    if (typeof object.objects_modified[i] !== "object")
                        throw TypeError(".CMsgSOMultipleObjects.objects_modified: object expected");
                    message.objects_modified[i] = $root.CMsgSOMultipleObjects.SingleObject.fromObject(object.objects_modified[i]);
                }
            }
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            if (object.owner_soid != null) {
                if (typeof object.owner_soid !== "object")
                    throw TypeError(".CMsgSOMultipleObjects.owner_soid: object expected");
                message.owner_soid = $root.CMsgSOIDOwner.fromObject(object.owner_soid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOMultipleObjects message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {CMsgSOMultipleObjects} message CMsgSOMultipleObjects
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOMultipleObjects.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.objects_modified = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
                object.owner_soid = null;
            }
            if (message.objects_modified && message.objects_modified.length) {
                object.objects_modified = [];
                for (var j = 0; j < message.objects_modified.length; ++j)
                    object.objects_modified[j] = $root.CMsgSOMultipleObjects.SingleObject.toObject(message.objects_modified[j], options);
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid"))
                object.owner_soid = $root.CMsgSOIDOwner.toObject(message.owner_soid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOMultipleObjects to JSON.
         * @function toJSON
         * @memberof CMsgSOMultipleObjects
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOMultipleObjects.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOMultipleObjects
         * @function getTypeUrl
         * @memberof CMsgSOMultipleObjects
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOMultipleObjects.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOMultipleObjects";
        };
    
        CMsgSOMultipleObjects.SingleObject = (function() {
    
            /**
             * Properties of a SingleObject.
             * @memberof CMsgSOMultipleObjects
             * @interface ISingleObject
             * @property {number|null} [type_id] SingleObject type_id
             * @property {Uint8Array|null} [object_data] SingleObject object_data
             */
    
            /**
             * Constructs a new SingleObject.
             * @memberof CMsgSOMultipleObjects
             * @classdesc Represents a SingleObject.
             * @implements ISingleObject
             * @constructor
             * @param {CMsgSOMultipleObjects.ISingleObject=} [properties] Properties to set
             */
            function SingleObject(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SingleObject type_id.
             * @member {number} type_id
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @instance
             */
            SingleObject.prototype.type_id = 0;
    
            /**
             * SingleObject object_data.
             * @member {Uint8Array} object_data
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @instance
             */
            SingleObject.prototype.object_data = $util.newBuffer([]);
    
            /**
             * Creates a new SingleObject instance using the specified properties.
             * @function create
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {CMsgSOMultipleObjects.ISingleObject=} [properties] Properties to set
             * @returns {CMsgSOMultipleObjects.SingleObject} SingleObject instance
             */
            SingleObject.create = function create(properties) {
                return new SingleObject(properties);
            };
    
            /**
             * Encodes the specified SingleObject message. Does not implicitly {@link CMsgSOMultipleObjects.SingleObject.verify|verify} messages.
             * @function encode
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {CMsgSOMultipleObjects.ISingleObject} message SingleObject message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SingleObject.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type_id != null && Object.hasOwnProperty.call(message, "type_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type_id);
                if (message.object_data != null && Object.hasOwnProperty.call(message, "object_data"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.object_data);
                return writer;
            };
    
            /**
             * Encodes the specified SingleObject message, length delimited. Does not implicitly {@link CMsgSOMultipleObjects.SingleObject.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {CMsgSOMultipleObjects.ISingleObject} message SingleObject message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SingleObject.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SingleObject message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSOMultipleObjects.SingleObject} SingleObject
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SingleObject.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOMultipleObjects.SingleObject();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.type_id = reader.int32();
                            break;
                        }
                    case 2: {
                            message.object_data = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SingleObject message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSOMultipleObjects.SingleObject} SingleObject
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SingleObject.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SingleObject message.
             * @function verify
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SingleObject.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type_id != null && message.hasOwnProperty("type_id"))
                    if (!$util.isInteger(message.type_id))
                        return "type_id: integer expected";
                if (message.object_data != null && message.hasOwnProperty("object_data"))
                    if (!(message.object_data && typeof message.object_data.length === "number" || $util.isString(message.object_data)))
                        return "object_data: buffer expected";
                return null;
            };
    
            /**
             * Creates a SingleObject message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSOMultipleObjects.SingleObject} SingleObject
             */
            SingleObject.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSOMultipleObjects.SingleObject)
                    return object;
                var message = new $root.CMsgSOMultipleObjects.SingleObject();
                if (object.type_id != null)
                    message.type_id = object.type_id | 0;
                if (object.object_data != null)
                    if (typeof object.object_data === "string")
                        $util.base64.decode(object.object_data, message.object_data = $util.newBuffer($util.base64.length(object.object_data)), 0);
                    else if (object.object_data.length >= 0)
                        message.object_data = object.object_data;
                return message;
            };
    
            /**
             * Creates a plain object from a SingleObject message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {CMsgSOMultipleObjects.SingleObject} message SingleObject
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SingleObject.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.type_id = 0;
                    if (options.bytes === String)
                        object.object_data = "";
                    else {
                        object.object_data = [];
                        if (options.bytes !== Array)
                            object.object_data = $util.newBuffer(object.object_data);
                    }
                }
                if (message.type_id != null && message.hasOwnProperty("type_id"))
                    object.type_id = message.type_id;
                if (message.object_data != null && message.hasOwnProperty("object_data"))
                    object.object_data = options.bytes === String ? $util.base64.encode(message.object_data, 0, message.object_data.length) : options.bytes === Array ? Array.prototype.slice.call(message.object_data) : message.object_data;
                return object;
            };
    
            /**
             * Converts this SingleObject to JSON.
             * @function toJSON
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SingleObject.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SingleObject
             * @function getTypeUrl
             * @memberof CMsgSOMultipleObjects.SingleObject
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SingleObject.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSOMultipleObjects.SingleObject";
            };
    
            return SingleObject;
        })();
    
        return CMsgSOMultipleObjects;
    })();
    
    $root.CMsgSOCacheSubscribed = (function() {
    
        /**
         * Properties of a CMsgSOCacheSubscribed.
         * @exports ICMsgSOCacheSubscribed
         * @interface ICMsgSOCacheSubscribed
         * @property {Array.<CMsgSOCacheSubscribed.ISubscribedType>|null} [objects] CMsgSOCacheSubscribed objects
         * @property {number|Long|null} [version] CMsgSOCacheSubscribed version
         * @property {ICMsgSOIDOwner|null} [owner_soid] CMsgSOCacheSubscribed owner_soid
         */
    
        /**
         * Constructs a new CMsgSOCacheSubscribed.
         * @exports CMsgSOCacheSubscribed
         * @classdesc Represents a CMsgSOCacheSubscribed.
         * @implements ICMsgSOCacheSubscribed
         * @constructor
         * @param {ICMsgSOCacheSubscribed=} [properties] Properties to set
         */
        function CMsgSOCacheSubscribed(properties) {
            this.objects = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheSubscribed objects.
         * @member {Array.<CMsgSOCacheSubscribed.ISubscribedType>} objects
         * @memberof CMsgSOCacheSubscribed
         * @instance
         */
        CMsgSOCacheSubscribed.prototype.objects = $util.emptyArray;
    
        /**
         * CMsgSOCacheSubscribed version.
         * @member {number|Long} version
         * @memberof CMsgSOCacheSubscribed
         * @instance
         */
        CMsgSOCacheSubscribed.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgSOCacheSubscribed owner_soid.
         * @member {ICMsgSOIDOwner|null|undefined} owner_soid
         * @memberof CMsgSOCacheSubscribed
         * @instance
         */
        CMsgSOCacheSubscribed.prototype.owner_soid = null;
    
        /**
         * Creates a new CMsgSOCacheSubscribed instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {ICMsgSOCacheSubscribed=} [properties] Properties to set
         * @returns {CMsgSOCacheSubscribed} CMsgSOCacheSubscribed instance
         */
        CMsgSOCacheSubscribed.create = function create(properties) {
            return new CMsgSOCacheSubscribed(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscribed message. Does not implicitly {@link CMsgSOCacheSubscribed.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {ICMsgSOCacheSubscribed} message CMsgSOCacheSubscribed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscribed.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.objects != null && message.objects.length)
                for (var i = 0; i < message.objects.length; ++i)
                    $root.CMsgSOCacheSubscribed.SubscribedType.encode(message.objects[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.version);
            if (message.owner_soid != null && Object.hasOwnProperty.call(message, "owner_soid"))
                $root.CMsgSOIDOwner.encode(message.owner_soid, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscribed message, length delimited. Does not implicitly {@link CMsgSOCacheSubscribed.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {ICMsgSOCacheSubscribed} message CMsgSOCacheSubscribed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscribed.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheSubscribed message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheSubscribed} CMsgSOCacheSubscribed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscribed.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheSubscribed();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 2: {
                        if (!(message.objects && message.objects.length))
                            message.objects = [];
                        message.objects.push($root.CMsgSOCacheSubscribed.SubscribedType.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.version = reader.fixed64();
                        break;
                    }
                case 4: {
                        message.owner_soid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheSubscribed message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheSubscribed} CMsgSOCacheSubscribed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscribed.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheSubscribed message.
         * @function verify
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheSubscribed.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.objects != null && message.hasOwnProperty("objects")) {
                if (!Array.isArray(message.objects))
                    return "objects: array expected";
                for (var i = 0; i < message.objects.length; ++i) {
                    var error = $root.CMsgSOCacheSubscribed.SubscribedType.verify(message.objects[i]);
                    if (error)
                        return "objects." + error;
                }
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid")) {
                var error = $root.CMsgSOIDOwner.verify(message.owner_soid);
                if (error)
                    return "owner_soid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheSubscribed message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheSubscribed} CMsgSOCacheSubscribed
         */
        CMsgSOCacheSubscribed.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheSubscribed)
                return object;
            var message = new $root.CMsgSOCacheSubscribed();
            if (object.objects) {
                if (!Array.isArray(object.objects))
                    throw TypeError(".CMsgSOCacheSubscribed.objects: array expected");
                message.objects = [];
                for (var i = 0; i < object.objects.length; ++i) {
                    if (typeof object.objects[i] !== "object")
                        throw TypeError(".CMsgSOCacheSubscribed.objects: object expected");
                    message.objects[i] = $root.CMsgSOCacheSubscribed.SubscribedType.fromObject(object.objects[i]);
                }
            }
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            if (object.owner_soid != null) {
                if (typeof object.owner_soid !== "object")
                    throw TypeError(".CMsgSOCacheSubscribed.owner_soid: object expected");
                message.owner_soid = $root.CMsgSOIDOwner.fromObject(object.owner_soid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheSubscribed message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {CMsgSOCacheSubscribed} message CMsgSOCacheSubscribed
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheSubscribed.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.objects = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
                object.owner_soid = null;
            }
            if (message.objects && message.objects.length) {
                object.objects = [];
                for (var j = 0; j < message.objects.length; ++j)
                    object.objects[j] = $root.CMsgSOCacheSubscribed.SubscribedType.toObject(message.objects[j], options);
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid"))
                object.owner_soid = $root.CMsgSOIDOwner.toObject(message.owner_soid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheSubscribed to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheSubscribed
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheSubscribed.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheSubscribed
         * @function getTypeUrl
         * @memberof CMsgSOCacheSubscribed
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheSubscribed.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheSubscribed";
        };
    
        CMsgSOCacheSubscribed.SubscribedType = (function() {
    
            /**
             * Properties of a SubscribedType.
             * @memberof CMsgSOCacheSubscribed
             * @interface ISubscribedType
             * @property {number|null} [type_id] SubscribedType type_id
             * @property {Array.<Uint8Array>|null} [object_data] SubscribedType object_data
             */
    
            /**
             * Constructs a new SubscribedType.
             * @memberof CMsgSOCacheSubscribed
             * @classdesc Represents a SubscribedType.
             * @implements ISubscribedType
             * @constructor
             * @param {CMsgSOCacheSubscribed.ISubscribedType=} [properties] Properties to set
             */
            function SubscribedType(properties) {
                this.object_data = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SubscribedType type_id.
             * @member {number} type_id
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @instance
             */
            SubscribedType.prototype.type_id = 0;
    
            /**
             * SubscribedType object_data.
             * @member {Array.<Uint8Array>} object_data
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @instance
             */
            SubscribedType.prototype.object_data = $util.emptyArray;
    
            /**
             * Creates a new SubscribedType instance using the specified properties.
             * @function create
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {CMsgSOCacheSubscribed.ISubscribedType=} [properties] Properties to set
             * @returns {CMsgSOCacheSubscribed.SubscribedType} SubscribedType instance
             */
            SubscribedType.create = function create(properties) {
                return new SubscribedType(properties);
            };
    
            /**
             * Encodes the specified SubscribedType message. Does not implicitly {@link CMsgSOCacheSubscribed.SubscribedType.verify|verify} messages.
             * @function encode
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {CMsgSOCacheSubscribed.ISubscribedType} message SubscribedType message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SubscribedType.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type_id != null && Object.hasOwnProperty.call(message, "type_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type_id);
                if (message.object_data != null && message.object_data.length)
                    for (var i = 0; i < message.object_data.length; ++i)
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.object_data[i]);
                return writer;
            };
    
            /**
             * Encodes the specified SubscribedType message, length delimited. Does not implicitly {@link CMsgSOCacheSubscribed.SubscribedType.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {CMsgSOCacheSubscribed.ISubscribedType} message SubscribedType message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SubscribedType.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SubscribedType message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSOCacheSubscribed.SubscribedType} SubscribedType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SubscribedType.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheSubscribed.SubscribedType();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.type_id = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.object_data && message.object_data.length))
                                message.object_data = [];
                            message.object_data.push(reader.bytes());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SubscribedType message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSOCacheSubscribed.SubscribedType} SubscribedType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SubscribedType.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SubscribedType message.
             * @function verify
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SubscribedType.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type_id != null && message.hasOwnProperty("type_id"))
                    if (!$util.isInteger(message.type_id))
                        return "type_id: integer expected";
                if (message.object_data != null && message.hasOwnProperty("object_data")) {
                    if (!Array.isArray(message.object_data))
                        return "object_data: array expected";
                    for (var i = 0; i < message.object_data.length; ++i)
                        if (!(message.object_data[i] && typeof message.object_data[i].length === "number" || $util.isString(message.object_data[i])))
                            return "object_data: buffer[] expected";
                }
                return null;
            };
    
            /**
             * Creates a SubscribedType message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSOCacheSubscribed.SubscribedType} SubscribedType
             */
            SubscribedType.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSOCacheSubscribed.SubscribedType)
                    return object;
                var message = new $root.CMsgSOCacheSubscribed.SubscribedType();
                if (object.type_id != null)
                    message.type_id = object.type_id | 0;
                if (object.object_data) {
                    if (!Array.isArray(object.object_data))
                        throw TypeError(".CMsgSOCacheSubscribed.SubscribedType.object_data: array expected");
                    message.object_data = [];
                    for (var i = 0; i < object.object_data.length; ++i)
                        if (typeof object.object_data[i] === "string")
                            $util.base64.decode(object.object_data[i], message.object_data[i] = $util.newBuffer($util.base64.length(object.object_data[i])), 0);
                        else if (object.object_data[i].length >= 0)
                            message.object_data[i] = object.object_data[i];
                }
                return message;
            };
    
            /**
             * Creates a plain object from a SubscribedType message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {CMsgSOCacheSubscribed.SubscribedType} message SubscribedType
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SubscribedType.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.object_data = [];
                if (options.defaults)
                    object.type_id = 0;
                if (message.type_id != null && message.hasOwnProperty("type_id"))
                    object.type_id = message.type_id;
                if (message.object_data && message.object_data.length) {
                    object.object_data = [];
                    for (var j = 0; j < message.object_data.length; ++j)
                        object.object_data[j] = options.bytes === String ? $util.base64.encode(message.object_data[j], 0, message.object_data[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.object_data[j]) : message.object_data[j];
                }
                return object;
            };
    
            /**
             * Converts this SubscribedType to JSON.
             * @function toJSON
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SubscribedType.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SubscribedType
             * @function getTypeUrl
             * @memberof CMsgSOCacheSubscribed.SubscribedType
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SubscribedType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSOCacheSubscribed.SubscribedType";
            };
    
            return SubscribedType;
        })();
    
        return CMsgSOCacheSubscribed;
    })();
    
    $root.CMsgSOCacheUnsubscribed = (function() {
    
        /**
         * Properties of a CMsgSOCacheUnsubscribed.
         * @exports ICMsgSOCacheUnsubscribed
         * @interface ICMsgSOCacheUnsubscribed
         * @property {ICMsgSOIDOwner|null} [owner_soid] CMsgSOCacheUnsubscribed owner_soid
         */
    
        /**
         * Constructs a new CMsgSOCacheUnsubscribed.
         * @exports CMsgSOCacheUnsubscribed
         * @classdesc Represents a CMsgSOCacheUnsubscribed.
         * @implements ICMsgSOCacheUnsubscribed
         * @constructor
         * @param {ICMsgSOCacheUnsubscribed=} [properties] Properties to set
         */
        function CMsgSOCacheUnsubscribed(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheUnsubscribed owner_soid.
         * @member {ICMsgSOIDOwner|null|undefined} owner_soid
         * @memberof CMsgSOCacheUnsubscribed
         * @instance
         */
        CMsgSOCacheUnsubscribed.prototype.owner_soid = null;
    
        /**
         * Creates a new CMsgSOCacheUnsubscribed instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {ICMsgSOCacheUnsubscribed=} [properties] Properties to set
         * @returns {CMsgSOCacheUnsubscribed} CMsgSOCacheUnsubscribed instance
         */
        CMsgSOCacheUnsubscribed.create = function create(properties) {
            return new CMsgSOCacheUnsubscribed(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheUnsubscribed message. Does not implicitly {@link CMsgSOCacheUnsubscribed.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {ICMsgSOCacheUnsubscribed} message CMsgSOCacheUnsubscribed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheUnsubscribed.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.owner_soid != null && Object.hasOwnProperty.call(message, "owner_soid"))
                $root.CMsgSOIDOwner.encode(message.owner_soid, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheUnsubscribed message, length delimited. Does not implicitly {@link CMsgSOCacheUnsubscribed.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {ICMsgSOCacheUnsubscribed} message CMsgSOCacheUnsubscribed message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheUnsubscribed.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheUnsubscribed message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheUnsubscribed} CMsgSOCacheUnsubscribed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheUnsubscribed.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheUnsubscribed();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 2: {
                        message.owner_soid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheUnsubscribed message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheUnsubscribed} CMsgSOCacheUnsubscribed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheUnsubscribed.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheUnsubscribed message.
         * @function verify
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheUnsubscribed.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid")) {
                var error = $root.CMsgSOIDOwner.verify(message.owner_soid);
                if (error)
                    return "owner_soid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheUnsubscribed message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheUnsubscribed} CMsgSOCacheUnsubscribed
         */
        CMsgSOCacheUnsubscribed.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheUnsubscribed)
                return object;
            var message = new $root.CMsgSOCacheUnsubscribed();
            if (object.owner_soid != null) {
                if (typeof object.owner_soid !== "object")
                    throw TypeError(".CMsgSOCacheUnsubscribed.owner_soid: object expected");
                message.owner_soid = $root.CMsgSOIDOwner.fromObject(object.owner_soid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheUnsubscribed message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {CMsgSOCacheUnsubscribed} message CMsgSOCacheUnsubscribed
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheUnsubscribed.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.owner_soid = null;
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid"))
                object.owner_soid = $root.CMsgSOIDOwner.toObject(message.owner_soid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheUnsubscribed to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheUnsubscribed
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheUnsubscribed.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheUnsubscribed
         * @function getTypeUrl
         * @memberof CMsgSOCacheUnsubscribed
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheUnsubscribed.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheUnsubscribed";
        };
    
        return CMsgSOCacheUnsubscribed;
    })();
    
    $root.CMsgSOCacheSubscriptionCheck = (function() {
    
        /**
         * Properties of a CMsgSOCacheSubscriptionCheck.
         * @exports ICMsgSOCacheSubscriptionCheck
         * @interface ICMsgSOCacheSubscriptionCheck
         * @property {number|Long|null} [version] CMsgSOCacheSubscriptionCheck version
         * @property {ICMsgSOIDOwner|null} [owner_soid] CMsgSOCacheSubscriptionCheck owner_soid
         */
    
        /**
         * Constructs a new CMsgSOCacheSubscriptionCheck.
         * @exports CMsgSOCacheSubscriptionCheck
         * @classdesc Represents a CMsgSOCacheSubscriptionCheck.
         * @implements ICMsgSOCacheSubscriptionCheck
         * @constructor
         * @param {ICMsgSOCacheSubscriptionCheck=} [properties] Properties to set
         */
        function CMsgSOCacheSubscriptionCheck(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheSubscriptionCheck version.
         * @member {number|Long} version
         * @memberof CMsgSOCacheSubscriptionCheck
         * @instance
         */
        CMsgSOCacheSubscriptionCheck.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgSOCacheSubscriptionCheck owner_soid.
         * @member {ICMsgSOIDOwner|null|undefined} owner_soid
         * @memberof CMsgSOCacheSubscriptionCheck
         * @instance
         */
        CMsgSOCacheSubscriptionCheck.prototype.owner_soid = null;
    
        /**
         * Creates a new CMsgSOCacheSubscriptionCheck instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {ICMsgSOCacheSubscriptionCheck=} [properties] Properties to set
         * @returns {CMsgSOCacheSubscriptionCheck} CMsgSOCacheSubscriptionCheck instance
         */
        CMsgSOCacheSubscriptionCheck.create = function create(properties) {
            return new CMsgSOCacheSubscriptionCheck(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscriptionCheck message. Does not implicitly {@link CMsgSOCacheSubscriptionCheck.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {ICMsgSOCacheSubscriptionCheck} message CMsgSOCacheSubscriptionCheck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscriptionCheck.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.version);
            if (message.owner_soid != null && Object.hasOwnProperty.call(message, "owner_soid"))
                $root.CMsgSOIDOwner.encode(message.owner_soid, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscriptionCheck message, length delimited. Does not implicitly {@link CMsgSOCacheSubscriptionCheck.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {ICMsgSOCacheSubscriptionCheck} message CMsgSOCacheSubscriptionCheck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscriptionCheck.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheSubscriptionCheck message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheSubscriptionCheck} CMsgSOCacheSubscriptionCheck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscriptionCheck.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheSubscriptionCheck();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 2: {
                        message.version = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.owner_soid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheSubscriptionCheck message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheSubscriptionCheck} CMsgSOCacheSubscriptionCheck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscriptionCheck.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheSubscriptionCheck message.
         * @function verify
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheSubscriptionCheck.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid")) {
                var error = $root.CMsgSOIDOwner.verify(message.owner_soid);
                if (error)
                    return "owner_soid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheSubscriptionCheck message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheSubscriptionCheck} CMsgSOCacheSubscriptionCheck
         */
        CMsgSOCacheSubscriptionCheck.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheSubscriptionCheck)
                return object;
            var message = new $root.CMsgSOCacheSubscriptionCheck();
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            if (object.owner_soid != null) {
                if (typeof object.owner_soid !== "object")
                    throw TypeError(".CMsgSOCacheSubscriptionCheck.owner_soid: object expected");
                message.owner_soid = $root.CMsgSOIDOwner.fromObject(object.owner_soid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheSubscriptionCheck message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {CMsgSOCacheSubscriptionCheck} message CMsgSOCacheSubscriptionCheck
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheSubscriptionCheck.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
                object.owner_soid = null;
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid"))
                object.owner_soid = $root.CMsgSOIDOwner.toObject(message.owner_soid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheSubscriptionCheck to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheSubscriptionCheck
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheSubscriptionCheck.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheSubscriptionCheck
         * @function getTypeUrl
         * @memberof CMsgSOCacheSubscriptionCheck
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheSubscriptionCheck.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheSubscriptionCheck";
        };
    
        return CMsgSOCacheSubscriptionCheck;
    })();
    
    $root.CMsgSOCacheSubscriptionRefresh = (function() {
    
        /**
         * Properties of a CMsgSOCacheSubscriptionRefresh.
         * @exports ICMsgSOCacheSubscriptionRefresh
         * @interface ICMsgSOCacheSubscriptionRefresh
         * @property {ICMsgSOIDOwner|null} [owner_soid] CMsgSOCacheSubscriptionRefresh owner_soid
         */
    
        /**
         * Constructs a new CMsgSOCacheSubscriptionRefresh.
         * @exports CMsgSOCacheSubscriptionRefresh
         * @classdesc Represents a CMsgSOCacheSubscriptionRefresh.
         * @implements ICMsgSOCacheSubscriptionRefresh
         * @constructor
         * @param {ICMsgSOCacheSubscriptionRefresh=} [properties] Properties to set
         */
        function CMsgSOCacheSubscriptionRefresh(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheSubscriptionRefresh owner_soid.
         * @member {ICMsgSOIDOwner|null|undefined} owner_soid
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @instance
         */
        CMsgSOCacheSubscriptionRefresh.prototype.owner_soid = null;
    
        /**
         * Creates a new CMsgSOCacheSubscriptionRefresh instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {ICMsgSOCacheSubscriptionRefresh=} [properties] Properties to set
         * @returns {CMsgSOCacheSubscriptionRefresh} CMsgSOCacheSubscriptionRefresh instance
         */
        CMsgSOCacheSubscriptionRefresh.create = function create(properties) {
            return new CMsgSOCacheSubscriptionRefresh(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscriptionRefresh message. Does not implicitly {@link CMsgSOCacheSubscriptionRefresh.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {ICMsgSOCacheSubscriptionRefresh} message CMsgSOCacheSubscriptionRefresh message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscriptionRefresh.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.owner_soid != null && Object.hasOwnProperty.call(message, "owner_soid"))
                $root.CMsgSOIDOwner.encode(message.owner_soid, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheSubscriptionRefresh message, length delimited. Does not implicitly {@link CMsgSOCacheSubscriptionRefresh.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {ICMsgSOCacheSubscriptionRefresh} message CMsgSOCacheSubscriptionRefresh message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheSubscriptionRefresh.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheSubscriptionRefresh message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheSubscriptionRefresh} CMsgSOCacheSubscriptionRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscriptionRefresh.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheSubscriptionRefresh();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 2: {
                        message.owner_soid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheSubscriptionRefresh message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheSubscriptionRefresh} CMsgSOCacheSubscriptionRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheSubscriptionRefresh.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheSubscriptionRefresh message.
         * @function verify
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheSubscriptionRefresh.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid")) {
                var error = $root.CMsgSOIDOwner.verify(message.owner_soid);
                if (error)
                    return "owner_soid." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheSubscriptionRefresh message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheSubscriptionRefresh} CMsgSOCacheSubscriptionRefresh
         */
        CMsgSOCacheSubscriptionRefresh.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheSubscriptionRefresh)
                return object;
            var message = new $root.CMsgSOCacheSubscriptionRefresh();
            if (object.owner_soid != null) {
                if (typeof object.owner_soid !== "object")
                    throw TypeError(".CMsgSOCacheSubscriptionRefresh.owner_soid: object expected");
                message.owner_soid = $root.CMsgSOIDOwner.fromObject(object.owner_soid);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheSubscriptionRefresh message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {CMsgSOCacheSubscriptionRefresh} message CMsgSOCacheSubscriptionRefresh
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheSubscriptionRefresh.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.owner_soid = null;
            if (message.owner_soid != null && message.hasOwnProperty("owner_soid"))
                object.owner_soid = $root.CMsgSOIDOwner.toObject(message.owner_soid, options);
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheSubscriptionRefresh to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheSubscriptionRefresh.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheSubscriptionRefresh
         * @function getTypeUrl
         * @memberof CMsgSOCacheSubscriptionRefresh
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheSubscriptionRefresh.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheSubscriptionRefresh";
        };
    
        return CMsgSOCacheSubscriptionRefresh;
    })();
    
    $root.CMsgSOCacheVersion = (function() {
    
        /**
         * Properties of a CMsgSOCacheVersion.
         * @exports ICMsgSOCacheVersion
         * @interface ICMsgSOCacheVersion
         * @property {number|Long|null} [version] CMsgSOCacheVersion version
         */
    
        /**
         * Constructs a new CMsgSOCacheVersion.
         * @exports CMsgSOCacheVersion
         * @classdesc Represents a CMsgSOCacheVersion.
         * @implements ICMsgSOCacheVersion
         * @constructor
         * @param {ICMsgSOCacheVersion=} [properties] Properties to set
         */
        function CMsgSOCacheVersion(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheVersion version.
         * @member {number|Long} version
         * @memberof CMsgSOCacheVersion
         * @instance
         */
        CMsgSOCacheVersion.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgSOCacheVersion instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {ICMsgSOCacheVersion=} [properties] Properties to set
         * @returns {CMsgSOCacheVersion} CMsgSOCacheVersion instance
         */
        CMsgSOCacheVersion.create = function create(properties) {
            return new CMsgSOCacheVersion(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheVersion message. Does not implicitly {@link CMsgSOCacheVersion.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {ICMsgSOCacheVersion} message CMsgSOCacheVersion message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheVersion.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.version);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheVersion message, length delimited. Does not implicitly {@link CMsgSOCacheVersion.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {ICMsgSOCacheVersion} message CMsgSOCacheVersion message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheVersion.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheVersion message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheVersion} CMsgSOCacheVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheVersion.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheVersion();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.version = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheVersion message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheVersion} CMsgSOCacheVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheVersion.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheVersion message.
         * @function verify
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheVersion.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheVersion message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheVersion} CMsgSOCacheVersion
         */
        CMsgSOCacheVersion.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheVersion)
                return object;
            var message = new $root.CMsgSOCacheVersion();
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheVersion message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {CMsgSOCacheVersion} message CMsgSOCacheVersion
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheVersion.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheVersion to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheVersion
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheVersion.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheVersion
         * @function getTypeUrl
         * @memberof CMsgSOCacheVersion
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheVersion";
        };
    
        return CMsgSOCacheVersion;
    })();
    
    $root.CMsgAccountDetails = (function() {
    
        /**
         * Properties of a CMsgAccountDetails.
         * @exports ICMsgAccountDetails
         * @interface ICMsgAccountDetails
         * @property {boolean|null} [valid] CMsgAccountDetails valid
         * @property {string|null} [account_name] CMsgAccountDetails account_name
         * @property {boolean|null} [public_profile] CMsgAccountDetails public_profile
         * @property {boolean|null} [public_inventory] CMsgAccountDetails public_inventory
         * @property {boolean|null} [vac_banned] CMsgAccountDetails vac_banned
         * @property {boolean|null} [cyber_cafe] CMsgAccountDetails cyber_cafe
         * @property {boolean|null} [school_account] CMsgAccountDetails school_account
         * @property {boolean|null} [free_trial_account] CMsgAccountDetails free_trial_account
         * @property {boolean|null} [subscribed] CMsgAccountDetails subscribed
         * @property {boolean|null} [low_violence] CMsgAccountDetails low_violence
         * @property {boolean|null} [limited] CMsgAccountDetails limited
         * @property {boolean|null} [trusted] CMsgAccountDetails trusted
         * @property {number|null} ["package"] CMsgAccountDetails package
         * @property {number|null} [time_cached] CMsgAccountDetails time_cached
         * @property {boolean|null} [account_locked] CMsgAccountDetails account_locked
         * @property {boolean|null} [community_banned] CMsgAccountDetails community_banned
         * @property {boolean|null} [trade_banned] CMsgAccountDetails trade_banned
         * @property {boolean|null} [eligible_for_community_market] CMsgAccountDetails eligible_for_community_market
         */
    
        /**
         * Constructs a new CMsgAccountDetails.
         * @exports CMsgAccountDetails
         * @classdesc Represents a CMsgAccountDetails.
         * @implements ICMsgAccountDetails
         * @constructor
         * @param {ICMsgAccountDetails=} [properties] Properties to set
         */
        function CMsgAccountDetails(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAccountDetails valid.
         * @member {boolean} valid
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.valid = false;
    
        /**
         * CMsgAccountDetails account_name.
         * @member {string} account_name
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.account_name = "";
    
        /**
         * CMsgAccountDetails public_profile.
         * @member {boolean} public_profile
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.public_profile = false;
    
        /**
         * CMsgAccountDetails public_inventory.
         * @member {boolean} public_inventory
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.public_inventory = false;
    
        /**
         * CMsgAccountDetails vac_banned.
         * @member {boolean} vac_banned
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.vac_banned = false;
    
        /**
         * CMsgAccountDetails cyber_cafe.
         * @member {boolean} cyber_cafe
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.cyber_cafe = false;
    
        /**
         * CMsgAccountDetails school_account.
         * @member {boolean} school_account
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.school_account = false;
    
        /**
         * CMsgAccountDetails free_trial_account.
         * @member {boolean} free_trial_account
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.free_trial_account = false;
    
        /**
         * CMsgAccountDetails subscribed.
         * @member {boolean} subscribed
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.subscribed = false;
    
        /**
         * CMsgAccountDetails low_violence.
         * @member {boolean} low_violence
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.low_violence = false;
    
        /**
         * CMsgAccountDetails limited.
         * @member {boolean} limited
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.limited = false;
    
        /**
         * CMsgAccountDetails trusted.
         * @member {boolean} trusted
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.trusted = false;
    
        /**
         * CMsgAccountDetails package.
         * @member {number} package
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype["package"] = 0;
    
        /**
         * CMsgAccountDetails time_cached.
         * @member {number} time_cached
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.time_cached = 0;
    
        /**
         * CMsgAccountDetails account_locked.
         * @member {boolean} account_locked
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.account_locked = false;
    
        /**
         * CMsgAccountDetails community_banned.
         * @member {boolean} community_banned
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.community_banned = false;
    
        /**
         * CMsgAccountDetails trade_banned.
         * @member {boolean} trade_banned
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.trade_banned = false;
    
        /**
         * CMsgAccountDetails eligible_for_community_market.
         * @member {boolean} eligible_for_community_market
         * @memberof CMsgAccountDetails
         * @instance
         */
        CMsgAccountDetails.prototype.eligible_for_community_market = false;
    
        /**
         * Creates a new CMsgAccountDetails instance using the specified properties.
         * @function create
         * @memberof CMsgAccountDetails
         * @static
         * @param {ICMsgAccountDetails=} [properties] Properties to set
         * @returns {CMsgAccountDetails} CMsgAccountDetails instance
         */
        CMsgAccountDetails.create = function create(properties) {
            return new CMsgAccountDetails(properties);
        };
    
        /**
         * Encodes the specified CMsgAccountDetails message. Does not implicitly {@link CMsgAccountDetails.verify|verify} messages.
         * @function encode
         * @memberof CMsgAccountDetails
         * @static
         * @param {ICMsgAccountDetails} message CMsgAccountDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAccountDetails.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.valid != null && Object.hasOwnProperty.call(message, "valid"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.valid);
            if (message.account_name != null && Object.hasOwnProperty.call(message, "account_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.account_name);
            if (message.public_profile != null && Object.hasOwnProperty.call(message, "public_profile"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.public_profile);
            if (message.public_inventory != null && Object.hasOwnProperty.call(message, "public_inventory"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.public_inventory);
            if (message.vac_banned != null && Object.hasOwnProperty.call(message, "vac_banned"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.vac_banned);
            if (message.cyber_cafe != null && Object.hasOwnProperty.call(message, "cyber_cafe"))
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.cyber_cafe);
            if (message.school_account != null && Object.hasOwnProperty.call(message, "school_account"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.school_account);
            if (message.free_trial_account != null && Object.hasOwnProperty.call(message, "free_trial_account"))
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.free_trial_account);
            if (message.subscribed != null && Object.hasOwnProperty.call(message, "subscribed"))
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.subscribed);
            if (message.low_violence != null && Object.hasOwnProperty.call(message, "low_violence"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.low_violence);
            if (message.limited != null && Object.hasOwnProperty.call(message, "limited"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.limited);
            if (message.trusted != null && Object.hasOwnProperty.call(message, "trusted"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.trusted);
            if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message["package"]);
            if (message.time_cached != null && Object.hasOwnProperty.call(message, "time_cached"))
                writer.uint32(/* id 15, wireType 5 =*/125).fixed32(message.time_cached);
            if (message.account_locked != null && Object.hasOwnProperty.call(message, "account_locked"))
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.account_locked);
            if (message.community_banned != null && Object.hasOwnProperty.call(message, "community_banned"))
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.community_banned);
            if (message.trade_banned != null && Object.hasOwnProperty.call(message, "trade_banned"))
                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.trade_banned);
            if (message.eligible_for_community_market != null && Object.hasOwnProperty.call(message, "eligible_for_community_market"))
                writer.uint32(/* id 19, wireType 0 =*/152).bool(message.eligible_for_community_market);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAccountDetails message, length delimited. Does not implicitly {@link CMsgAccountDetails.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAccountDetails
         * @static
         * @param {ICMsgAccountDetails} message CMsgAccountDetails message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAccountDetails.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAccountDetails message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAccountDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAccountDetails} CMsgAccountDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAccountDetails.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAccountDetails();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.valid = reader.bool();
                        break;
                    }
                case 2: {
                        message.account_name = reader.string();
                        break;
                    }
                case 4: {
                        message.public_profile = reader.bool();
                        break;
                    }
                case 5: {
                        message.public_inventory = reader.bool();
                        break;
                    }
                case 6: {
                        message.vac_banned = reader.bool();
                        break;
                    }
                case 7: {
                        message.cyber_cafe = reader.bool();
                        break;
                    }
                case 8: {
                        message.school_account = reader.bool();
                        break;
                    }
                case 9: {
                        message.free_trial_account = reader.bool();
                        break;
                    }
                case 10: {
                        message.subscribed = reader.bool();
                        break;
                    }
                case 11: {
                        message.low_violence = reader.bool();
                        break;
                    }
                case 12: {
                        message.limited = reader.bool();
                        break;
                    }
                case 13: {
                        message.trusted = reader.bool();
                        break;
                    }
                case 14: {
                        message["package"] = reader.uint32();
                        break;
                    }
                case 15: {
                        message.time_cached = reader.fixed32();
                        break;
                    }
                case 16: {
                        message.account_locked = reader.bool();
                        break;
                    }
                case 17: {
                        message.community_banned = reader.bool();
                        break;
                    }
                case 18: {
                        message.trade_banned = reader.bool();
                        break;
                    }
                case 19: {
                        message.eligible_for_community_market = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAccountDetails message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAccountDetails
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAccountDetails} CMsgAccountDetails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAccountDetails.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAccountDetails message.
         * @function verify
         * @memberof CMsgAccountDetails
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAccountDetails.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.valid != null && message.hasOwnProperty("valid"))
                if (typeof message.valid !== "boolean")
                    return "valid: boolean expected";
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                if (!$util.isString(message.account_name))
                    return "account_name: string expected";
            if (message.public_profile != null && message.hasOwnProperty("public_profile"))
                if (typeof message.public_profile !== "boolean")
                    return "public_profile: boolean expected";
            if (message.public_inventory != null && message.hasOwnProperty("public_inventory"))
                if (typeof message.public_inventory !== "boolean")
                    return "public_inventory: boolean expected";
            if (message.vac_banned != null && message.hasOwnProperty("vac_banned"))
                if (typeof message.vac_banned !== "boolean")
                    return "vac_banned: boolean expected";
            if (message.cyber_cafe != null && message.hasOwnProperty("cyber_cafe"))
                if (typeof message.cyber_cafe !== "boolean")
                    return "cyber_cafe: boolean expected";
            if (message.school_account != null && message.hasOwnProperty("school_account"))
                if (typeof message.school_account !== "boolean")
                    return "school_account: boolean expected";
            if (message.free_trial_account != null && message.hasOwnProperty("free_trial_account"))
                if (typeof message.free_trial_account !== "boolean")
                    return "free_trial_account: boolean expected";
            if (message.subscribed != null && message.hasOwnProperty("subscribed"))
                if (typeof message.subscribed !== "boolean")
                    return "subscribed: boolean expected";
            if (message.low_violence != null && message.hasOwnProperty("low_violence"))
                if (typeof message.low_violence !== "boolean")
                    return "low_violence: boolean expected";
            if (message.limited != null && message.hasOwnProperty("limited"))
                if (typeof message.limited !== "boolean")
                    return "limited: boolean expected";
            if (message.trusted != null && message.hasOwnProperty("trusted"))
                if (typeof message.trusted !== "boolean")
                    return "trusted: boolean expected";
            if (message["package"] != null && message.hasOwnProperty("package"))
                if (!$util.isInteger(message["package"]))
                    return "package: integer expected";
            if (message.time_cached != null && message.hasOwnProperty("time_cached"))
                if (!$util.isInteger(message.time_cached))
                    return "time_cached: integer expected";
            if (message.account_locked != null && message.hasOwnProperty("account_locked"))
                if (typeof message.account_locked !== "boolean")
                    return "account_locked: boolean expected";
            if (message.community_banned != null && message.hasOwnProperty("community_banned"))
                if (typeof message.community_banned !== "boolean")
                    return "community_banned: boolean expected";
            if (message.trade_banned != null && message.hasOwnProperty("trade_banned"))
                if (typeof message.trade_banned !== "boolean")
                    return "trade_banned: boolean expected";
            if (message.eligible_for_community_market != null && message.hasOwnProperty("eligible_for_community_market"))
                if (typeof message.eligible_for_community_market !== "boolean")
                    return "eligible_for_community_market: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgAccountDetails message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAccountDetails
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAccountDetails} CMsgAccountDetails
         */
        CMsgAccountDetails.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAccountDetails)
                return object;
            var message = new $root.CMsgAccountDetails();
            if (object.valid != null)
                message.valid = Boolean(object.valid);
            if (object.account_name != null)
                message.account_name = String(object.account_name);
            if (object.public_profile != null)
                message.public_profile = Boolean(object.public_profile);
            if (object.public_inventory != null)
                message.public_inventory = Boolean(object.public_inventory);
            if (object.vac_banned != null)
                message.vac_banned = Boolean(object.vac_banned);
            if (object.cyber_cafe != null)
                message.cyber_cafe = Boolean(object.cyber_cafe);
            if (object.school_account != null)
                message.school_account = Boolean(object.school_account);
            if (object.free_trial_account != null)
                message.free_trial_account = Boolean(object.free_trial_account);
            if (object.subscribed != null)
                message.subscribed = Boolean(object.subscribed);
            if (object.low_violence != null)
                message.low_violence = Boolean(object.low_violence);
            if (object.limited != null)
                message.limited = Boolean(object.limited);
            if (object.trusted != null)
                message.trusted = Boolean(object.trusted);
            if (object["package"] != null)
                message["package"] = object["package"] >>> 0;
            if (object.time_cached != null)
                message.time_cached = object.time_cached >>> 0;
            if (object.account_locked != null)
                message.account_locked = Boolean(object.account_locked);
            if (object.community_banned != null)
                message.community_banned = Boolean(object.community_banned);
            if (object.trade_banned != null)
                message.trade_banned = Boolean(object.trade_banned);
            if (object.eligible_for_community_market != null)
                message.eligible_for_community_market = Boolean(object.eligible_for_community_market);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAccountDetails message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAccountDetails
         * @static
         * @param {CMsgAccountDetails} message CMsgAccountDetails
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAccountDetails.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.valid = false;
                object.account_name = "";
                object.public_profile = false;
                object.public_inventory = false;
                object.vac_banned = false;
                object.cyber_cafe = false;
                object.school_account = false;
                object.free_trial_account = false;
                object.subscribed = false;
                object.low_violence = false;
                object.limited = false;
                object.trusted = false;
                object["package"] = 0;
                object.time_cached = 0;
                object.account_locked = false;
                object.community_banned = false;
                object.trade_banned = false;
                object.eligible_for_community_market = false;
            }
            if (message.valid != null && message.hasOwnProperty("valid"))
                object.valid = message.valid;
            if (message.account_name != null && message.hasOwnProperty("account_name"))
                object.account_name = message.account_name;
            if (message.public_profile != null && message.hasOwnProperty("public_profile"))
                object.public_profile = message.public_profile;
            if (message.public_inventory != null && message.hasOwnProperty("public_inventory"))
                object.public_inventory = message.public_inventory;
            if (message.vac_banned != null && message.hasOwnProperty("vac_banned"))
                object.vac_banned = message.vac_banned;
            if (message.cyber_cafe != null && message.hasOwnProperty("cyber_cafe"))
                object.cyber_cafe = message.cyber_cafe;
            if (message.school_account != null && message.hasOwnProperty("school_account"))
                object.school_account = message.school_account;
            if (message.free_trial_account != null && message.hasOwnProperty("free_trial_account"))
                object.free_trial_account = message.free_trial_account;
            if (message.subscribed != null && message.hasOwnProperty("subscribed"))
                object.subscribed = message.subscribed;
            if (message.low_violence != null && message.hasOwnProperty("low_violence"))
                object.low_violence = message.low_violence;
            if (message.limited != null && message.hasOwnProperty("limited"))
                object.limited = message.limited;
            if (message.trusted != null && message.hasOwnProperty("trusted"))
                object.trusted = message.trusted;
            if (message["package"] != null && message.hasOwnProperty("package"))
                object["package"] = message["package"];
            if (message.time_cached != null && message.hasOwnProperty("time_cached"))
                object.time_cached = message.time_cached;
            if (message.account_locked != null && message.hasOwnProperty("account_locked"))
                object.account_locked = message.account_locked;
            if (message.community_banned != null && message.hasOwnProperty("community_banned"))
                object.community_banned = message.community_banned;
            if (message.trade_banned != null && message.hasOwnProperty("trade_banned"))
                object.trade_banned = message.trade_banned;
            if (message.eligible_for_community_market != null && message.hasOwnProperty("eligible_for_community_market"))
                object.eligible_for_community_market = message.eligible_for_community_market;
            return object;
        };
    
        /**
         * Converts this CMsgAccountDetails to JSON.
         * @function toJSON
         * @memberof CMsgAccountDetails
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAccountDetails.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAccountDetails
         * @function getTypeUrl
         * @memberof CMsgAccountDetails
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAccountDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAccountDetails";
        };
    
        return CMsgAccountDetails;
    })();
    
    $root.CMsgGCMultiplexMessage = (function() {
    
        /**
         * Properties of a CMsgGCMultiplexMessage.
         * @exports ICMsgGCMultiplexMessage
         * @interface ICMsgGCMultiplexMessage
         * @property {number|null} [msgtype] CMsgGCMultiplexMessage msgtype
         * @property {Uint8Array|null} [payload] CMsgGCMultiplexMessage payload
         * @property {Array.<number|Long>|null} [steamids] CMsgGCMultiplexMessage steamids
         * @property {boolean|null} [replytogc] CMsgGCMultiplexMessage replytogc
         */
    
        /**
         * Constructs a new CMsgGCMultiplexMessage.
         * @exports CMsgGCMultiplexMessage
         * @classdesc Represents a CMsgGCMultiplexMessage.
         * @implements ICMsgGCMultiplexMessage
         * @constructor
         * @param {ICMsgGCMultiplexMessage=} [properties] Properties to set
         */
        function CMsgGCMultiplexMessage(properties) {
            this.steamids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMultiplexMessage msgtype.
         * @member {number} msgtype
         * @memberof CMsgGCMultiplexMessage
         * @instance
         */
        CMsgGCMultiplexMessage.prototype.msgtype = 0;
    
        /**
         * CMsgGCMultiplexMessage payload.
         * @member {Uint8Array} payload
         * @memberof CMsgGCMultiplexMessage
         * @instance
         */
        CMsgGCMultiplexMessage.prototype.payload = $util.newBuffer([]);
    
        /**
         * CMsgGCMultiplexMessage steamids.
         * @member {Array.<number|Long>} steamids
         * @memberof CMsgGCMultiplexMessage
         * @instance
         */
        CMsgGCMultiplexMessage.prototype.steamids = $util.emptyArray;
    
        /**
         * CMsgGCMultiplexMessage replytogc.
         * @member {boolean} replytogc
         * @memberof CMsgGCMultiplexMessage
         * @instance
         */
        CMsgGCMultiplexMessage.prototype.replytogc = false;
    
        /**
         * Creates a new CMsgGCMultiplexMessage instance using the specified properties.
         * @function create
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {ICMsgGCMultiplexMessage=} [properties] Properties to set
         * @returns {CMsgGCMultiplexMessage} CMsgGCMultiplexMessage instance
         */
        CMsgGCMultiplexMessage.create = function create(properties) {
            return new CMsgGCMultiplexMessage(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMultiplexMessage message. Does not implicitly {@link CMsgGCMultiplexMessage.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {ICMsgGCMultiplexMessage} message CMsgGCMultiplexMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMultiplexMessage.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.msgtype != null && Object.hasOwnProperty.call(message, "msgtype"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msgtype);
            if (message.payload != null && Object.hasOwnProperty.call(message, "payload"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.payload);
            if (message.steamids != null && message.steamids.length)
                for (var i = 0; i < message.steamids.length; ++i)
                    writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.steamids[i]);
            if (message.replytogc != null && Object.hasOwnProperty.call(message, "replytogc"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.replytogc);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMultiplexMessage message, length delimited. Does not implicitly {@link CMsgGCMultiplexMessage.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {ICMsgGCMultiplexMessage} message CMsgGCMultiplexMessage message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMultiplexMessage.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMultiplexMessage message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMultiplexMessage} CMsgGCMultiplexMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMultiplexMessage.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMultiplexMessage();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.msgtype = reader.uint32();
                        break;
                    }
                case 2: {
                        message.payload = reader.bytes();
                        break;
                    }
                case 3: {
                        if (!(message.steamids && message.steamids.length))
                            message.steamids = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.steamids.push(reader.fixed64());
                        } else
                            message.steamids.push(reader.fixed64());
                        break;
                    }
                case 4: {
                        message.replytogc = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMultiplexMessage message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMultiplexMessage} CMsgGCMultiplexMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMultiplexMessage.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMultiplexMessage message.
         * @function verify
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMultiplexMessage.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                if (!$util.isInteger(message.msgtype))
                    return "msgtype: integer expected";
            if (message.payload != null && message.hasOwnProperty("payload"))
                if (!(message.payload && typeof message.payload.length === "number" || $util.isString(message.payload)))
                    return "payload: buffer expected";
            if (message.steamids != null && message.hasOwnProperty("steamids")) {
                if (!Array.isArray(message.steamids))
                    return "steamids: array expected";
                for (var i = 0; i < message.steamids.length; ++i)
                    if (!$util.isInteger(message.steamids[i]) && !(message.steamids[i] && $util.isInteger(message.steamids[i].low) && $util.isInteger(message.steamids[i].high)))
                        return "steamids: integer|Long[] expected";
            }
            if (message.replytogc != null && message.hasOwnProperty("replytogc"))
                if (typeof message.replytogc !== "boolean")
                    return "replytogc: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMultiplexMessage message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMultiplexMessage} CMsgGCMultiplexMessage
         */
        CMsgGCMultiplexMessage.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMultiplexMessage)
                return object;
            var message = new $root.CMsgGCMultiplexMessage();
            if (object.msgtype != null)
                message.msgtype = object.msgtype >>> 0;
            if (object.payload != null)
                if (typeof object.payload === "string")
                    $util.base64.decode(object.payload, message.payload = $util.newBuffer($util.base64.length(object.payload)), 0);
                else if (object.payload.length >= 0)
                    message.payload = object.payload;
            if (object.steamids) {
                if (!Array.isArray(object.steamids))
                    throw TypeError(".CMsgGCMultiplexMessage.steamids: array expected");
                message.steamids = [];
                for (var i = 0; i < object.steamids.length; ++i)
                    if ($util.Long)
                        (message.steamids[i] = $util.Long.fromValue(object.steamids[i])).unsigned = false;
                    else if (typeof object.steamids[i] === "string")
                        message.steamids[i] = parseInt(object.steamids[i], 10);
                    else if (typeof object.steamids[i] === "number")
                        message.steamids[i] = object.steamids[i];
                    else if (typeof object.steamids[i] === "object")
                        message.steamids[i] = new $util.LongBits(object.steamids[i].low >>> 0, object.steamids[i].high >>> 0).toNumber();
            }
            if (object.replytogc != null)
                message.replytogc = Boolean(object.replytogc);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMultiplexMessage message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {CMsgGCMultiplexMessage} message CMsgGCMultiplexMessage
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMultiplexMessage.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.steamids = [];
            if (options.defaults) {
                object.msgtype = 0;
                if (options.bytes === String)
                    object.payload = "";
                else {
                    object.payload = [];
                    if (options.bytes !== Array)
                        object.payload = $util.newBuffer(object.payload);
                }
                object.replytogc = false;
            }
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                object.msgtype = message.msgtype;
            if (message.payload != null && message.hasOwnProperty("payload"))
                object.payload = options.bytes === String ? $util.base64.encode(message.payload, 0, message.payload.length) : options.bytes === Array ? Array.prototype.slice.call(message.payload) : message.payload;
            if (message.steamids && message.steamids.length) {
                object.steamids = [];
                for (var j = 0; j < message.steamids.length; ++j)
                    if (typeof message.steamids[j] === "number")
                        object.steamids[j] = options.longs === String ? String(message.steamids[j]) : message.steamids[j];
                    else
                        object.steamids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.steamids[j]) : options.longs === Number ? new $util.LongBits(message.steamids[j].low >>> 0, message.steamids[j].high >>> 0).toNumber() : message.steamids[j];
            }
            if (message.replytogc != null && message.hasOwnProperty("replytogc"))
                object.replytogc = message.replytogc;
            return object;
        };
    
        /**
         * Converts this CMsgGCMultiplexMessage to JSON.
         * @function toJSON
         * @memberof CMsgGCMultiplexMessage
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMultiplexMessage.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMultiplexMessage
         * @function getTypeUrl
         * @memberof CMsgGCMultiplexMessage
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMultiplexMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMultiplexMessage";
        };
    
        return CMsgGCMultiplexMessage;
    })();
    
    $root.CMsgGCMultiplexMessage_Response = (function() {
    
        /**
         * Properties of a CMsgGCMultiplexMessage_Response.
         * @exports ICMsgGCMultiplexMessage_Response
         * @interface ICMsgGCMultiplexMessage_Response
         * @property {number|null} [msgtype] CMsgGCMultiplexMessage_Response msgtype
         */
    
        /**
         * Constructs a new CMsgGCMultiplexMessage_Response.
         * @exports CMsgGCMultiplexMessage_Response
         * @classdesc Represents a CMsgGCMultiplexMessage_Response.
         * @implements ICMsgGCMultiplexMessage_Response
         * @constructor
         * @param {ICMsgGCMultiplexMessage_Response=} [properties] Properties to set
         */
        function CMsgGCMultiplexMessage_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCMultiplexMessage_Response msgtype.
         * @member {number} msgtype
         * @memberof CMsgGCMultiplexMessage_Response
         * @instance
         */
        CMsgGCMultiplexMessage_Response.prototype.msgtype = 0;
    
        /**
         * Creates a new CMsgGCMultiplexMessage_Response instance using the specified properties.
         * @function create
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {ICMsgGCMultiplexMessage_Response=} [properties] Properties to set
         * @returns {CMsgGCMultiplexMessage_Response} CMsgGCMultiplexMessage_Response instance
         */
        CMsgGCMultiplexMessage_Response.create = function create(properties) {
            return new CMsgGCMultiplexMessage_Response(properties);
        };
    
        /**
         * Encodes the specified CMsgGCMultiplexMessage_Response message. Does not implicitly {@link CMsgGCMultiplexMessage_Response.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {ICMsgGCMultiplexMessage_Response} message CMsgGCMultiplexMessage_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMultiplexMessage_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.msgtype != null && Object.hasOwnProperty.call(message, "msgtype"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msgtype);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCMultiplexMessage_Response message, length delimited. Does not implicitly {@link CMsgGCMultiplexMessage_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {ICMsgGCMultiplexMessage_Response} message CMsgGCMultiplexMessage_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCMultiplexMessage_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCMultiplexMessage_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCMultiplexMessage_Response} CMsgGCMultiplexMessage_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMultiplexMessage_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCMultiplexMessage_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.msgtype = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCMultiplexMessage_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCMultiplexMessage_Response} CMsgGCMultiplexMessage_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCMultiplexMessage_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCMultiplexMessage_Response message.
         * @function verify
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCMultiplexMessage_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                if (!$util.isInteger(message.msgtype))
                    return "msgtype: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCMultiplexMessage_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCMultiplexMessage_Response} CMsgGCMultiplexMessage_Response
         */
        CMsgGCMultiplexMessage_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCMultiplexMessage_Response)
                return object;
            var message = new $root.CMsgGCMultiplexMessage_Response();
            if (object.msgtype != null)
                message.msgtype = object.msgtype >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCMultiplexMessage_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {CMsgGCMultiplexMessage_Response} message CMsgGCMultiplexMessage_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCMultiplexMessage_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.msgtype = 0;
            if (message.msgtype != null && message.hasOwnProperty("msgtype"))
                object.msgtype = message.msgtype;
            return object;
        };
    
        /**
         * Converts this CMsgGCMultiplexMessage_Response to JSON.
         * @function toJSON
         * @memberof CMsgGCMultiplexMessage_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCMultiplexMessage_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCMultiplexMessage_Response
         * @function getTypeUrl
         * @memberof CMsgGCMultiplexMessage_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCMultiplexMessage_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCMultiplexMessage_Response";
        };
    
        return CMsgGCMultiplexMessage_Response;
    })();
    
    $root.CGCToGCMsgMasterAck = (function() {
    
        /**
         * Properties of a CGCToGCMsgMasterAck.
         * @exports ICGCToGCMsgMasterAck
         * @interface ICGCToGCMsgMasterAck
         * @property {number|null} [dir_index] CGCToGCMsgMasterAck dir_index
         * @property {number|null} [gc_type] CGCToGCMsgMasterAck gc_type
         */
    
        /**
         * Constructs a new CGCToGCMsgMasterAck.
         * @exports CGCToGCMsgMasterAck
         * @classdesc Represents a CGCToGCMsgMasterAck.
         * @implements ICGCToGCMsgMasterAck
         * @constructor
         * @param {ICGCToGCMsgMasterAck=} [properties] Properties to set
         */
        function CGCToGCMsgMasterAck(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCToGCMsgMasterAck dir_index.
         * @member {number} dir_index
         * @memberof CGCToGCMsgMasterAck
         * @instance
         */
        CGCToGCMsgMasterAck.prototype.dir_index = 0;
    
        /**
         * CGCToGCMsgMasterAck gc_type.
         * @member {number} gc_type
         * @memberof CGCToGCMsgMasterAck
         * @instance
         */
        CGCToGCMsgMasterAck.prototype.gc_type = 0;
    
        /**
         * Creates a new CGCToGCMsgMasterAck instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {ICGCToGCMsgMasterAck=} [properties] Properties to set
         * @returns {CGCToGCMsgMasterAck} CGCToGCMsgMasterAck instance
         */
        CGCToGCMsgMasterAck.create = function create(properties) {
            return new CGCToGCMsgMasterAck(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterAck message. Does not implicitly {@link CGCToGCMsgMasterAck.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {ICGCToGCMsgMasterAck} message CGCToGCMsgMasterAck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterAck.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.dir_index != null && Object.hasOwnProperty.call(message, "dir_index"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.dir_index);
            if (message.gc_type != null && Object.hasOwnProperty.call(message, "gc_type"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.gc_type);
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterAck message, length delimited. Does not implicitly {@link CGCToGCMsgMasterAck.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {ICGCToGCMsgMasterAck} message CGCToGCMsgMasterAck message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterAck.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgMasterAck message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgMasterAck} CGCToGCMsgMasterAck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterAck.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgMasterAck();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.dir_index = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gc_type = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgMasterAck message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgMasterAck} CGCToGCMsgMasterAck
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterAck.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgMasterAck message.
         * @function verify
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgMasterAck.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.dir_index != null && message.hasOwnProperty("dir_index"))
                if (!$util.isInteger(message.dir_index))
                    return "dir_index: integer expected";
            if (message.gc_type != null && message.hasOwnProperty("gc_type"))
                if (!$util.isInteger(message.gc_type))
                    return "gc_type: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgMasterAck message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgMasterAck} CGCToGCMsgMasterAck
         */
        CGCToGCMsgMasterAck.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgMasterAck)
                return object;
            var message = new $root.CGCToGCMsgMasterAck();
            if (object.dir_index != null)
                message.dir_index = object.dir_index >>> 0;
            if (object.gc_type != null)
                message.gc_type = object.gc_type >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgMasterAck message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {CGCToGCMsgMasterAck} message CGCToGCMsgMasterAck
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgMasterAck.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.dir_index = 0;
                object.gc_type = 0;
            }
            if (message.dir_index != null && message.hasOwnProperty("dir_index"))
                object.dir_index = message.dir_index;
            if (message.gc_type != null && message.hasOwnProperty("gc_type"))
                object.gc_type = message.gc_type;
            return object;
        };
    
        /**
         * Converts this CGCToGCMsgMasterAck to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgMasterAck
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgMasterAck.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgMasterAck
         * @function getTypeUrl
         * @memberof CGCToGCMsgMasterAck
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgMasterAck.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgMasterAck";
        };
    
        return CGCToGCMsgMasterAck;
    })();
    
    $root.CGCToGCMsgMasterAck_Response = (function() {
    
        /**
         * Properties of a CGCToGCMsgMasterAck_Response.
         * @exports ICGCToGCMsgMasterAck_Response
         * @interface ICGCToGCMsgMasterAck_Response
         * @property {number|null} [eresult] CGCToGCMsgMasterAck_Response eresult
         */
    
        /**
         * Constructs a new CGCToGCMsgMasterAck_Response.
         * @exports CGCToGCMsgMasterAck_Response
         * @classdesc Represents a CGCToGCMsgMasterAck_Response.
         * @implements ICGCToGCMsgMasterAck_Response
         * @constructor
         * @param {ICGCToGCMsgMasterAck_Response=} [properties] Properties to set
         */
        function CGCToGCMsgMasterAck_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCToGCMsgMasterAck_Response eresult.
         * @member {number} eresult
         * @memberof CGCToGCMsgMasterAck_Response
         * @instance
         */
        CGCToGCMsgMasterAck_Response.prototype.eresult = 2;
    
        /**
         * Creates a new CGCToGCMsgMasterAck_Response instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {ICGCToGCMsgMasterAck_Response=} [properties] Properties to set
         * @returns {CGCToGCMsgMasterAck_Response} CGCToGCMsgMasterAck_Response instance
         */
        CGCToGCMsgMasterAck_Response.create = function create(properties) {
            return new CGCToGCMsgMasterAck_Response(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterAck_Response message. Does not implicitly {@link CGCToGCMsgMasterAck_Response.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {ICGCToGCMsgMasterAck_Response} message CGCToGCMsgMasterAck_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterAck_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.eresult);
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterAck_Response message, length delimited. Does not implicitly {@link CGCToGCMsgMasterAck_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {ICGCToGCMsgMasterAck_Response} message CGCToGCMsgMasterAck_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterAck_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgMasterAck_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgMasterAck_Response} CGCToGCMsgMasterAck_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterAck_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgMasterAck_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.eresult = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgMasterAck_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgMasterAck_Response} CGCToGCMsgMasterAck_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterAck_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgMasterAck_Response message.
         * @function verify
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgMasterAck_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgMasterAck_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgMasterAck_Response} CGCToGCMsgMasterAck_Response
         */
        CGCToGCMsgMasterAck_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgMasterAck_Response)
                return object;
            var message = new $root.CGCToGCMsgMasterAck_Response();
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgMasterAck_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {CGCToGCMsgMasterAck_Response} message CGCToGCMsgMasterAck_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgMasterAck_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.eresult = 2;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            return object;
        };
    
        /**
         * Converts this CGCToGCMsgMasterAck_Response to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgMasterAck_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgMasterAck_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgMasterAck_Response
         * @function getTypeUrl
         * @memberof CGCToGCMsgMasterAck_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgMasterAck_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgMasterAck_Response";
        };
    
        return CGCToGCMsgMasterAck_Response;
    })();
    
    $root.CGCToGCMsgMasterStartupComplete = (function() {
    
        /**
         * Properties of a CGCToGCMsgMasterStartupComplete.
         * @exports ICGCToGCMsgMasterStartupComplete
         * @interface ICGCToGCMsgMasterStartupComplete
         */
    
        /**
         * Constructs a new CGCToGCMsgMasterStartupComplete.
         * @exports CGCToGCMsgMasterStartupComplete
         * @classdesc Represents a CGCToGCMsgMasterStartupComplete.
         * @implements ICGCToGCMsgMasterStartupComplete
         * @constructor
         * @param {ICGCToGCMsgMasterStartupComplete=} [properties] Properties to set
         */
        function CGCToGCMsgMasterStartupComplete(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CGCToGCMsgMasterStartupComplete instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {ICGCToGCMsgMasterStartupComplete=} [properties] Properties to set
         * @returns {CGCToGCMsgMasterStartupComplete} CGCToGCMsgMasterStartupComplete instance
         */
        CGCToGCMsgMasterStartupComplete.create = function create(properties) {
            return new CGCToGCMsgMasterStartupComplete(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterStartupComplete message. Does not implicitly {@link CGCToGCMsgMasterStartupComplete.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {ICGCToGCMsgMasterStartupComplete} message CGCToGCMsgMasterStartupComplete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterStartupComplete.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgMasterStartupComplete message, length delimited. Does not implicitly {@link CGCToGCMsgMasterStartupComplete.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {ICGCToGCMsgMasterStartupComplete} message CGCToGCMsgMasterStartupComplete message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgMasterStartupComplete.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgMasterStartupComplete message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgMasterStartupComplete} CGCToGCMsgMasterStartupComplete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterStartupComplete.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgMasterStartupComplete();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgMasterStartupComplete message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgMasterStartupComplete} CGCToGCMsgMasterStartupComplete
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgMasterStartupComplete.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgMasterStartupComplete message.
         * @function verify
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgMasterStartupComplete.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgMasterStartupComplete message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgMasterStartupComplete} CGCToGCMsgMasterStartupComplete
         */
        CGCToGCMsgMasterStartupComplete.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgMasterStartupComplete)
                return object;
            return new $root.CGCToGCMsgMasterStartupComplete();
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgMasterStartupComplete message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {CGCToGCMsgMasterStartupComplete} message CGCToGCMsgMasterStartupComplete
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgMasterStartupComplete.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CGCToGCMsgMasterStartupComplete to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgMasterStartupComplete
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgMasterStartupComplete.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgMasterStartupComplete
         * @function getTypeUrl
         * @memberof CGCToGCMsgMasterStartupComplete
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgMasterStartupComplete.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgMasterStartupComplete";
        };
    
        return CGCToGCMsgMasterStartupComplete;
    })();
    
    $root.CGCToGCMsgRouted = (function() {
    
        /**
         * Properties of a CGCToGCMsgRouted.
         * @exports ICGCToGCMsgRouted
         * @interface ICGCToGCMsgRouted
         * @property {number|null} [msg_type] CGCToGCMsgRouted msg_type
         * @property {number|Long|null} [sender_id] CGCToGCMsgRouted sender_id
         * @property {Uint8Array|null} [net_message] CGCToGCMsgRouted net_message
         * @property {number|null} [ip] CGCToGCMsgRouted ip
         */
    
        /**
         * Constructs a new CGCToGCMsgRouted.
         * @exports CGCToGCMsgRouted
         * @classdesc Represents a CGCToGCMsgRouted.
         * @implements ICGCToGCMsgRouted
         * @constructor
         * @param {ICGCToGCMsgRouted=} [properties] Properties to set
         */
        function CGCToGCMsgRouted(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCToGCMsgRouted msg_type.
         * @member {number} msg_type
         * @memberof CGCToGCMsgRouted
         * @instance
         */
        CGCToGCMsgRouted.prototype.msg_type = 0;
    
        /**
         * CGCToGCMsgRouted sender_id.
         * @member {number|Long} sender_id
         * @memberof CGCToGCMsgRouted
         * @instance
         */
        CGCToGCMsgRouted.prototype.sender_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CGCToGCMsgRouted net_message.
         * @member {Uint8Array} net_message
         * @memberof CGCToGCMsgRouted
         * @instance
         */
        CGCToGCMsgRouted.prototype.net_message = $util.newBuffer([]);
    
        /**
         * CGCToGCMsgRouted ip.
         * @member {number} ip
         * @memberof CGCToGCMsgRouted
         * @instance
         */
        CGCToGCMsgRouted.prototype.ip = 0;
    
        /**
         * Creates a new CGCToGCMsgRouted instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {ICGCToGCMsgRouted=} [properties] Properties to set
         * @returns {CGCToGCMsgRouted} CGCToGCMsgRouted instance
         */
        CGCToGCMsgRouted.create = function create(properties) {
            return new CGCToGCMsgRouted(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgRouted message. Does not implicitly {@link CGCToGCMsgRouted.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {ICGCToGCMsgRouted} message CGCToGCMsgRouted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgRouted.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.msg_type != null && Object.hasOwnProperty.call(message, "msg_type"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msg_type);
            if (message.sender_id != null && Object.hasOwnProperty.call(message, "sender_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.sender_id);
            if (message.net_message != null && Object.hasOwnProperty.call(message, "net_message"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.net_message);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.ip);
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgRouted message, length delimited. Does not implicitly {@link CGCToGCMsgRouted.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {ICGCToGCMsgRouted} message CGCToGCMsgRouted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgRouted.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgRouted message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgRouted} CGCToGCMsgRouted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgRouted.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgRouted();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.msg_type = reader.uint32();
                        break;
                    }
                case 2: {
                        message.sender_id = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.net_message = reader.bytes();
                        break;
                    }
                case 4: {
                        message.ip = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgRouted message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgRouted} CGCToGCMsgRouted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgRouted.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgRouted message.
         * @function verify
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgRouted.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.msg_type != null && message.hasOwnProperty("msg_type"))
                if (!$util.isInteger(message.msg_type))
                    return "msg_type: integer expected";
            if (message.sender_id != null && message.hasOwnProperty("sender_id"))
                if (!$util.isInteger(message.sender_id) && !(message.sender_id && $util.isInteger(message.sender_id.low) && $util.isInteger(message.sender_id.high)))
                    return "sender_id: integer|Long expected";
            if (message.net_message != null && message.hasOwnProperty("net_message"))
                if (!(message.net_message && typeof message.net_message.length === "number" || $util.isString(message.net_message)))
                    return "net_message: buffer expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgRouted message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgRouted} CGCToGCMsgRouted
         */
        CGCToGCMsgRouted.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgRouted)
                return object;
            var message = new $root.CGCToGCMsgRouted();
            if (object.msg_type != null)
                message.msg_type = object.msg_type >>> 0;
            if (object.sender_id != null)
                if ($util.Long)
                    (message.sender_id = $util.Long.fromValue(object.sender_id)).unsigned = false;
                else if (typeof object.sender_id === "string")
                    message.sender_id = parseInt(object.sender_id, 10);
                else if (typeof object.sender_id === "number")
                    message.sender_id = object.sender_id;
                else if (typeof object.sender_id === "object")
                    message.sender_id = new $util.LongBits(object.sender_id.low >>> 0, object.sender_id.high >>> 0).toNumber();
            if (object.net_message != null)
                if (typeof object.net_message === "string")
                    $util.base64.decode(object.net_message, message.net_message = $util.newBuffer($util.base64.length(object.net_message)), 0);
                else if (object.net_message.length >= 0)
                    message.net_message = object.net_message;
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgRouted message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {CGCToGCMsgRouted} message CGCToGCMsgRouted
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgRouted.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.msg_type = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.sender_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.sender_id = options.longs === String ? "0" : 0;
                if (options.bytes === String)
                    object.net_message = "";
                else {
                    object.net_message = [];
                    if (options.bytes !== Array)
                        object.net_message = $util.newBuffer(object.net_message);
                }
                object.ip = 0;
            }
            if (message.msg_type != null && message.hasOwnProperty("msg_type"))
                object.msg_type = message.msg_type;
            if (message.sender_id != null && message.hasOwnProperty("sender_id"))
                if (typeof message.sender_id === "number")
                    object.sender_id = options.longs === String ? String(message.sender_id) : message.sender_id;
                else
                    object.sender_id = options.longs === String ? $util.Long.prototype.toString.call(message.sender_id) : options.longs === Number ? new $util.LongBits(message.sender_id.low >>> 0, message.sender_id.high >>> 0).toNumber() : message.sender_id;
            if (message.net_message != null && message.hasOwnProperty("net_message"))
                object.net_message = options.bytes === String ? $util.base64.encode(message.net_message, 0, message.net_message.length) : options.bytes === Array ? Array.prototype.slice.call(message.net_message) : message.net_message;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            return object;
        };
    
        /**
         * Converts this CGCToGCMsgRouted to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgRouted
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgRouted.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgRouted
         * @function getTypeUrl
         * @memberof CGCToGCMsgRouted
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgRouted.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgRouted";
        };
    
        return CGCToGCMsgRouted;
    })();
    
    $root.CGCToGCMsgRoutedReply = (function() {
    
        /**
         * Properties of a CGCToGCMsgRoutedReply.
         * @exports ICGCToGCMsgRoutedReply
         * @interface ICGCToGCMsgRoutedReply
         * @property {number|null} [msg_type] CGCToGCMsgRoutedReply msg_type
         * @property {Uint8Array|null} [net_message] CGCToGCMsgRoutedReply net_message
         */
    
        /**
         * Constructs a new CGCToGCMsgRoutedReply.
         * @exports CGCToGCMsgRoutedReply
         * @classdesc Represents a CGCToGCMsgRoutedReply.
         * @implements ICGCToGCMsgRoutedReply
         * @constructor
         * @param {ICGCToGCMsgRoutedReply=} [properties] Properties to set
         */
        function CGCToGCMsgRoutedReply(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCToGCMsgRoutedReply msg_type.
         * @member {number} msg_type
         * @memberof CGCToGCMsgRoutedReply
         * @instance
         */
        CGCToGCMsgRoutedReply.prototype.msg_type = 0;
    
        /**
         * CGCToGCMsgRoutedReply net_message.
         * @member {Uint8Array} net_message
         * @memberof CGCToGCMsgRoutedReply
         * @instance
         */
        CGCToGCMsgRoutedReply.prototype.net_message = $util.newBuffer([]);
    
        /**
         * Creates a new CGCToGCMsgRoutedReply instance using the specified properties.
         * @function create
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {ICGCToGCMsgRoutedReply=} [properties] Properties to set
         * @returns {CGCToGCMsgRoutedReply} CGCToGCMsgRoutedReply instance
         */
        CGCToGCMsgRoutedReply.create = function create(properties) {
            return new CGCToGCMsgRoutedReply(properties);
        };
    
        /**
         * Encodes the specified CGCToGCMsgRoutedReply message. Does not implicitly {@link CGCToGCMsgRoutedReply.verify|verify} messages.
         * @function encode
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {ICGCToGCMsgRoutedReply} message CGCToGCMsgRoutedReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgRoutedReply.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.msg_type != null && Object.hasOwnProperty.call(message, "msg_type"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.msg_type);
            if (message.net_message != null && Object.hasOwnProperty.call(message, "net_message"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.net_message);
            return writer;
        };
    
        /**
         * Encodes the specified CGCToGCMsgRoutedReply message, length delimited. Does not implicitly {@link CGCToGCMsgRoutedReply.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {ICGCToGCMsgRoutedReply} message CGCToGCMsgRoutedReply message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCToGCMsgRoutedReply.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCToGCMsgRoutedReply message from the specified reader or buffer.
         * @function decode
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCToGCMsgRoutedReply} CGCToGCMsgRoutedReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgRoutedReply.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCToGCMsgRoutedReply();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.msg_type = reader.uint32();
                        break;
                    }
                case 2: {
                        message.net_message = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCToGCMsgRoutedReply message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCToGCMsgRoutedReply} CGCToGCMsgRoutedReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCToGCMsgRoutedReply.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCToGCMsgRoutedReply message.
         * @function verify
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCToGCMsgRoutedReply.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.msg_type != null && message.hasOwnProperty("msg_type"))
                if (!$util.isInteger(message.msg_type))
                    return "msg_type: integer expected";
            if (message.net_message != null && message.hasOwnProperty("net_message"))
                if (!(message.net_message && typeof message.net_message.length === "number" || $util.isString(message.net_message)))
                    return "net_message: buffer expected";
            return null;
        };
    
        /**
         * Creates a CGCToGCMsgRoutedReply message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCToGCMsgRoutedReply} CGCToGCMsgRoutedReply
         */
        CGCToGCMsgRoutedReply.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCToGCMsgRoutedReply)
                return object;
            var message = new $root.CGCToGCMsgRoutedReply();
            if (object.msg_type != null)
                message.msg_type = object.msg_type >>> 0;
            if (object.net_message != null)
                if (typeof object.net_message === "string")
                    $util.base64.decode(object.net_message, message.net_message = $util.newBuffer($util.base64.length(object.net_message)), 0);
                else if (object.net_message.length >= 0)
                    message.net_message = object.net_message;
            return message;
        };
    
        /**
         * Creates a plain object from a CGCToGCMsgRoutedReply message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {CGCToGCMsgRoutedReply} message CGCToGCMsgRoutedReply
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCToGCMsgRoutedReply.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.msg_type = 0;
                if (options.bytes === String)
                    object.net_message = "";
                else {
                    object.net_message = [];
                    if (options.bytes !== Array)
                        object.net_message = $util.newBuffer(object.net_message);
                }
            }
            if (message.msg_type != null && message.hasOwnProperty("msg_type"))
                object.msg_type = message.msg_type;
            if (message.net_message != null && message.hasOwnProperty("net_message"))
                object.net_message = options.bytes === String ? $util.base64.encode(message.net_message, 0, message.net_message.length) : options.bytes === Array ? Array.prototype.slice.call(message.net_message) : message.net_message;
            return object;
        };
    
        /**
         * Converts this CGCToGCMsgRoutedReply to JSON.
         * @function toJSON
         * @memberof CGCToGCMsgRoutedReply
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCToGCMsgRoutedReply.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCToGCMsgRoutedReply
         * @function getTypeUrl
         * @memberof CGCToGCMsgRoutedReply
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCToGCMsgRoutedReply.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCToGCMsgRoutedReply";
        };
    
        return CGCToGCMsgRoutedReply;
    })();
    
    $root.CMsgGCUpdateSessionIP = (function() {
    
        /**
         * Properties of a CMsgGCUpdateSessionIP.
         * @exports ICMsgGCUpdateSessionIP
         * @interface ICMsgGCUpdateSessionIP
         * @property {number|Long|null} [steamid] CMsgGCUpdateSessionIP steamid
         * @property {number|null} [ip] CMsgGCUpdateSessionIP ip
         */
    
        /**
         * Constructs a new CMsgGCUpdateSessionIP.
         * @exports CMsgGCUpdateSessionIP
         * @classdesc Represents a CMsgGCUpdateSessionIP.
         * @implements ICMsgGCUpdateSessionIP
         * @constructor
         * @param {ICMsgGCUpdateSessionIP=} [properties] Properties to set
         */
        function CMsgGCUpdateSessionIP(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCUpdateSessionIP steamid.
         * @member {number|Long} steamid
         * @memberof CMsgGCUpdateSessionIP
         * @instance
         */
        CMsgGCUpdateSessionIP.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCUpdateSessionIP ip.
         * @member {number} ip
         * @memberof CMsgGCUpdateSessionIP
         * @instance
         */
        CMsgGCUpdateSessionIP.prototype.ip = 0;
    
        /**
         * Creates a new CMsgGCUpdateSessionIP instance using the specified properties.
         * @function create
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {ICMsgGCUpdateSessionIP=} [properties] Properties to set
         * @returns {CMsgGCUpdateSessionIP} CMsgGCUpdateSessionIP instance
         */
        CMsgGCUpdateSessionIP.create = function create(properties) {
            return new CMsgGCUpdateSessionIP(properties);
        };
    
        /**
         * Encodes the specified CMsgGCUpdateSessionIP message. Does not implicitly {@link CMsgGCUpdateSessionIP.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {ICMsgGCUpdateSessionIP} message CMsgGCUpdateSessionIP message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCUpdateSessionIP.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.ip);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCUpdateSessionIP message, length delimited. Does not implicitly {@link CMsgGCUpdateSessionIP.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {ICMsgGCUpdateSessionIP} message CMsgGCUpdateSessionIP message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCUpdateSessionIP.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCUpdateSessionIP message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCUpdateSessionIP} CMsgGCUpdateSessionIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCUpdateSessionIP.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCUpdateSessionIP();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.ip = reader.fixed32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCUpdateSessionIP message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCUpdateSessionIP} CMsgGCUpdateSessionIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCUpdateSessionIP.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCUpdateSessionIP message.
         * @function verify
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCUpdateSessionIP.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCUpdateSessionIP message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCUpdateSessionIP} CMsgGCUpdateSessionIP
         */
        CMsgGCUpdateSessionIP.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCUpdateSessionIP)
                return object;
            var message = new $root.CMsgGCUpdateSessionIP();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCUpdateSessionIP message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {CMsgGCUpdateSessionIP} message CMsgGCUpdateSessionIP
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCUpdateSessionIP.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.ip = 0;
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            return object;
        };
    
        /**
         * Converts this CMsgGCUpdateSessionIP to JSON.
         * @function toJSON
         * @memberof CMsgGCUpdateSessionIP
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCUpdateSessionIP.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCUpdateSessionIP
         * @function getTypeUrl
         * @memberof CMsgGCUpdateSessionIP
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCUpdateSessionIP.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCUpdateSessionIP";
        };
    
        return CMsgGCUpdateSessionIP;
    })();
    
    $root.CMsgGCRequestSessionIP = (function() {
    
        /**
         * Properties of a CMsgGCRequestSessionIP.
         * @exports ICMsgGCRequestSessionIP
         * @interface ICMsgGCRequestSessionIP
         * @property {number|Long|null} [steamid] CMsgGCRequestSessionIP steamid
         */
    
        /**
         * Constructs a new CMsgGCRequestSessionIP.
         * @exports CMsgGCRequestSessionIP
         * @classdesc Represents a CMsgGCRequestSessionIP.
         * @implements ICMsgGCRequestSessionIP
         * @constructor
         * @param {ICMsgGCRequestSessionIP=} [properties] Properties to set
         */
        function CMsgGCRequestSessionIP(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCRequestSessionIP steamid.
         * @member {number|Long} steamid
         * @memberof CMsgGCRequestSessionIP
         * @instance
         */
        CMsgGCRequestSessionIP.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCRequestSessionIP instance using the specified properties.
         * @function create
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {ICMsgGCRequestSessionIP=} [properties] Properties to set
         * @returns {CMsgGCRequestSessionIP} CMsgGCRequestSessionIP instance
         */
        CMsgGCRequestSessionIP.create = function create(properties) {
            return new CMsgGCRequestSessionIP(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRequestSessionIP message. Does not implicitly {@link CMsgGCRequestSessionIP.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {ICMsgGCRequestSessionIP} message CMsgGCRequestSessionIP message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestSessionIP.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRequestSessionIP message, length delimited. Does not implicitly {@link CMsgGCRequestSessionIP.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {ICMsgGCRequestSessionIP} message CMsgGCRequestSessionIP message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestSessionIP.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRequestSessionIP message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRequestSessionIP} CMsgGCRequestSessionIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestSessionIP.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRequestSessionIP();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRequestSessionIP message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRequestSessionIP} CMsgGCRequestSessionIP
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestSessionIP.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRequestSessionIP message.
         * @function verify
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRequestSessionIP.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRequestSessionIP message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRequestSessionIP} CMsgGCRequestSessionIP
         */
        CMsgGCRequestSessionIP.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRequestSessionIP)
                return object;
            var message = new $root.CMsgGCRequestSessionIP();
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCRequestSessionIP message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {CMsgGCRequestSessionIP} message CMsgGCRequestSessionIP
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRequestSessionIP.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            return object;
        };
    
        /**
         * Converts this CMsgGCRequestSessionIP to JSON.
         * @function toJSON
         * @memberof CMsgGCRequestSessionIP
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRequestSessionIP.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRequestSessionIP
         * @function getTypeUrl
         * @memberof CMsgGCRequestSessionIP
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRequestSessionIP.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRequestSessionIP";
        };
    
        return CMsgGCRequestSessionIP;
    })();
    
    $root.CMsgGCRequestSessionIPResponse = (function() {
    
        /**
         * Properties of a CMsgGCRequestSessionIPResponse.
         * @exports ICMsgGCRequestSessionIPResponse
         * @interface ICMsgGCRequestSessionIPResponse
         * @property {number|null} [ip] CMsgGCRequestSessionIPResponse ip
         */
    
        /**
         * Constructs a new CMsgGCRequestSessionIPResponse.
         * @exports CMsgGCRequestSessionIPResponse
         * @classdesc Represents a CMsgGCRequestSessionIPResponse.
         * @implements ICMsgGCRequestSessionIPResponse
         * @constructor
         * @param {ICMsgGCRequestSessionIPResponse=} [properties] Properties to set
         */
        function CMsgGCRequestSessionIPResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCRequestSessionIPResponse ip.
         * @member {number} ip
         * @memberof CMsgGCRequestSessionIPResponse
         * @instance
         */
        CMsgGCRequestSessionIPResponse.prototype.ip = 0;
    
        /**
         * Creates a new CMsgGCRequestSessionIPResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {ICMsgGCRequestSessionIPResponse=} [properties] Properties to set
         * @returns {CMsgGCRequestSessionIPResponse} CMsgGCRequestSessionIPResponse instance
         */
        CMsgGCRequestSessionIPResponse.create = function create(properties) {
            return new CMsgGCRequestSessionIPResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRequestSessionIPResponse message. Does not implicitly {@link CMsgGCRequestSessionIPResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {ICMsgGCRequestSessionIPResponse} message CMsgGCRequestSessionIPResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestSessionIPResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.ip);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRequestSessionIPResponse message, length delimited. Does not implicitly {@link CMsgGCRequestSessionIPResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {ICMsgGCRequestSessionIPResponse} message CMsgGCRequestSessionIPResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestSessionIPResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRequestSessionIPResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRequestSessionIPResponse} CMsgGCRequestSessionIPResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestSessionIPResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRequestSessionIPResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.ip = reader.fixed32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRequestSessionIPResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRequestSessionIPResponse} CMsgGCRequestSessionIPResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestSessionIPResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRequestSessionIPResponse message.
         * @function verify
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRequestSessionIPResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRequestSessionIPResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRequestSessionIPResponse} CMsgGCRequestSessionIPResponse
         */
        CMsgGCRequestSessionIPResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRequestSessionIPResponse)
                return object;
            var message = new $root.CMsgGCRequestSessionIPResponse();
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCRequestSessionIPResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {CMsgGCRequestSessionIPResponse} message CMsgGCRequestSessionIPResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRequestSessionIPResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.ip = 0;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            return object;
        };
    
        /**
         * Converts this CMsgGCRequestSessionIPResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCRequestSessionIPResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRequestSessionIPResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRequestSessionIPResponse
         * @function getTypeUrl
         * @memberof CMsgGCRequestSessionIPResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRequestSessionIPResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRequestSessionIPResponse";
        };
    
        return CMsgGCRequestSessionIPResponse;
    })();
    
    $root.CMsgSOCacheHaveVersion = (function() {
    
        /**
         * Properties of a CMsgSOCacheHaveVersion.
         * @exports ICMsgSOCacheHaveVersion
         * @interface ICMsgSOCacheHaveVersion
         * @property {ICMsgSOIDOwner|null} [soid] CMsgSOCacheHaveVersion soid
         * @property {number|Long|null} [version] CMsgSOCacheHaveVersion version
         */
    
        /**
         * Constructs a new CMsgSOCacheHaveVersion.
         * @exports CMsgSOCacheHaveVersion
         * @classdesc Represents a CMsgSOCacheHaveVersion.
         * @implements ICMsgSOCacheHaveVersion
         * @constructor
         * @param {ICMsgSOCacheHaveVersion=} [properties] Properties to set
         */
        function CMsgSOCacheHaveVersion(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSOCacheHaveVersion soid.
         * @member {ICMsgSOIDOwner|null|undefined} soid
         * @memberof CMsgSOCacheHaveVersion
         * @instance
         */
        CMsgSOCacheHaveVersion.prototype.soid = null;
    
        /**
         * CMsgSOCacheHaveVersion version.
         * @member {number|Long} version
         * @memberof CMsgSOCacheHaveVersion
         * @instance
         */
        CMsgSOCacheHaveVersion.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgSOCacheHaveVersion instance using the specified properties.
         * @function create
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {ICMsgSOCacheHaveVersion=} [properties] Properties to set
         * @returns {CMsgSOCacheHaveVersion} CMsgSOCacheHaveVersion instance
         */
        CMsgSOCacheHaveVersion.create = function create(properties) {
            return new CMsgSOCacheHaveVersion(properties);
        };
    
        /**
         * Encodes the specified CMsgSOCacheHaveVersion message. Does not implicitly {@link CMsgSOCacheHaveVersion.verify|verify} messages.
         * @function encode
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {ICMsgSOCacheHaveVersion} message CMsgSOCacheHaveVersion message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheHaveVersion.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.soid != null && Object.hasOwnProperty.call(message, "soid"))
                $root.CMsgSOIDOwner.encode(message.soid, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.version);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSOCacheHaveVersion message, length delimited. Does not implicitly {@link CMsgSOCacheHaveVersion.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {ICMsgSOCacheHaveVersion} message CMsgSOCacheHaveVersion message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSOCacheHaveVersion.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSOCacheHaveVersion message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSOCacheHaveVersion} CMsgSOCacheHaveVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheHaveVersion.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSOCacheHaveVersion();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.soid = $root.CMsgSOIDOwner.decode(reader, reader.uint32());
                        break;
                    }
                case 2: {
                        message.version = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSOCacheHaveVersion message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSOCacheHaveVersion} CMsgSOCacheHaveVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSOCacheHaveVersion.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSOCacheHaveVersion message.
         * @function verify
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSOCacheHaveVersion.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.soid != null && message.hasOwnProperty("soid")) {
                var error = $root.CMsgSOIDOwner.verify(message.soid);
                if (error)
                    return "soid." + error;
            }
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                    return "version: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgSOCacheHaveVersion message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSOCacheHaveVersion} CMsgSOCacheHaveVersion
         */
        CMsgSOCacheHaveVersion.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSOCacheHaveVersion)
                return object;
            var message = new $root.CMsgSOCacheHaveVersion();
            if (object.soid != null) {
                if (typeof object.soid !== "object")
                    throw TypeError(".CMsgSOCacheHaveVersion.soid: object expected");
                message.soid = $root.CMsgSOIDOwner.fromObject(object.soid);
            }
            if (object.version != null)
                if ($util.Long)
                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;
                else if (typeof object.version === "string")
                    message.version = parseInt(object.version, 10);
                else if (typeof object.version === "number")
                    message.version = object.version;
                else if (typeof object.version === "object")
                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSOCacheHaveVersion message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {CMsgSOCacheHaveVersion} message CMsgSOCacheHaveVersion
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSOCacheHaveVersion.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.soid = null;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.version = options.longs === String ? "0" : 0;
            }
            if (message.soid != null && message.hasOwnProperty("soid"))
                object.soid = $root.CMsgSOIDOwner.toObject(message.soid, options);
            if (message.version != null && message.hasOwnProperty("version"))
                if (typeof message.version === "number")
                    object.version = options.longs === String ? String(message.version) : message.version;
                else
                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;
            return object;
        };
    
        /**
         * Converts this CMsgSOCacheHaveVersion to JSON.
         * @function toJSON
         * @memberof CMsgSOCacheHaveVersion
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSOCacheHaveVersion.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSOCacheHaveVersion
         * @function getTypeUrl
         * @memberof CMsgSOCacheHaveVersion
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSOCacheHaveVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSOCacheHaveVersion";
        };
    
        return CMsgSOCacheHaveVersion;
    })();
    
    $root.CMsgClientHello = (function() {
    
        /**
         * Properties of a CMsgClientHello.
         * @exports ICMsgClientHello
         * @interface ICMsgClientHello
         * @property {number|null} [version] CMsgClientHello version
         * @property {Array.<ICMsgSOCacheHaveVersion>|null} [socache_have_versions] CMsgClientHello socache_have_versions
         * @property {number|null} [client_session_need] CMsgClientHello client_session_need
         * @property {number|null} [client_launcher] CMsgClientHello client_launcher
         * @property {number|null} [partner_srcid] CMsgClientHello partner_srcid
         * @property {number|null} [partner_accountid] CMsgClientHello partner_accountid
         * @property {number|null} [partner_accountflags] CMsgClientHello partner_accountflags
         * @property {number|null} [partner_accountbalance] CMsgClientHello partner_accountbalance
         * @property {number|null} [steam_launcher] CMsgClientHello steam_launcher
         */
    
        /**
         * Constructs a new CMsgClientHello.
         * @exports CMsgClientHello
         * @classdesc Represents a CMsgClientHello.
         * @implements ICMsgClientHello
         * @constructor
         * @param {ICMsgClientHello=} [properties] Properties to set
         */
        function CMsgClientHello(properties) {
            this.socache_have_versions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientHello version.
         * @member {number} version
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.version = 0;
    
        /**
         * CMsgClientHello socache_have_versions.
         * @member {Array.<ICMsgSOCacheHaveVersion>} socache_have_versions
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.socache_have_versions = $util.emptyArray;
    
        /**
         * CMsgClientHello client_session_need.
         * @member {number} client_session_need
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.client_session_need = 0;
    
        /**
         * CMsgClientHello client_launcher.
         * @member {number} client_launcher
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.client_launcher = 0;
    
        /**
         * CMsgClientHello partner_srcid.
         * @member {number} partner_srcid
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.partner_srcid = 0;
    
        /**
         * CMsgClientHello partner_accountid.
         * @member {number} partner_accountid
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.partner_accountid = 0;
    
        /**
         * CMsgClientHello partner_accountflags.
         * @member {number} partner_accountflags
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.partner_accountflags = 0;
    
        /**
         * CMsgClientHello partner_accountbalance.
         * @member {number} partner_accountbalance
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.partner_accountbalance = 0;
    
        /**
         * CMsgClientHello steam_launcher.
         * @member {number} steam_launcher
         * @memberof CMsgClientHello
         * @instance
         */
        CMsgClientHello.prototype.steam_launcher = 0;
    
        /**
         * Creates a new CMsgClientHello instance using the specified properties.
         * @function create
         * @memberof CMsgClientHello
         * @static
         * @param {ICMsgClientHello=} [properties] Properties to set
         * @returns {CMsgClientHello} CMsgClientHello instance
         */
        CMsgClientHello.create = function create(properties) {
            return new CMsgClientHello(properties);
        };
    
        /**
         * Encodes the specified CMsgClientHello message. Does not implicitly {@link CMsgClientHello.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientHello
         * @static
         * @param {ICMsgClientHello} message CMsgClientHello message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientHello.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
            if (message.socache_have_versions != null && message.socache_have_versions.length)
                for (var i = 0; i < message.socache_have_versions.length; ++i)
                    $root.CMsgSOCacheHaveVersion.encode(message.socache_have_versions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.client_session_need != null && Object.hasOwnProperty.call(message, "client_session_need"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.client_session_need);
            if (message.client_launcher != null && Object.hasOwnProperty.call(message, "client_launcher"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.client_launcher);
            if (message.partner_srcid != null && Object.hasOwnProperty.call(message, "partner_srcid"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.partner_srcid);
            if (message.partner_accountid != null && Object.hasOwnProperty.call(message, "partner_accountid"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.partner_accountid);
            if (message.partner_accountflags != null && Object.hasOwnProperty.call(message, "partner_accountflags"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.partner_accountflags);
            if (message.partner_accountbalance != null && Object.hasOwnProperty.call(message, "partner_accountbalance"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.partner_accountbalance);
            if (message.steam_launcher != null && Object.hasOwnProperty.call(message, "steam_launcher"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.steam_launcher);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientHello message, length delimited. Does not implicitly {@link CMsgClientHello.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientHello
         * @static
         * @param {ICMsgClientHello} message CMsgClientHello message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientHello.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientHello message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientHello
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientHello} CMsgClientHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientHello.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientHello();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.version = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.socache_have_versions && message.socache_have_versions.length))
                            message.socache_have_versions = [];
                        message.socache_have_versions.push($root.CMsgSOCacheHaveVersion.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.client_session_need = reader.uint32();
                        break;
                    }
                case 4: {
                        message.client_launcher = reader.uint32();
                        break;
                    }
                case 5: {
                        message.partner_srcid = reader.uint32();
                        break;
                    }
                case 6: {
                        message.partner_accountid = reader.uint32();
                        break;
                    }
                case 7: {
                        message.partner_accountflags = reader.uint32();
                        break;
                    }
                case 8: {
                        message.partner_accountbalance = reader.uint32();
                        break;
                    }
                case 9: {
                        message.steam_launcher = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientHello message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientHello
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientHello} CMsgClientHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientHello.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientHello message.
         * @function verify
         * @memberof CMsgClientHello
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientHello.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.socache_have_versions != null && message.hasOwnProperty("socache_have_versions")) {
                if (!Array.isArray(message.socache_have_versions))
                    return "socache_have_versions: array expected";
                for (var i = 0; i < message.socache_have_versions.length; ++i) {
                    var error = $root.CMsgSOCacheHaveVersion.verify(message.socache_have_versions[i]);
                    if (error)
                        return "socache_have_versions." + error;
                }
            }
            if (message.client_session_need != null && message.hasOwnProperty("client_session_need"))
                if (!$util.isInteger(message.client_session_need))
                    return "client_session_need: integer expected";
            if (message.client_launcher != null && message.hasOwnProperty("client_launcher"))
                if (!$util.isInteger(message.client_launcher))
                    return "client_launcher: integer expected";
            if (message.partner_srcid != null && message.hasOwnProperty("partner_srcid"))
                if (!$util.isInteger(message.partner_srcid))
                    return "partner_srcid: integer expected";
            if (message.partner_accountid != null && message.hasOwnProperty("partner_accountid"))
                if (!$util.isInteger(message.partner_accountid))
                    return "partner_accountid: integer expected";
            if (message.partner_accountflags != null && message.hasOwnProperty("partner_accountflags"))
                if (!$util.isInteger(message.partner_accountflags))
                    return "partner_accountflags: integer expected";
            if (message.partner_accountbalance != null && message.hasOwnProperty("partner_accountbalance"))
                if (!$util.isInteger(message.partner_accountbalance))
                    return "partner_accountbalance: integer expected";
            if (message.steam_launcher != null && message.hasOwnProperty("steam_launcher"))
                if (!$util.isInteger(message.steam_launcher))
                    return "steam_launcher: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientHello message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientHello
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientHello} CMsgClientHello
         */
        CMsgClientHello.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientHello)
                return object;
            var message = new $root.CMsgClientHello();
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.socache_have_versions) {
                if (!Array.isArray(object.socache_have_versions))
                    throw TypeError(".CMsgClientHello.socache_have_versions: array expected");
                message.socache_have_versions = [];
                for (var i = 0; i < object.socache_have_versions.length; ++i) {
                    if (typeof object.socache_have_versions[i] !== "object")
                        throw TypeError(".CMsgClientHello.socache_have_versions: object expected");
                    message.socache_have_versions[i] = $root.CMsgSOCacheHaveVersion.fromObject(object.socache_have_versions[i]);
                }
            }
            if (object.client_session_need != null)
                message.client_session_need = object.client_session_need >>> 0;
            if (object.client_launcher != null)
                message.client_launcher = object.client_launcher >>> 0;
            if (object.partner_srcid != null)
                message.partner_srcid = object.partner_srcid >>> 0;
            if (object.partner_accountid != null)
                message.partner_accountid = object.partner_accountid >>> 0;
            if (object.partner_accountflags != null)
                message.partner_accountflags = object.partner_accountflags >>> 0;
            if (object.partner_accountbalance != null)
                message.partner_accountbalance = object.partner_accountbalance >>> 0;
            if (object.steam_launcher != null)
                message.steam_launcher = object.steam_launcher >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientHello message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientHello
         * @static
         * @param {CMsgClientHello} message CMsgClientHello
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientHello.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.socache_have_versions = [];
            if (options.defaults) {
                object.version = 0;
                object.client_session_need = 0;
                object.client_launcher = 0;
                object.partner_srcid = 0;
                object.partner_accountid = 0;
                object.partner_accountflags = 0;
                object.partner_accountbalance = 0;
                object.steam_launcher = 0;
            }
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.socache_have_versions && message.socache_have_versions.length) {
                object.socache_have_versions = [];
                for (var j = 0; j < message.socache_have_versions.length; ++j)
                    object.socache_have_versions[j] = $root.CMsgSOCacheHaveVersion.toObject(message.socache_have_versions[j], options);
            }
            if (message.client_session_need != null && message.hasOwnProperty("client_session_need"))
                object.client_session_need = message.client_session_need;
            if (message.client_launcher != null && message.hasOwnProperty("client_launcher"))
                object.client_launcher = message.client_launcher;
            if (message.partner_srcid != null && message.hasOwnProperty("partner_srcid"))
                object.partner_srcid = message.partner_srcid;
            if (message.partner_accountid != null && message.hasOwnProperty("partner_accountid"))
                object.partner_accountid = message.partner_accountid;
            if (message.partner_accountflags != null && message.hasOwnProperty("partner_accountflags"))
                object.partner_accountflags = message.partner_accountflags;
            if (message.partner_accountbalance != null && message.hasOwnProperty("partner_accountbalance"))
                object.partner_accountbalance = message.partner_accountbalance;
            if (message.steam_launcher != null && message.hasOwnProperty("steam_launcher"))
                object.steam_launcher = message.steam_launcher;
            return object;
        };
    
        /**
         * Converts this CMsgClientHello to JSON.
         * @function toJSON
         * @memberof CMsgClientHello
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientHello.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgClientHello
         * @function getTypeUrl
         * @memberof CMsgClientHello
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgClientHello.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgClientHello";
        };
    
        return CMsgClientHello;
    })();
    
    $root.CMsgServerHello = (function() {
    
        /**
         * Properties of a CMsgServerHello.
         * @exports ICMsgServerHello
         * @interface ICMsgServerHello
         * @property {number|null} [version] CMsgServerHello version
         * @property {Array.<ICMsgSOCacheHaveVersion>|null} [socache_have_versions] CMsgServerHello socache_have_versions
         * @property {number|null} [legacy_client_session_need] CMsgServerHello legacy_client_session_need
         * @property {number|null} [client_launcher] CMsgServerHello client_launcher
         * @property {Uint8Array|null} [legacy_steamdatagram_routing] CMsgServerHello legacy_steamdatagram_routing
         * @property {number|null} [required_internal_addr] CMsgServerHello required_internal_addr
         * @property {Uint8Array|null} [steamdatagram_login] CMsgServerHello steamdatagram_login
         * @property {number|null} [socache_control] CMsgServerHello socache_control
         */
    
        /**
         * Constructs a new CMsgServerHello.
         * @exports CMsgServerHello
         * @classdesc Represents a CMsgServerHello.
         * @implements ICMsgServerHello
         * @constructor
         * @param {ICMsgServerHello=} [properties] Properties to set
         */
        function CMsgServerHello(properties) {
            this.socache_have_versions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgServerHello version.
         * @member {number} version
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.version = 0;
    
        /**
         * CMsgServerHello socache_have_versions.
         * @member {Array.<ICMsgSOCacheHaveVersion>} socache_have_versions
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.socache_have_versions = $util.emptyArray;
    
        /**
         * CMsgServerHello legacy_client_session_need.
         * @member {number} legacy_client_session_need
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.legacy_client_session_need = 0;
    
        /**
         * CMsgServerHello client_launcher.
         * @member {number} client_launcher
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.client_launcher = 0;
    
        /**
         * CMsgServerHello legacy_steamdatagram_routing.
         * @member {Uint8Array} legacy_steamdatagram_routing
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.legacy_steamdatagram_routing = $util.newBuffer([]);
    
        /**
         * CMsgServerHello required_internal_addr.
         * @member {number} required_internal_addr
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.required_internal_addr = 0;
    
        /**
         * CMsgServerHello steamdatagram_login.
         * @member {Uint8Array} steamdatagram_login
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.steamdatagram_login = $util.newBuffer([]);
    
        /**
         * CMsgServerHello socache_control.
         * @member {number} socache_control
         * @memberof CMsgServerHello
         * @instance
         */
        CMsgServerHello.prototype.socache_control = 0;
    
        /**
         * Creates a new CMsgServerHello instance using the specified properties.
         * @function create
         * @memberof CMsgServerHello
         * @static
         * @param {ICMsgServerHello=} [properties] Properties to set
         * @returns {CMsgServerHello} CMsgServerHello instance
         */
        CMsgServerHello.create = function create(properties) {
            return new CMsgServerHello(properties);
        };
    
        /**
         * Encodes the specified CMsgServerHello message. Does not implicitly {@link CMsgServerHello.verify|verify} messages.
         * @function encode
         * @memberof CMsgServerHello
         * @static
         * @param {ICMsgServerHello} message CMsgServerHello message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgServerHello.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
            if (message.socache_have_versions != null && message.socache_have_versions.length)
                for (var i = 0; i < message.socache_have_versions.length; ++i)
                    $root.CMsgSOCacheHaveVersion.encode(message.socache_have_versions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.legacy_client_session_need != null && Object.hasOwnProperty.call(message, "legacy_client_session_need"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.legacy_client_session_need);
            if (message.client_launcher != null && Object.hasOwnProperty.call(message, "client_launcher"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.client_launcher);
            if (message.legacy_steamdatagram_routing != null && Object.hasOwnProperty.call(message, "legacy_steamdatagram_routing"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.legacy_steamdatagram_routing);
            if (message.required_internal_addr != null && Object.hasOwnProperty.call(message, "required_internal_addr"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.required_internal_addr);
            if (message.steamdatagram_login != null && Object.hasOwnProperty.call(message, "steamdatagram_login"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.steamdatagram_login);
            if (message.socache_control != null && Object.hasOwnProperty.call(message, "socache_control"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.socache_control);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgServerHello message, length delimited. Does not implicitly {@link CMsgServerHello.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgServerHello
         * @static
         * @param {ICMsgServerHello} message CMsgServerHello message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgServerHello.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgServerHello message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgServerHello
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgServerHello} CMsgServerHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgServerHello.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgServerHello();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.version = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.socache_have_versions && message.socache_have_versions.length))
                            message.socache_have_versions = [];
                        message.socache_have_versions.push($root.CMsgSOCacheHaveVersion.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.legacy_client_session_need = reader.uint32();
                        break;
                    }
                case 4: {
                        message.client_launcher = reader.uint32();
                        break;
                    }
                case 6: {
                        message.legacy_steamdatagram_routing = reader.bytes();
                        break;
                    }
                case 7: {
                        message.required_internal_addr = reader.uint32();
                        break;
                    }
                case 8: {
                        message.steamdatagram_login = reader.bytes();
                        break;
                    }
                case 9: {
                        message.socache_control = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgServerHello message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgServerHello
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgServerHello} CMsgServerHello
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgServerHello.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgServerHello message.
         * @function verify
         * @memberof CMsgServerHello
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgServerHello.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.socache_have_versions != null && message.hasOwnProperty("socache_have_versions")) {
                if (!Array.isArray(message.socache_have_versions))
                    return "socache_have_versions: array expected";
                for (var i = 0; i < message.socache_have_versions.length; ++i) {
                    var error = $root.CMsgSOCacheHaveVersion.verify(message.socache_have_versions[i]);
                    if (error)
                        return "socache_have_versions." + error;
                }
            }
            if (message.legacy_client_session_need != null && message.hasOwnProperty("legacy_client_session_need"))
                if (!$util.isInteger(message.legacy_client_session_need))
                    return "legacy_client_session_need: integer expected";
            if (message.client_launcher != null && message.hasOwnProperty("client_launcher"))
                if (!$util.isInteger(message.client_launcher))
                    return "client_launcher: integer expected";
            if (message.legacy_steamdatagram_routing != null && message.hasOwnProperty("legacy_steamdatagram_routing"))
                if (!(message.legacy_steamdatagram_routing && typeof message.legacy_steamdatagram_routing.length === "number" || $util.isString(message.legacy_steamdatagram_routing)))
                    return "legacy_steamdatagram_routing: buffer expected";
            if (message.required_internal_addr != null && message.hasOwnProperty("required_internal_addr"))
                if (!$util.isInteger(message.required_internal_addr))
                    return "required_internal_addr: integer expected";
            if (message.steamdatagram_login != null && message.hasOwnProperty("steamdatagram_login"))
                if (!(message.steamdatagram_login && typeof message.steamdatagram_login.length === "number" || $util.isString(message.steamdatagram_login)))
                    return "steamdatagram_login: buffer expected";
            if (message.socache_control != null && message.hasOwnProperty("socache_control"))
                if (!$util.isInteger(message.socache_control))
                    return "socache_control: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgServerHello message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgServerHello
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgServerHello} CMsgServerHello
         */
        CMsgServerHello.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgServerHello)
                return object;
            var message = new $root.CMsgServerHello();
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.socache_have_versions) {
                if (!Array.isArray(object.socache_have_versions))
                    throw TypeError(".CMsgServerHello.socache_have_versions: array expected");
                message.socache_have_versions = [];
                for (var i = 0; i < object.socache_have_versions.length; ++i) {
                    if (typeof object.socache_have_versions[i] !== "object")
                        throw TypeError(".CMsgServerHello.socache_have_versions: object expected");
                    message.socache_have_versions[i] = $root.CMsgSOCacheHaveVersion.fromObject(object.socache_have_versions[i]);
                }
            }
            if (object.legacy_client_session_need != null)
                message.legacy_client_session_need = object.legacy_client_session_need >>> 0;
            if (object.client_launcher != null)
                message.client_launcher = object.client_launcher >>> 0;
            if (object.legacy_steamdatagram_routing != null)
                if (typeof object.legacy_steamdatagram_routing === "string")
                    $util.base64.decode(object.legacy_steamdatagram_routing, message.legacy_steamdatagram_routing = $util.newBuffer($util.base64.length(object.legacy_steamdatagram_routing)), 0);
                else if (object.legacy_steamdatagram_routing.length >= 0)
                    message.legacy_steamdatagram_routing = object.legacy_steamdatagram_routing;
            if (object.required_internal_addr != null)
                message.required_internal_addr = object.required_internal_addr >>> 0;
            if (object.steamdatagram_login != null)
                if (typeof object.steamdatagram_login === "string")
                    $util.base64.decode(object.steamdatagram_login, message.steamdatagram_login = $util.newBuffer($util.base64.length(object.steamdatagram_login)), 0);
                else if (object.steamdatagram_login.length >= 0)
                    message.steamdatagram_login = object.steamdatagram_login;
            if (object.socache_control != null)
                message.socache_control = object.socache_control >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgServerHello message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgServerHello
         * @static
         * @param {CMsgServerHello} message CMsgServerHello
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgServerHello.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.socache_have_versions = [];
            if (options.defaults) {
                object.version = 0;
                object.legacy_client_session_need = 0;
                object.client_launcher = 0;
                if (options.bytes === String)
                    object.legacy_steamdatagram_routing = "";
                else {
                    object.legacy_steamdatagram_routing = [];
                    if (options.bytes !== Array)
                        object.legacy_steamdatagram_routing = $util.newBuffer(object.legacy_steamdatagram_routing);
                }
                object.required_internal_addr = 0;
                if (options.bytes === String)
                    object.steamdatagram_login = "";
                else {
                    object.steamdatagram_login = [];
                    if (options.bytes !== Array)
                        object.steamdatagram_login = $util.newBuffer(object.steamdatagram_login);
                }
                object.socache_control = 0;
            }
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.socache_have_versions && message.socache_have_versions.length) {
                object.socache_have_versions = [];
                for (var j = 0; j < message.socache_have_versions.length; ++j)
                    object.socache_have_versions[j] = $root.CMsgSOCacheHaveVersion.toObject(message.socache_have_versions[j], options);
            }
            if (message.legacy_client_session_need != null && message.hasOwnProperty("legacy_client_session_need"))
                object.legacy_client_session_need = message.legacy_client_session_need;
            if (message.client_launcher != null && message.hasOwnProperty("client_launcher"))
                object.client_launcher = message.client_launcher;
            if (message.legacy_steamdatagram_routing != null && message.hasOwnProperty("legacy_steamdatagram_routing"))
                object.legacy_steamdatagram_routing = options.bytes === String ? $util.base64.encode(message.legacy_steamdatagram_routing, 0, message.legacy_steamdatagram_routing.length) : options.bytes === Array ? Array.prototype.slice.call(message.legacy_steamdatagram_routing) : message.legacy_steamdatagram_routing;
            if (message.required_internal_addr != null && message.hasOwnProperty("required_internal_addr"))
                object.required_internal_addr = message.required_internal_addr;
            if (message.steamdatagram_login != null && message.hasOwnProperty("steamdatagram_login"))
                object.steamdatagram_login = options.bytes === String ? $util.base64.encode(message.steamdatagram_login, 0, message.steamdatagram_login.length) : options.bytes === Array ? Array.prototype.slice.call(message.steamdatagram_login) : message.steamdatagram_login;
            if (message.socache_control != null && message.hasOwnProperty("socache_control"))
                object.socache_control = message.socache_control;
            return object;
        };
    
        /**
         * Converts this CMsgServerHello to JSON.
         * @function toJSON
         * @memberof CMsgServerHello
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgServerHello.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgServerHello
         * @function getTypeUrl
         * @memberof CMsgServerHello
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgServerHello.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgServerHello";
        };
    
        return CMsgServerHello;
    })();
    
    $root.CMsgClientWelcome = (function() {
    
        /**
         * Properties of a CMsgClientWelcome.
         * @exports ICMsgClientWelcome
         * @interface ICMsgClientWelcome
         * @property {number|null} [version] CMsgClientWelcome version
         * @property {Uint8Array|null} [game_data] CMsgClientWelcome game_data
         * @property {Array.<ICMsgSOCacheSubscribed>|null} [outofdate_subscribed_caches] CMsgClientWelcome outofdate_subscribed_caches
         * @property {Array.<ICMsgSOCacheSubscriptionCheck>|null} [uptodate_subscribed_caches] CMsgClientWelcome uptodate_subscribed_caches
         * @property {CMsgClientWelcome.ILocation|null} [location] CMsgClientWelcome location
         * @property {Uint8Array|null} [game_data2] CMsgClientWelcome game_data2
         * @property {number|null} [rtime32_gc_welcome_timestamp] CMsgClientWelcome rtime32_gc_welcome_timestamp
         * @property {number|null} [currency] CMsgClientWelcome currency
         * @property {number|null} [balance] CMsgClientWelcome balance
         * @property {string|null} [balance_url] CMsgClientWelcome balance_url
         * @property {string|null} [txn_country_code] CMsgClientWelcome txn_country_code
         */
    
        /**
         * Constructs a new CMsgClientWelcome.
         * @exports CMsgClientWelcome
         * @classdesc Represents a CMsgClientWelcome.
         * @implements ICMsgClientWelcome
         * @constructor
         * @param {ICMsgClientWelcome=} [properties] Properties to set
         */
        function CMsgClientWelcome(properties) {
            this.outofdate_subscribed_caches = [];
            this.uptodate_subscribed_caches = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgClientWelcome version.
         * @member {number} version
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.version = 0;
    
        /**
         * CMsgClientWelcome game_data.
         * @member {Uint8Array} game_data
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.game_data = $util.newBuffer([]);
    
        /**
         * CMsgClientWelcome outofdate_subscribed_caches.
         * @member {Array.<ICMsgSOCacheSubscribed>} outofdate_subscribed_caches
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.outofdate_subscribed_caches = $util.emptyArray;
    
        /**
         * CMsgClientWelcome uptodate_subscribed_caches.
         * @member {Array.<ICMsgSOCacheSubscriptionCheck>} uptodate_subscribed_caches
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.uptodate_subscribed_caches = $util.emptyArray;
    
        /**
         * CMsgClientWelcome location.
         * @member {CMsgClientWelcome.ILocation|null|undefined} location
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.location = null;
    
        /**
         * CMsgClientWelcome game_data2.
         * @member {Uint8Array} game_data2
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.game_data2 = $util.newBuffer([]);
    
        /**
         * CMsgClientWelcome rtime32_gc_welcome_timestamp.
         * @member {number} rtime32_gc_welcome_timestamp
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.rtime32_gc_welcome_timestamp = 0;
    
        /**
         * CMsgClientWelcome currency.
         * @member {number} currency
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.currency = 0;
    
        /**
         * CMsgClientWelcome balance.
         * @member {number} balance
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.balance = 0;
    
        /**
         * CMsgClientWelcome balance_url.
         * @member {string} balance_url
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.balance_url = "";
    
        /**
         * CMsgClientWelcome txn_country_code.
         * @member {string} txn_country_code
         * @memberof CMsgClientWelcome
         * @instance
         */
        CMsgClientWelcome.prototype.txn_country_code = "";
    
        /**
         * Creates a new CMsgClientWelcome instance using the specified properties.
         * @function create
         * @memberof CMsgClientWelcome
         * @static
         * @param {ICMsgClientWelcome=} [properties] Properties to set
         * @returns {CMsgClientWelcome} CMsgClientWelcome instance
         */
        CMsgClientWelcome.create = function create(properties) {
            return new CMsgClientWelcome(properties);
        };
    
        /**
         * Encodes the specified CMsgClientWelcome message. Does not implicitly {@link CMsgClientWelcome.verify|verify} messages.
         * @function encode
         * @memberof CMsgClientWelcome
         * @static
         * @param {ICMsgClientWelcome} message CMsgClientWelcome message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientWelcome.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
            if (message.game_data != null && Object.hasOwnProperty.call(message, "game_data"))
                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.game_data);
            if (message.outofdate_subscribed_caches != null && message.outofdate_subscribed_caches.length)
                for (var i = 0; i < message.outofdate_subscribed_caches.length; ++i)
                    $root.CMsgSOCacheSubscribed.encode(message.outofdate_subscribed_caches[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.uptodate_subscribed_caches != null && message.uptodate_subscribed_caches.length)
                for (var i = 0; i < message.uptodate_subscribed_caches.length; ++i)
                    $root.CMsgSOCacheSubscriptionCheck.encode(message.uptodate_subscribed_caches[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                $root.CMsgClientWelcome.Location.encode(message.location, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
            if (message.game_data2 != null && Object.hasOwnProperty.call(message, "game_data2"))
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.game_data2);
            if (message.rtime32_gc_welcome_timestamp != null && Object.hasOwnProperty.call(message, "rtime32_gc_welcome_timestamp"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.rtime32_gc_welcome_timestamp);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.currency);
            if (message.balance != null && Object.hasOwnProperty.call(message, "balance"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.balance);
            if (message.balance_url != null && Object.hasOwnProperty.call(message, "balance_url"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.balance_url);
            if (message.txn_country_code != null && Object.hasOwnProperty.call(message, "txn_country_code"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.txn_country_code);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgClientWelcome message, length delimited. Does not implicitly {@link CMsgClientWelcome.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgClientWelcome
         * @static
         * @param {ICMsgClientWelcome} message CMsgClientWelcome message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgClientWelcome.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgClientWelcome message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgClientWelcome
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgClientWelcome} CMsgClientWelcome
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientWelcome.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientWelcome();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.version = reader.uint32();
                        break;
                    }
                case 2: {
                        message.game_data = reader.bytes();
                        break;
                    }
                case 3: {
                        if (!(message.outofdate_subscribed_caches && message.outofdate_subscribed_caches.length))
                            message.outofdate_subscribed_caches = [];
                        message.outofdate_subscribed_caches.push($root.CMsgSOCacheSubscribed.decode(reader, reader.uint32()));
                        break;
                    }
                case 4: {
                        if (!(message.uptodate_subscribed_caches && message.uptodate_subscribed_caches.length))
                            message.uptodate_subscribed_caches = [];
                        message.uptodate_subscribed_caches.push($root.CMsgSOCacheSubscriptionCheck.decode(reader, reader.uint32()));
                        break;
                    }
                case 5: {
                        message.location = $root.CMsgClientWelcome.Location.decode(reader, reader.uint32());
                        break;
                    }
                case 6: {
                        message.game_data2 = reader.bytes();
                        break;
                    }
                case 7: {
                        message.rtime32_gc_welcome_timestamp = reader.uint32();
                        break;
                    }
                case 8: {
                        message.currency = reader.uint32();
                        break;
                    }
                case 9: {
                        message.balance = reader.uint32();
                        break;
                    }
                case 10: {
                        message.balance_url = reader.string();
                        break;
                    }
                case 11: {
                        message.txn_country_code = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgClientWelcome message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgClientWelcome
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgClientWelcome} CMsgClientWelcome
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgClientWelcome.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgClientWelcome message.
         * @function verify
         * @memberof CMsgClientWelcome
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgClientWelcome.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.version != null && message.hasOwnProperty("version"))
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
            if (message.game_data != null && message.hasOwnProperty("game_data"))
                if (!(message.game_data && typeof message.game_data.length === "number" || $util.isString(message.game_data)))
                    return "game_data: buffer expected";
            if (message.outofdate_subscribed_caches != null && message.hasOwnProperty("outofdate_subscribed_caches")) {
                if (!Array.isArray(message.outofdate_subscribed_caches))
                    return "outofdate_subscribed_caches: array expected";
                for (var i = 0; i < message.outofdate_subscribed_caches.length; ++i) {
                    var error = $root.CMsgSOCacheSubscribed.verify(message.outofdate_subscribed_caches[i]);
                    if (error)
                        return "outofdate_subscribed_caches." + error;
                }
            }
            if (message.uptodate_subscribed_caches != null && message.hasOwnProperty("uptodate_subscribed_caches")) {
                if (!Array.isArray(message.uptodate_subscribed_caches))
                    return "uptodate_subscribed_caches: array expected";
                for (var i = 0; i < message.uptodate_subscribed_caches.length; ++i) {
                    var error = $root.CMsgSOCacheSubscriptionCheck.verify(message.uptodate_subscribed_caches[i]);
                    if (error)
                        return "uptodate_subscribed_caches." + error;
                }
            }
            if (message.location != null && message.hasOwnProperty("location")) {
                var error = $root.CMsgClientWelcome.Location.verify(message.location);
                if (error)
                    return "location." + error;
            }
            if (message.game_data2 != null && message.hasOwnProperty("game_data2"))
                if (!(message.game_data2 && typeof message.game_data2.length === "number" || $util.isString(message.game_data2)))
                    return "game_data2: buffer expected";
            if (message.rtime32_gc_welcome_timestamp != null && message.hasOwnProperty("rtime32_gc_welcome_timestamp"))
                if (!$util.isInteger(message.rtime32_gc_welcome_timestamp))
                    return "rtime32_gc_welcome_timestamp: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isInteger(message.currency))
                    return "currency: integer expected";
            if (message.balance != null && message.hasOwnProperty("balance"))
                if (!$util.isInteger(message.balance))
                    return "balance: integer expected";
            if (message.balance_url != null && message.hasOwnProperty("balance_url"))
                if (!$util.isString(message.balance_url))
                    return "balance_url: string expected";
            if (message.txn_country_code != null && message.hasOwnProperty("txn_country_code"))
                if (!$util.isString(message.txn_country_code))
                    return "txn_country_code: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgClientWelcome message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgClientWelcome
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgClientWelcome} CMsgClientWelcome
         */
        CMsgClientWelcome.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgClientWelcome)
                return object;
            var message = new $root.CMsgClientWelcome();
            if (object.version != null)
                message.version = object.version >>> 0;
            if (object.game_data != null)
                if (typeof object.game_data === "string")
                    $util.base64.decode(object.game_data, message.game_data = $util.newBuffer($util.base64.length(object.game_data)), 0);
                else if (object.game_data.length >= 0)
                    message.game_data = object.game_data;
            if (object.outofdate_subscribed_caches) {
                if (!Array.isArray(object.outofdate_subscribed_caches))
                    throw TypeError(".CMsgClientWelcome.outofdate_subscribed_caches: array expected");
                message.outofdate_subscribed_caches = [];
                for (var i = 0; i < object.outofdate_subscribed_caches.length; ++i) {
                    if (typeof object.outofdate_subscribed_caches[i] !== "object")
                        throw TypeError(".CMsgClientWelcome.outofdate_subscribed_caches: object expected");
                    message.outofdate_subscribed_caches[i] = $root.CMsgSOCacheSubscribed.fromObject(object.outofdate_subscribed_caches[i]);
                }
            }
            if (object.uptodate_subscribed_caches) {
                if (!Array.isArray(object.uptodate_subscribed_caches))
                    throw TypeError(".CMsgClientWelcome.uptodate_subscribed_caches: array expected");
                message.uptodate_subscribed_caches = [];
                for (var i = 0; i < object.uptodate_subscribed_caches.length; ++i) {
                    if (typeof object.uptodate_subscribed_caches[i] !== "object")
                        throw TypeError(".CMsgClientWelcome.uptodate_subscribed_caches: object expected");
                    message.uptodate_subscribed_caches[i] = $root.CMsgSOCacheSubscriptionCheck.fromObject(object.uptodate_subscribed_caches[i]);
                }
            }
            if (object.location != null) {
                if (typeof object.location !== "object")
                    throw TypeError(".CMsgClientWelcome.location: object expected");
                message.location = $root.CMsgClientWelcome.Location.fromObject(object.location);
            }
            if (object.game_data2 != null)
                if (typeof object.game_data2 === "string")
                    $util.base64.decode(object.game_data2, message.game_data2 = $util.newBuffer($util.base64.length(object.game_data2)), 0);
                else if (object.game_data2.length >= 0)
                    message.game_data2 = object.game_data2;
            if (object.rtime32_gc_welcome_timestamp != null)
                message.rtime32_gc_welcome_timestamp = object.rtime32_gc_welcome_timestamp >>> 0;
            if (object.currency != null)
                message.currency = object.currency >>> 0;
            if (object.balance != null)
                message.balance = object.balance >>> 0;
            if (object.balance_url != null)
                message.balance_url = String(object.balance_url);
            if (object.txn_country_code != null)
                message.txn_country_code = String(object.txn_country_code);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgClientWelcome message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgClientWelcome
         * @static
         * @param {CMsgClientWelcome} message CMsgClientWelcome
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgClientWelcome.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.outofdate_subscribed_caches = [];
                object.uptodate_subscribed_caches = [];
            }
            if (options.defaults) {
                object.version = 0;
                if (options.bytes === String)
                    object.game_data = "";
                else {
                    object.game_data = [];
                    if (options.bytes !== Array)
                        object.game_data = $util.newBuffer(object.game_data);
                }
                object.location = null;
                if (options.bytes === String)
                    object.game_data2 = "";
                else {
                    object.game_data2 = [];
                    if (options.bytes !== Array)
                        object.game_data2 = $util.newBuffer(object.game_data2);
                }
                object.rtime32_gc_welcome_timestamp = 0;
                object.currency = 0;
                object.balance = 0;
                object.balance_url = "";
                object.txn_country_code = "";
            }
            if (message.version != null && message.hasOwnProperty("version"))
                object.version = message.version;
            if (message.game_data != null && message.hasOwnProperty("game_data"))
                object.game_data = options.bytes === String ? $util.base64.encode(message.game_data, 0, message.game_data.length) : options.bytes === Array ? Array.prototype.slice.call(message.game_data) : message.game_data;
            if (message.outofdate_subscribed_caches && message.outofdate_subscribed_caches.length) {
                object.outofdate_subscribed_caches = [];
                for (var j = 0; j < message.outofdate_subscribed_caches.length; ++j)
                    object.outofdate_subscribed_caches[j] = $root.CMsgSOCacheSubscribed.toObject(message.outofdate_subscribed_caches[j], options);
            }
            if (message.uptodate_subscribed_caches && message.uptodate_subscribed_caches.length) {
                object.uptodate_subscribed_caches = [];
                for (var j = 0; j < message.uptodate_subscribed_caches.length; ++j)
                    object.uptodate_subscribed_caches[j] = $root.CMsgSOCacheSubscriptionCheck.toObject(message.uptodate_subscribed_caches[j], options);
            }
            if (message.location != null && message.hasOwnProperty("location"))
                object.location = $root.CMsgClientWelcome.Location.toObject(message.location, options);
            if (message.game_data2 != null && message.hasOwnProperty("game_data2"))
                object.game_data2 = options.bytes === String ? $util.base64.encode(message.game_data2, 0, message.game_data2.length) : options.bytes === Array ? Array.prototype.slice.call(message.game_data2) : message.game_data2;
            if (message.rtime32_gc_welcome_timestamp != null && message.hasOwnProperty("rtime32_gc_welcome_timestamp"))
                object.rtime32_gc_welcome_timestamp = message.rtime32_gc_welcome_timestamp;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            if (message.balance != null && message.hasOwnProperty("balance"))
                object.balance = message.balance;
            if (message.balance_url != null && message.hasOwnProperty("balance_url"))
                object.balance_url = message.balance_url;
            if (message.txn_country_code != null && message.hasOwnProperty("txn_country_code"))
                object.txn_country_code = message.txn_country_code;
            return object;
        };
    
        /**
         * Converts this CMsgClientWelcome to JSON.
         * @function toJSON
         * @memberof CMsgClientWelcome
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgClientWelcome.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgClientWelcome
         * @function getTypeUrl
         * @memberof CMsgClientWelcome
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgClientWelcome.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgClientWelcome";
        };
    
        CMsgClientWelcome.Location = (function() {
    
            /**
             * Properties of a Location.
             * @memberof CMsgClientWelcome
             * @interface ILocation
             * @property {number|null} [latitude] Location latitude
             * @property {number|null} [longitude] Location longitude
             * @property {string|null} [country] Location country
             */
    
            /**
             * Constructs a new Location.
             * @memberof CMsgClientWelcome
             * @classdesc Represents a Location.
             * @implements ILocation
             * @constructor
             * @param {CMsgClientWelcome.ILocation=} [properties] Properties to set
             */
            function Location(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Location latitude.
             * @member {number} latitude
             * @memberof CMsgClientWelcome.Location
             * @instance
             */
            Location.prototype.latitude = 0;
    
            /**
             * Location longitude.
             * @member {number} longitude
             * @memberof CMsgClientWelcome.Location
             * @instance
             */
            Location.prototype.longitude = 0;
    
            /**
             * Location country.
             * @member {string} country
             * @memberof CMsgClientWelcome.Location
             * @instance
             */
            Location.prototype.country = "";
    
            /**
             * Creates a new Location instance using the specified properties.
             * @function create
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {CMsgClientWelcome.ILocation=} [properties] Properties to set
             * @returns {CMsgClientWelcome.Location} Location instance
             */
            Location.create = function create(properties) {
                return new Location(properties);
            };
    
            /**
             * Encodes the specified Location message. Does not implicitly {@link CMsgClientWelcome.Location.verify|verify} messages.
             * @function encode
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {CMsgClientWelcome.ILocation} message Location message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Location.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.latitude != null && Object.hasOwnProperty.call(message, "latitude"))
                    writer.uint32(/* id 1, wireType 5 =*/13).float(message.latitude);
                if (message.longitude != null && Object.hasOwnProperty.call(message, "longitude"))
                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.longitude);
                if (message.country != null && Object.hasOwnProperty.call(message, "country"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.country);
                return writer;
            };
    
            /**
             * Encodes the specified Location message, length delimited. Does not implicitly {@link CMsgClientWelcome.Location.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {CMsgClientWelcome.ILocation} message Location message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Location.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Location message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgClientWelcome.Location} Location
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Location.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgClientWelcome.Location();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.latitude = reader.float();
                            break;
                        }
                    case 2: {
                            message.longitude = reader.float();
                            break;
                        }
                    case 3: {
                            message.country = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Location message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgClientWelcome.Location} Location
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Location.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Location message.
             * @function verify
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Location.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.latitude != null && message.hasOwnProperty("latitude"))
                    if (typeof message.latitude !== "number")
                        return "latitude: number expected";
                if (message.longitude != null && message.hasOwnProperty("longitude"))
                    if (typeof message.longitude !== "number")
                        return "longitude: number expected";
                if (message.country != null && message.hasOwnProperty("country"))
                    if (!$util.isString(message.country))
                        return "country: string expected";
                return null;
            };
    
            /**
             * Creates a Location message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgClientWelcome.Location} Location
             */
            Location.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgClientWelcome.Location)
                    return object;
                var message = new $root.CMsgClientWelcome.Location();
                if (object.latitude != null)
                    message.latitude = Number(object.latitude);
                if (object.longitude != null)
                    message.longitude = Number(object.longitude);
                if (object.country != null)
                    message.country = String(object.country);
                return message;
            };
    
            /**
             * Creates a plain object from a Location message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {CMsgClientWelcome.Location} message Location
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Location.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.latitude = 0;
                    object.longitude = 0;
                    object.country = "";
                }
                if (message.latitude != null && message.hasOwnProperty("latitude"))
                    object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;
                if (message.longitude != null && message.hasOwnProperty("longitude"))
                    object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;
                if (message.country != null && message.hasOwnProperty("country"))
                    object.country = message.country;
                return object;
            };
    
            /**
             * Converts this Location to JSON.
             * @function toJSON
             * @memberof CMsgClientWelcome.Location
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Location.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Location
             * @function getTypeUrl
             * @memberof CMsgClientWelcome.Location
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgClientWelcome.Location";
            };
    
            return Location;
        })();
    
        return CMsgClientWelcome;
    })();
    
    $root.CMsgConnectionStatus = (function() {
    
        /**
         * Properties of a CMsgConnectionStatus.
         * @exports ICMsgConnectionStatus
         * @interface ICMsgConnectionStatus
         * @property {GCConnectionStatus|null} [status] CMsgConnectionStatus status
         * @property {number|null} [client_session_need] CMsgConnectionStatus client_session_need
         * @property {number|null} [queue_position] CMsgConnectionStatus queue_position
         * @property {number|null} [queue_size] CMsgConnectionStatus queue_size
         * @property {number|null} [wait_seconds] CMsgConnectionStatus wait_seconds
         * @property {number|null} [estimated_wait_seconds_remaining] CMsgConnectionStatus estimated_wait_seconds_remaining
         */
    
        /**
         * Constructs a new CMsgConnectionStatus.
         * @exports CMsgConnectionStatus
         * @classdesc Represents a CMsgConnectionStatus.
         * @implements ICMsgConnectionStatus
         * @constructor
         * @param {ICMsgConnectionStatus=} [properties] Properties to set
         */
        function CMsgConnectionStatus(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgConnectionStatus status.
         * @member {GCConnectionStatus} status
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.status = 0;
    
        /**
         * CMsgConnectionStatus client_session_need.
         * @member {number} client_session_need
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.client_session_need = 0;
    
        /**
         * CMsgConnectionStatus queue_position.
         * @member {number} queue_position
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.queue_position = 0;
    
        /**
         * CMsgConnectionStatus queue_size.
         * @member {number} queue_size
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.queue_size = 0;
    
        /**
         * CMsgConnectionStatus wait_seconds.
         * @member {number} wait_seconds
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.wait_seconds = 0;
    
        /**
         * CMsgConnectionStatus estimated_wait_seconds_remaining.
         * @member {number} estimated_wait_seconds_remaining
         * @memberof CMsgConnectionStatus
         * @instance
         */
        CMsgConnectionStatus.prototype.estimated_wait_seconds_remaining = 0;
    
        /**
         * Creates a new CMsgConnectionStatus instance using the specified properties.
         * @function create
         * @memberof CMsgConnectionStatus
         * @static
         * @param {ICMsgConnectionStatus=} [properties] Properties to set
         * @returns {CMsgConnectionStatus} CMsgConnectionStatus instance
         */
        CMsgConnectionStatus.create = function create(properties) {
            return new CMsgConnectionStatus(properties);
        };
    
        /**
         * Encodes the specified CMsgConnectionStatus message. Does not implicitly {@link CMsgConnectionStatus.verify|verify} messages.
         * @function encode
         * @memberof CMsgConnectionStatus
         * @static
         * @param {ICMsgConnectionStatus} message CMsgConnectionStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConnectionStatus.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.status);
            if (message.client_session_need != null && Object.hasOwnProperty.call(message, "client_session_need"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.client_session_need);
            if (message.queue_position != null && Object.hasOwnProperty.call(message, "queue_position"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.queue_position);
            if (message.queue_size != null && Object.hasOwnProperty.call(message, "queue_size"))
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.queue_size);
            if (message.wait_seconds != null && Object.hasOwnProperty.call(message, "wait_seconds"))
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.wait_seconds);
            if (message.estimated_wait_seconds_remaining != null && Object.hasOwnProperty.call(message, "estimated_wait_seconds_remaining"))
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.estimated_wait_seconds_remaining);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgConnectionStatus message, length delimited. Does not implicitly {@link CMsgConnectionStatus.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgConnectionStatus
         * @static
         * @param {ICMsgConnectionStatus} message CMsgConnectionStatus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConnectionStatus.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgConnectionStatus message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgConnectionStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgConnectionStatus} CMsgConnectionStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConnectionStatus.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgConnectionStatus();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.status = reader.int32();
                        break;
                    }
                case 2: {
                        message.client_session_need = reader.uint32();
                        break;
                    }
                case 3: {
                        message.queue_position = reader.int32();
                        break;
                    }
                case 4: {
                        message.queue_size = reader.int32();
                        break;
                    }
                case 5: {
                        message.wait_seconds = reader.int32();
                        break;
                    }
                case 6: {
                        message.estimated_wait_seconds_remaining = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgConnectionStatus message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgConnectionStatus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgConnectionStatus} CMsgConnectionStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConnectionStatus.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgConnectionStatus message.
         * @function verify
         * @memberof CMsgConnectionStatus
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgConnectionStatus.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.status != null && message.hasOwnProperty("status"))
                switch (message.status) {
                default:
                    return "status: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.client_session_need != null && message.hasOwnProperty("client_session_need"))
                if (!$util.isInteger(message.client_session_need))
                    return "client_session_need: integer expected";
            if (message.queue_position != null && message.hasOwnProperty("queue_position"))
                if (!$util.isInteger(message.queue_position))
                    return "queue_position: integer expected";
            if (message.queue_size != null && message.hasOwnProperty("queue_size"))
                if (!$util.isInteger(message.queue_size))
                    return "queue_size: integer expected";
            if (message.wait_seconds != null && message.hasOwnProperty("wait_seconds"))
                if (!$util.isInteger(message.wait_seconds))
                    return "wait_seconds: integer expected";
            if (message.estimated_wait_seconds_remaining != null && message.hasOwnProperty("estimated_wait_seconds_remaining"))
                if (!$util.isInteger(message.estimated_wait_seconds_remaining))
                    return "estimated_wait_seconds_remaining: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgConnectionStatus message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgConnectionStatus
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgConnectionStatus} CMsgConnectionStatus
         */
        CMsgConnectionStatus.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgConnectionStatus)
                return object;
            var message = new $root.CMsgConnectionStatus();
            switch (object.status) {
            default:
                if (typeof object.status === "number") {
                    message.status = object.status;
                    break;
                }
                break;
            case "GCConnectionStatus_HAVE_SESSION":
            case 0:
                message.status = 0;
                break;
            case "GCConnectionStatus_GC_GOING_DOWN":
            case 1:
                message.status = 1;
                break;
            case "GCConnectionStatus_NO_SESSION":
            case 2:
                message.status = 2;
                break;
            case "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE":
            case 3:
                message.status = 3;
                break;
            case "GCConnectionStatus_NO_STEAM":
            case 4:
                message.status = 4;
                break;
            }
            if (object.client_session_need != null)
                message.client_session_need = object.client_session_need >>> 0;
            if (object.queue_position != null)
                message.queue_position = object.queue_position | 0;
            if (object.queue_size != null)
                message.queue_size = object.queue_size | 0;
            if (object.wait_seconds != null)
                message.wait_seconds = object.wait_seconds | 0;
            if (object.estimated_wait_seconds_remaining != null)
                message.estimated_wait_seconds_remaining = object.estimated_wait_seconds_remaining | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgConnectionStatus message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgConnectionStatus
         * @static
         * @param {CMsgConnectionStatus} message CMsgConnectionStatus
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgConnectionStatus.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.status = options.enums === String ? "GCConnectionStatus_HAVE_SESSION" : 0;
                object.client_session_need = 0;
                object.queue_position = 0;
                object.queue_size = 0;
                object.wait_seconds = 0;
                object.estimated_wait_seconds_remaining = 0;
            }
            if (message.status != null && message.hasOwnProperty("status"))
                object.status = options.enums === String ? $root.GCConnectionStatus[message.status] === undefined ? message.status : $root.GCConnectionStatus[message.status] : message.status;
            if (message.client_session_need != null && message.hasOwnProperty("client_session_need"))
                object.client_session_need = message.client_session_need;
            if (message.queue_position != null && message.hasOwnProperty("queue_position"))
                object.queue_position = message.queue_position;
            if (message.queue_size != null && message.hasOwnProperty("queue_size"))
                object.queue_size = message.queue_size;
            if (message.wait_seconds != null && message.hasOwnProperty("wait_seconds"))
                object.wait_seconds = message.wait_seconds;
            if (message.estimated_wait_seconds_remaining != null && message.hasOwnProperty("estimated_wait_seconds_remaining"))
                object.estimated_wait_seconds_remaining = message.estimated_wait_seconds_remaining;
            return object;
        };
    
        /**
         * Converts this CMsgConnectionStatus to JSON.
         * @function toJSON
         * @memberof CMsgConnectionStatus
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgConnectionStatus.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgConnectionStatus
         * @function getTypeUrl
         * @memberof CMsgConnectionStatus
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgConnectionStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgConnectionStatus";
        };
    
        return CMsgConnectionStatus;
    })();
    
    $root.CWorkshop_PopulateItemDescriptions_Request = (function() {
    
        /**
         * Properties of a CWorkshop_PopulateItemDescriptions_Request.
         * @exports ICWorkshop_PopulateItemDescriptions_Request
         * @interface ICWorkshop_PopulateItemDescriptions_Request
         * @property {number|null} [appid] CWorkshop_PopulateItemDescriptions_Request appid
         * @property {Array.<CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock>|null} [languages] CWorkshop_PopulateItemDescriptions_Request languages
         */
    
        /**
         * Constructs a new CWorkshop_PopulateItemDescriptions_Request.
         * @exports CWorkshop_PopulateItemDescriptions_Request
         * @classdesc Represents a CWorkshop_PopulateItemDescriptions_Request.
         * @implements ICWorkshop_PopulateItemDescriptions_Request
         * @constructor
         * @param {ICWorkshop_PopulateItemDescriptions_Request=} [properties] Properties to set
         */
        function CWorkshop_PopulateItemDescriptions_Request(properties) {
            this.languages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_PopulateItemDescriptions_Request appid.
         * @member {number} appid
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @instance
         */
        CWorkshop_PopulateItemDescriptions_Request.prototype.appid = 0;
    
        /**
         * CWorkshop_PopulateItemDescriptions_Request languages.
         * @member {Array.<CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock>} languages
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @instance
         */
        CWorkshop_PopulateItemDescriptions_Request.prototype.languages = $util.emptyArray;
    
        /**
         * Creates a new CWorkshop_PopulateItemDescriptions_Request instance using the specified properties.
         * @function create
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {ICWorkshop_PopulateItemDescriptions_Request=} [properties] Properties to set
         * @returns {CWorkshop_PopulateItemDescriptions_Request} CWorkshop_PopulateItemDescriptions_Request instance
         */
        CWorkshop_PopulateItemDescriptions_Request.create = function create(properties) {
            return new CWorkshop_PopulateItemDescriptions_Request(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_PopulateItemDescriptions_Request message. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {ICWorkshop_PopulateItemDescriptions_Request} message CWorkshop_PopulateItemDescriptions_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_PopulateItemDescriptions_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.languages != null && message.languages.length)
                for (var i = 0; i < message.languages.length; ++i)
                    $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.encode(message.languages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_PopulateItemDescriptions_Request message, length delimited. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {ICWorkshop_PopulateItemDescriptions_Request} message CWorkshop_PopulateItemDescriptions_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_PopulateItemDescriptions_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_PopulateItemDescriptions_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_PopulateItemDescriptions_Request} CWorkshop_PopulateItemDescriptions_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_PopulateItemDescriptions_Request.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_PopulateItemDescriptions_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.languages && message.languages.length))
                            message.languages = [];
                        message.languages.push($root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_PopulateItemDescriptions_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_PopulateItemDescriptions_Request} CWorkshop_PopulateItemDescriptions_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_PopulateItemDescriptions_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_PopulateItemDescriptions_Request message.
         * @function verify
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_PopulateItemDescriptions_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.languages != null && message.hasOwnProperty("languages")) {
                if (!Array.isArray(message.languages))
                    return "languages: array expected";
                for (var i = 0; i < message.languages.length; ++i) {
                    var error = $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.verify(message.languages[i]);
                    if (error)
                        return "languages." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CWorkshop_PopulateItemDescriptions_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_PopulateItemDescriptions_Request} CWorkshop_PopulateItemDescriptions_Request
         */
        CWorkshop_PopulateItemDescriptions_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_PopulateItemDescriptions_Request)
                return object;
            var message = new $root.CWorkshop_PopulateItemDescriptions_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.languages) {
                if (!Array.isArray(object.languages))
                    throw TypeError(".CWorkshop_PopulateItemDescriptions_Request.languages: array expected");
                message.languages = [];
                for (var i = 0; i < object.languages.length; ++i) {
                    if (typeof object.languages[i] !== "object")
                        throw TypeError(".CWorkshop_PopulateItemDescriptions_Request.languages: object expected");
                    message.languages[i] = $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.fromObject(object.languages[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_PopulateItemDescriptions_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {CWorkshop_PopulateItemDescriptions_Request} message CWorkshop_PopulateItemDescriptions_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_PopulateItemDescriptions_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.languages = [];
            if (options.defaults)
                object.appid = 0;
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.languages && message.languages.length) {
                object.languages = [];
                for (var j = 0; j < message.languages.length; ++j)
                    object.languages[j] = $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.toObject(message.languages[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CWorkshop_PopulateItemDescriptions_Request to JSON.
         * @function toJSON
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_PopulateItemDescriptions_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_PopulateItemDescriptions_Request
         * @function getTypeUrl
         * @memberof CWorkshop_PopulateItemDescriptions_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_PopulateItemDescriptions_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_PopulateItemDescriptions_Request";
        };
    
        CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription = (function() {
    
            /**
             * Properties of a SingleItemDescription.
             * @memberof CWorkshop_PopulateItemDescriptions_Request
             * @interface ISingleItemDescription
             * @property {number|null} [gameitemid] SingleItemDescription gameitemid
             * @property {string|null} [item_description] SingleItemDescription item_description
             * @property {boolean|null} [one_per_account] SingleItemDescription one_per_account
             */
    
            /**
             * Constructs a new SingleItemDescription.
             * @memberof CWorkshop_PopulateItemDescriptions_Request
             * @classdesc Represents a SingleItemDescription.
             * @implements ISingleItemDescription
             * @constructor
             * @param {CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription=} [properties] Properties to set
             */
            function SingleItemDescription(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * SingleItemDescription gameitemid.
             * @member {number} gameitemid
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @instance
             */
            SingleItemDescription.prototype.gameitemid = 0;
    
            /**
             * SingleItemDescription item_description.
             * @member {string} item_description
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @instance
             */
            SingleItemDescription.prototype.item_description = "";
    
            /**
             * SingleItemDescription one_per_account.
             * @member {boolean} one_per_account
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @instance
             */
            SingleItemDescription.prototype.one_per_account = false;
    
            /**
             * Creates a new SingleItemDescription instance using the specified properties.
             * @function create
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription=} [properties] Properties to set
             * @returns {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} SingleItemDescription instance
             */
            SingleItemDescription.create = function create(properties) {
                return new SingleItemDescription(properties);
            };
    
            /**
             * Encodes the specified SingleItemDescription message. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription} message SingleItemDescription message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SingleItemDescription.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.gameitemid != null && Object.hasOwnProperty.call(message, "gameitemid"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.gameitemid);
                if (message.item_description != null && Object.hasOwnProperty.call(message, "item_description"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.item_description);
                if (message.one_per_account != null && Object.hasOwnProperty.call(message, "one_per_account"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.one_per_account);
                return writer;
            };
    
            /**
             * Encodes the specified SingleItemDescription message, length delimited. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription} message SingleItemDescription message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SingleItemDescription.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a SingleItemDescription message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} SingleItemDescription
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SingleItemDescription.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.gameitemid = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.item_description = reader.string();
                            break;
                        }
                    case 3: {
                            message.one_per_account = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a SingleItemDescription message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} SingleItemDescription
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SingleItemDescription.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a SingleItemDescription message.
             * @function verify
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SingleItemDescription.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                    if (!$util.isInteger(message.gameitemid))
                        return "gameitemid: integer expected";
                if (message.item_description != null && message.hasOwnProperty("item_description"))
                    if (!$util.isString(message.item_description))
                        return "item_description: string expected";
                if (message.one_per_account != null && message.hasOwnProperty("one_per_account"))
                    if (typeof message.one_per_account !== "boolean")
                        return "one_per_account: boolean expected";
                return null;
            };
    
            /**
             * Creates a SingleItemDescription message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} SingleItemDescription
             */
            SingleItemDescription.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
                    return object;
                var message = new $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription();
                if (object.gameitemid != null)
                    message.gameitemid = object.gameitemid >>> 0;
                if (object.item_description != null)
                    message.item_description = String(object.item_description);
                if (object.one_per_account != null)
                    message.one_per_account = Boolean(object.one_per_account);
                return message;
            };
    
            /**
             * Creates a plain object from a SingleItemDescription message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription} message SingleItemDescription
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SingleItemDescription.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.gameitemid = 0;
                    object.item_description = "";
                    object.one_per_account = false;
                }
                if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                    object.gameitemid = message.gameitemid;
                if (message.item_description != null && message.hasOwnProperty("item_description"))
                    object.item_description = message.item_description;
                if (message.one_per_account != null && message.hasOwnProperty("one_per_account"))
                    object.one_per_account = message.one_per_account;
                return object;
            };
    
            /**
             * Converts this SingleItemDescription to JSON.
             * @function toJSON
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SingleItemDescription.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for SingleItemDescription
             * @function getTypeUrl
             * @memberof CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SingleItemDescription.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription";
            };
    
            return SingleItemDescription;
        })();
    
        CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock = (function() {
    
            /**
             * Properties of an ItemDescriptionsLanguageBlock.
             * @memberof CWorkshop_PopulateItemDescriptions_Request
             * @interface IItemDescriptionsLanguageBlock
             * @property {string|null} [language] ItemDescriptionsLanguageBlock language
             * @property {Array.<CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription>|null} [descriptions] ItemDescriptionsLanguageBlock descriptions
             */
    
            /**
             * Constructs a new ItemDescriptionsLanguageBlock.
             * @memberof CWorkshop_PopulateItemDescriptions_Request
             * @classdesc Represents an ItemDescriptionsLanguageBlock.
             * @implements IItemDescriptionsLanguageBlock
             * @constructor
             * @param {CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock=} [properties] Properties to set
             */
            function ItemDescriptionsLanguageBlock(properties) {
                this.descriptions = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ItemDescriptionsLanguageBlock language.
             * @member {string} language
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @instance
             */
            ItemDescriptionsLanguageBlock.prototype.language = "";
    
            /**
             * ItemDescriptionsLanguageBlock descriptions.
             * @member {Array.<CWorkshop_PopulateItemDescriptions_Request.ISingleItemDescription>} descriptions
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @instance
             */
            ItemDescriptionsLanguageBlock.prototype.descriptions = $util.emptyArray;
    
            /**
             * Creates a new ItemDescriptionsLanguageBlock instance using the specified properties.
             * @function create
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock=} [properties] Properties to set
             * @returns {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} ItemDescriptionsLanguageBlock instance
             */
            ItemDescriptionsLanguageBlock.create = function create(properties) {
                return new ItemDescriptionsLanguageBlock(properties);
            };
    
            /**
             * Encodes the specified ItemDescriptionsLanguageBlock message. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock} message ItemDescriptionsLanguageBlock message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemDescriptionsLanguageBlock.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.language);
                if (message.descriptions != null && message.descriptions.length)
                    for (var i = 0; i < message.descriptions.length; ++i)
                        $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.encode(message.descriptions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified ItemDescriptionsLanguageBlock message, length delimited. Does not implicitly {@link CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.IItemDescriptionsLanguageBlock} message ItemDescriptionsLanguageBlock message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemDescriptionsLanguageBlock.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an ItemDescriptionsLanguageBlock message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} ItemDescriptionsLanguageBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemDescriptionsLanguageBlock.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.language = reader.string();
                            break;
                        }
                    case 2: {
                            if (!(message.descriptions && message.descriptions.length))
                                message.descriptions = [];
                            message.descriptions.push($root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an ItemDescriptionsLanguageBlock message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} ItemDescriptionsLanguageBlock
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemDescriptionsLanguageBlock.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an ItemDescriptionsLanguageBlock message.
             * @function verify
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ItemDescriptionsLanguageBlock.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.language != null && message.hasOwnProperty("language"))
                    if (!$util.isString(message.language))
                        return "language: string expected";
                if (message.descriptions != null && message.hasOwnProperty("descriptions")) {
                    if (!Array.isArray(message.descriptions))
                        return "descriptions: array expected";
                    for (var i = 0; i < message.descriptions.length; ++i) {
                        var error = $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.verify(message.descriptions[i]);
                        if (error)
                            return "descriptions." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates an ItemDescriptionsLanguageBlock message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} ItemDescriptionsLanguageBlock
             */
            ItemDescriptionsLanguageBlock.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
                    return object;
                var message = new $root.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock();
                if (object.language != null)
                    message.language = String(object.language);
                if (object.descriptions) {
                    if (!Array.isArray(object.descriptions))
                        throw TypeError(".CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions: array expected");
                    message.descriptions = [];
                    for (var i = 0; i < object.descriptions.length; ++i) {
                        if (typeof object.descriptions[i] !== "object")
                            throw TypeError(".CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions: object expected");
                        message.descriptions[i] = $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.fromObject(object.descriptions[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from an ItemDescriptionsLanguageBlock message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock} message ItemDescriptionsLanguageBlock
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ItemDescriptionsLanguageBlock.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.descriptions = [];
                if (options.defaults)
                    object.language = "";
                if (message.language != null && message.hasOwnProperty("language"))
                    object.language = message.language;
                if (message.descriptions && message.descriptions.length) {
                    object.descriptions = [];
                    for (var j = 0; j < message.descriptions.length; ++j)
                        object.descriptions[j] = $root.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.toObject(message.descriptions[j], options);
                }
                return object;
            };
    
            /**
             * Converts this ItemDescriptionsLanguageBlock to JSON.
             * @function toJSON
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ItemDescriptionsLanguageBlock.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ItemDescriptionsLanguageBlock
             * @function getTypeUrl
             * @memberof CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ItemDescriptionsLanguageBlock.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock";
            };
    
            return ItemDescriptionsLanguageBlock;
        })();
    
        return CWorkshop_PopulateItemDescriptions_Request;
    })();
    
    $root.CWorkshop_GetContributors_Request = (function() {
    
        /**
         * Properties of a CWorkshop_GetContributors_Request.
         * @exports ICWorkshop_GetContributors_Request
         * @interface ICWorkshop_GetContributors_Request
         * @property {number|null} [appid] CWorkshop_GetContributors_Request appid
         * @property {number|null} [gameitemid] CWorkshop_GetContributors_Request gameitemid
         */
    
        /**
         * Constructs a new CWorkshop_GetContributors_Request.
         * @exports CWorkshop_GetContributors_Request
         * @classdesc Represents a CWorkshop_GetContributors_Request.
         * @implements ICWorkshop_GetContributors_Request
         * @constructor
         * @param {ICWorkshop_GetContributors_Request=} [properties] Properties to set
         */
        function CWorkshop_GetContributors_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_GetContributors_Request appid.
         * @member {number} appid
         * @memberof CWorkshop_GetContributors_Request
         * @instance
         */
        CWorkshop_GetContributors_Request.prototype.appid = 0;
    
        /**
         * CWorkshop_GetContributors_Request gameitemid.
         * @member {number} gameitemid
         * @memberof CWorkshop_GetContributors_Request
         * @instance
         */
        CWorkshop_GetContributors_Request.prototype.gameitemid = 0;
    
        /**
         * Creates a new CWorkshop_GetContributors_Request instance using the specified properties.
         * @function create
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {ICWorkshop_GetContributors_Request=} [properties] Properties to set
         * @returns {CWorkshop_GetContributors_Request} CWorkshop_GetContributors_Request instance
         */
        CWorkshop_GetContributors_Request.create = function create(properties) {
            return new CWorkshop_GetContributors_Request(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_GetContributors_Request message. Does not implicitly {@link CWorkshop_GetContributors_Request.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {ICWorkshop_GetContributors_Request} message CWorkshop_GetContributors_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_GetContributors_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.gameitemid != null && Object.hasOwnProperty.call(message, "gameitemid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.gameitemid);
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_GetContributors_Request message, length delimited. Does not implicitly {@link CWorkshop_GetContributors_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {ICWorkshop_GetContributors_Request} message CWorkshop_GetContributors_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_GetContributors_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_GetContributors_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_GetContributors_Request} CWorkshop_GetContributors_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_GetContributors_Request.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_GetContributors_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gameitemid = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_GetContributors_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_GetContributors_Request} CWorkshop_GetContributors_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_GetContributors_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_GetContributors_Request message.
         * @function verify
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_GetContributors_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                if (!$util.isInteger(message.gameitemid))
                    return "gameitemid: integer expected";
            return null;
        };
    
        /**
         * Creates a CWorkshop_GetContributors_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_GetContributors_Request} CWorkshop_GetContributors_Request
         */
        CWorkshop_GetContributors_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_GetContributors_Request)
                return object;
            var message = new $root.CWorkshop_GetContributors_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.gameitemid != null)
                message.gameitemid = object.gameitemid >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_GetContributors_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {CWorkshop_GetContributors_Request} message CWorkshop_GetContributors_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_GetContributors_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.gameitemid = 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                object.gameitemid = message.gameitemid;
            return object;
        };
    
        /**
         * Converts this CWorkshop_GetContributors_Request to JSON.
         * @function toJSON
         * @memberof CWorkshop_GetContributors_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_GetContributors_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_GetContributors_Request
         * @function getTypeUrl
         * @memberof CWorkshop_GetContributors_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_GetContributors_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_GetContributors_Request";
        };
    
        return CWorkshop_GetContributors_Request;
    })();
    
    $root.CWorkshop_GetContributors_Response = (function() {
    
        /**
         * Properties of a CWorkshop_GetContributors_Response.
         * @exports ICWorkshop_GetContributors_Response
         * @interface ICWorkshop_GetContributors_Response
         * @property {Array.<number|Long>|null} [contributors] CWorkshop_GetContributors_Response contributors
         */
    
        /**
         * Constructs a new CWorkshop_GetContributors_Response.
         * @exports CWorkshop_GetContributors_Response
         * @classdesc Represents a CWorkshop_GetContributors_Response.
         * @implements ICWorkshop_GetContributors_Response
         * @constructor
         * @param {ICWorkshop_GetContributors_Response=} [properties] Properties to set
         */
        function CWorkshop_GetContributors_Response(properties) {
            this.contributors = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_GetContributors_Response contributors.
         * @member {Array.<number|Long>} contributors
         * @memberof CWorkshop_GetContributors_Response
         * @instance
         */
        CWorkshop_GetContributors_Response.prototype.contributors = $util.emptyArray;
    
        /**
         * Creates a new CWorkshop_GetContributors_Response instance using the specified properties.
         * @function create
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {ICWorkshop_GetContributors_Response=} [properties] Properties to set
         * @returns {CWorkshop_GetContributors_Response} CWorkshop_GetContributors_Response instance
         */
        CWorkshop_GetContributors_Response.create = function create(properties) {
            return new CWorkshop_GetContributors_Response(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_GetContributors_Response message. Does not implicitly {@link CWorkshop_GetContributors_Response.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {ICWorkshop_GetContributors_Response} message CWorkshop_GetContributors_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_GetContributors_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.contributors != null && message.contributors.length)
                for (var i = 0; i < message.contributors.length; ++i)
                    writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.contributors[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_GetContributors_Response message, length delimited. Does not implicitly {@link CWorkshop_GetContributors_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {ICWorkshop_GetContributors_Response} message CWorkshop_GetContributors_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_GetContributors_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_GetContributors_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_GetContributors_Response} CWorkshop_GetContributors_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_GetContributors_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_GetContributors_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.contributors && message.contributors.length))
                            message.contributors = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.contributors.push(reader.fixed64());
                        } else
                            message.contributors.push(reader.fixed64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_GetContributors_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_GetContributors_Response} CWorkshop_GetContributors_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_GetContributors_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_GetContributors_Response message.
         * @function verify
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_GetContributors_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.contributors != null && message.hasOwnProperty("contributors")) {
                if (!Array.isArray(message.contributors))
                    return "contributors: array expected";
                for (var i = 0; i < message.contributors.length; ++i)
                    if (!$util.isInteger(message.contributors[i]) && !(message.contributors[i] && $util.isInteger(message.contributors[i].low) && $util.isInteger(message.contributors[i].high)))
                        return "contributors: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CWorkshop_GetContributors_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_GetContributors_Response} CWorkshop_GetContributors_Response
         */
        CWorkshop_GetContributors_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_GetContributors_Response)
                return object;
            var message = new $root.CWorkshop_GetContributors_Response();
            if (object.contributors) {
                if (!Array.isArray(object.contributors))
                    throw TypeError(".CWorkshop_GetContributors_Response.contributors: array expected");
                message.contributors = [];
                for (var i = 0; i < object.contributors.length; ++i)
                    if ($util.Long)
                        (message.contributors[i] = $util.Long.fromValue(object.contributors[i])).unsigned = false;
                    else if (typeof object.contributors[i] === "string")
                        message.contributors[i] = parseInt(object.contributors[i], 10);
                    else if (typeof object.contributors[i] === "number")
                        message.contributors[i] = object.contributors[i];
                    else if (typeof object.contributors[i] === "object")
                        message.contributors[i] = new $util.LongBits(object.contributors[i].low >>> 0, object.contributors[i].high >>> 0).toNumber();
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_GetContributors_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {CWorkshop_GetContributors_Response} message CWorkshop_GetContributors_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_GetContributors_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.contributors = [];
            if (message.contributors && message.contributors.length) {
                object.contributors = [];
                for (var j = 0; j < message.contributors.length; ++j)
                    if (typeof message.contributors[j] === "number")
                        object.contributors[j] = options.longs === String ? String(message.contributors[j]) : message.contributors[j];
                    else
                        object.contributors[j] = options.longs === String ? $util.Long.prototype.toString.call(message.contributors[j]) : options.longs === Number ? new $util.LongBits(message.contributors[j].low >>> 0, message.contributors[j].high >>> 0).toNumber() : message.contributors[j];
            }
            return object;
        };
    
        /**
         * Converts this CWorkshop_GetContributors_Response to JSON.
         * @function toJSON
         * @memberof CWorkshop_GetContributors_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_GetContributors_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_GetContributors_Response
         * @function getTypeUrl
         * @memberof CWorkshop_GetContributors_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_GetContributors_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_GetContributors_Response";
        };
    
        return CWorkshop_GetContributors_Response;
    })();
    
    $root.CWorkshop_SetItemPaymentRules_Request = (function() {
    
        /**
         * Properties of a CWorkshop_SetItemPaymentRules_Request.
         * @exports ICWorkshop_SetItemPaymentRules_Request
         * @interface ICWorkshop_SetItemPaymentRules_Request
         * @property {number|null} [appid] CWorkshop_SetItemPaymentRules_Request appid
         * @property {number|null} [gameitemid] CWorkshop_SetItemPaymentRules_Request gameitemid
         * @property {Array.<CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule>|null} [associated_workshop_files] CWorkshop_SetItemPaymentRules_Request associated_workshop_files
         * @property {Array.<CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule>|null} [partner_accounts] CWorkshop_SetItemPaymentRules_Request partner_accounts
         * @property {boolean|null} [validate_only] CWorkshop_SetItemPaymentRules_Request validate_only
         * @property {boolean|null} [make_workshop_files_subscribable] CWorkshop_SetItemPaymentRules_Request make_workshop_files_subscribable
         * @property {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule|null} [associated_workshop_file_for_direct_payments] CWorkshop_SetItemPaymentRules_Request associated_workshop_file_for_direct_payments
         */
    
        /**
         * Constructs a new CWorkshop_SetItemPaymentRules_Request.
         * @exports CWorkshop_SetItemPaymentRules_Request
         * @classdesc Represents a CWorkshop_SetItemPaymentRules_Request.
         * @implements ICWorkshop_SetItemPaymentRules_Request
         * @constructor
         * @param {ICWorkshop_SetItemPaymentRules_Request=} [properties] Properties to set
         */
        function CWorkshop_SetItemPaymentRules_Request(properties) {
            this.associated_workshop_files = [];
            this.partner_accounts = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_SetItemPaymentRules_Request appid.
         * @member {number} appid
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.appid = 0;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request gameitemid.
         * @member {number} gameitemid
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.gameitemid = 0;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request associated_workshop_files.
         * @member {Array.<CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule>} associated_workshop_files
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.associated_workshop_files = $util.emptyArray;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request partner_accounts.
         * @member {Array.<CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule>} partner_accounts
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.partner_accounts = $util.emptyArray;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request validate_only.
         * @member {boolean} validate_only
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.validate_only = false;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request make_workshop_files_subscribable.
         * @member {boolean} make_workshop_files_subscribable
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.make_workshop_files_subscribable = false;
    
        /**
         * CWorkshop_SetItemPaymentRules_Request associated_workshop_file_for_direct_payments.
         * @member {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule|null|undefined} associated_workshop_file_for_direct_payments
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.associated_workshop_file_for_direct_payments = null;
    
        /**
         * Creates a new CWorkshop_SetItemPaymentRules_Request instance using the specified properties.
         * @function create
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Request=} [properties] Properties to set
         * @returns {CWorkshop_SetItemPaymentRules_Request} CWorkshop_SetItemPaymentRules_Request instance
         */
        CWorkshop_SetItemPaymentRules_Request.create = function create(properties) {
            return new CWorkshop_SetItemPaymentRules_Request(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_SetItemPaymentRules_Request message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Request} message CWorkshop_SetItemPaymentRules_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_SetItemPaymentRules_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.gameitemid != null && Object.hasOwnProperty.call(message, "gameitemid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.gameitemid);
            if (message.associated_workshop_files != null && message.associated_workshop_files.length)
                for (var i = 0; i < message.associated_workshop_files.length; ++i)
                    $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.encode(message.associated_workshop_files[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
            if (message.partner_accounts != null && message.partner_accounts.length)
                for (var i = 0; i < message.partner_accounts.length; ++i)
                    $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.encode(message.partner_accounts[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            if (message.validate_only != null && Object.hasOwnProperty.call(message, "validate_only"))
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validate_only);
            if (message.make_workshop_files_subscribable != null && Object.hasOwnProperty.call(message, "make_workshop_files_subscribable"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.make_workshop_files_subscribable);
            if (message.associated_workshop_file_for_direct_payments != null && Object.hasOwnProperty.call(message, "associated_workshop_file_for_direct_payments"))
                $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.encode(message.associated_workshop_file_for_direct_payments, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_SetItemPaymentRules_Request message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Request} message CWorkshop_SetItemPaymentRules_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_SetItemPaymentRules_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_SetItemPaymentRules_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_SetItemPaymentRules_Request} CWorkshop_SetItemPaymentRules_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_SetItemPaymentRules_Request.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gameitemid = reader.uint32();
                        break;
                    }
                case 3: {
                        if (!(message.associated_workshop_files && message.associated_workshop_files.length))
                            message.associated_workshop_files = [];
                        message.associated_workshop_files.push($root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.decode(reader, reader.uint32()));
                        break;
                    }
                case 4: {
                        if (!(message.partner_accounts && message.partner_accounts.length))
                            message.partner_accounts = [];
                        message.partner_accounts.push($root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.decode(reader, reader.uint32()));
                        break;
                    }
                case 5: {
                        message.validate_only = reader.bool();
                        break;
                    }
                case 6: {
                        message.make_workshop_files_subscribable = reader.bool();
                        break;
                    }
                case 7: {
                        message.associated_workshop_file_for_direct_payments = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_SetItemPaymentRules_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_SetItemPaymentRules_Request} CWorkshop_SetItemPaymentRules_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_SetItemPaymentRules_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_SetItemPaymentRules_Request message.
         * @function verify
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_SetItemPaymentRules_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                if (!$util.isInteger(message.gameitemid))
                    return "gameitemid: integer expected";
            if (message.associated_workshop_files != null && message.hasOwnProperty("associated_workshop_files")) {
                if (!Array.isArray(message.associated_workshop_files))
                    return "associated_workshop_files: array expected";
                for (var i = 0; i < message.associated_workshop_files.length; ++i) {
                    var error = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.verify(message.associated_workshop_files[i]);
                    if (error)
                        return "associated_workshop_files." + error;
                }
            }
            if (message.partner_accounts != null && message.hasOwnProperty("partner_accounts")) {
                if (!Array.isArray(message.partner_accounts))
                    return "partner_accounts: array expected";
                for (var i = 0; i < message.partner_accounts.length; ++i) {
                    var error = $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.verify(message.partner_accounts[i]);
                    if (error)
                        return "partner_accounts." + error;
                }
            }
            if (message.validate_only != null && message.hasOwnProperty("validate_only"))
                if (typeof message.validate_only !== "boolean")
                    return "validate_only: boolean expected";
            if (message.make_workshop_files_subscribable != null && message.hasOwnProperty("make_workshop_files_subscribable"))
                if (typeof message.make_workshop_files_subscribable !== "boolean")
                    return "make_workshop_files_subscribable: boolean expected";
            if (message.associated_workshop_file_for_direct_payments != null && message.hasOwnProperty("associated_workshop_file_for_direct_payments")) {
                var error = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.verify(message.associated_workshop_file_for_direct_payments);
                if (error)
                    return "associated_workshop_file_for_direct_payments." + error;
            }
            return null;
        };
    
        /**
         * Creates a CWorkshop_SetItemPaymentRules_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_SetItemPaymentRules_Request} CWorkshop_SetItemPaymentRules_Request
         */
        CWorkshop_SetItemPaymentRules_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_SetItemPaymentRules_Request)
                return object;
            var message = new $root.CWorkshop_SetItemPaymentRules_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.gameitemid != null)
                message.gameitemid = object.gameitemid >>> 0;
            if (object.associated_workshop_files) {
                if (!Array.isArray(object.associated_workshop_files))
                    throw TypeError(".CWorkshop_SetItemPaymentRules_Request.associated_workshop_files: array expected");
                message.associated_workshop_files = [];
                for (var i = 0; i < object.associated_workshop_files.length; ++i) {
                    if (typeof object.associated_workshop_files[i] !== "object")
                        throw TypeError(".CWorkshop_SetItemPaymentRules_Request.associated_workshop_files: object expected");
                    message.associated_workshop_files[i] = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.fromObject(object.associated_workshop_files[i]);
                }
            }
            if (object.partner_accounts) {
                if (!Array.isArray(object.partner_accounts))
                    throw TypeError(".CWorkshop_SetItemPaymentRules_Request.partner_accounts: array expected");
                message.partner_accounts = [];
                for (var i = 0; i < object.partner_accounts.length; ++i) {
                    if (typeof object.partner_accounts[i] !== "object")
                        throw TypeError(".CWorkshop_SetItemPaymentRules_Request.partner_accounts: object expected");
                    message.partner_accounts[i] = $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.fromObject(object.partner_accounts[i]);
                }
            }
            if (object.validate_only != null)
                message.validate_only = Boolean(object.validate_only);
            if (object.make_workshop_files_subscribable != null)
                message.make_workshop_files_subscribable = Boolean(object.make_workshop_files_subscribable);
            if (object.associated_workshop_file_for_direct_payments != null) {
                if (typeof object.associated_workshop_file_for_direct_payments !== "object")
                    throw TypeError(".CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments: object expected");
                message.associated_workshop_file_for_direct_payments = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.fromObject(object.associated_workshop_file_for_direct_payments);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_SetItemPaymentRules_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {CWorkshop_SetItemPaymentRules_Request} message CWorkshop_SetItemPaymentRules_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_SetItemPaymentRules_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.associated_workshop_files = [];
                object.partner_accounts = [];
            }
            if (options.defaults) {
                object.appid = 0;
                object.gameitemid = 0;
                object.validate_only = false;
                object.make_workshop_files_subscribable = false;
                object.associated_workshop_file_for_direct_payments = null;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                object.gameitemid = message.gameitemid;
            if (message.associated_workshop_files && message.associated_workshop_files.length) {
                object.associated_workshop_files = [];
                for (var j = 0; j < message.associated_workshop_files.length; ++j)
                    object.associated_workshop_files[j] = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.toObject(message.associated_workshop_files[j], options);
            }
            if (message.partner_accounts && message.partner_accounts.length) {
                object.partner_accounts = [];
                for (var j = 0; j < message.partner_accounts.length; ++j)
                    object.partner_accounts[j] = $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.toObject(message.partner_accounts[j], options);
            }
            if (message.validate_only != null && message.hasOwnProperty("validate_only"))
                object.validate_only = message.validate_only;
            if (message.make_workshop_files_subscribable != null && message.hasOwnProperty("make_workshop_files_subscribable"))
                object.make_workshop_files_subscribable = message.make_workshop_files_subscribable;
            if (message.associated_workshop_file_for_direct_payments != null && message.hasOwnProperty("associated_workshop_file_for_direct_payments"))
                object.associated_workshop_file_for_direct_payments = $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.toObject(message.associated_workshop_file_for_direct_payments, options);
            return object;
        };
    
        /**
         * Converts this CWorkshop_SetItemPaymentRules_Request to JSON.
         * @function toJSON
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_SetItemPaymentRules_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_SetItemPaymentRules_Request
         * @function getTypeUrl
         * @memberof CWorkshop_SetItemPaymentRules_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_SetItemPaymentRules_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Request";
        };
    
        CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule = (function() {
    
            /**
             * Properties of a WorkshopItemPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @interface IWorkshopItemPaymentRule
             * @property {number|Long|null} [workshop_file_id] WorkshopItemPaymentRule workshop_file_id
             * @property {number|null} [revenue_percentage] WorkshopItemPaymentRule revenue_percentage
             * @property {string|null} [rule_description] WorkshopItemPaymentRule rule_description
             * @property {number|null} [rule_type] WorkshopItemPaymentRule rule_type
             */
    
            /**
             * Constructs a new WorkshopItemPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @classdesc Represents a WorkshopItemPaymentRule.
             * @implements IWorkshopItemPaymentRule
             * @constructor
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule=} [properties] Properties to set
             */
            function WorkshopItemPaymentRule(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * WorkshopItemPaymentRule workshop_file_id.
             * @member {number|Long} workshop_file_id
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             */
            WorkshopItemPaymentRule.prototype.workshop_file_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * WorkshopItemPaymentRule revenue_percentage.
             * @member {number} revenue_percentage
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             */
            WorkshopItemPaymentRule.prototype.revenue_percentage = 0;
    
            /**
             * WorkshopItemPaymentRule rule_description.
             * @member {string} rule_description
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             */
            WorkshopItemPaymentRule.prototype.rule_description = "";
    
            /**
             * WorkshopItemPaymentRule rule_type.
             * @member {number} rule_type
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             */
            WorkshopItemPaymentRule.prototype.rule_type = 1;
    
            /**
             * Creates a new WorkshopItemPaymentRule instance using the specified properties.
             * @function create
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule=} [properties] Properties to set
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} WorkshopItemPaymentRule instance
             */
            WorkshopItemPaymentRule.create = function create(properties) {
                return new WorkshopItemPaymentRule(properties);
            };
    
            /**
             * Encodes the specified WorkshopItemPaymentRule message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule} message WorkshopItemPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WorkshopItemPaymentRule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.workshop_file_id != null && Object.hasOwnProperty.call(message, "workshop_file_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.workshop_file_id);
                if (message.revenue_percentage != null && Object.hasOwnProperty.call(message, "revenue_percentage"))
                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.revenue_percentage);
                if (message.rule_description != null && Object.hasOwnProperty.call(message, "rule_description"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.rule_description);
                if (message.rule_type != null && Object.hasOwnProperty.call(message, "rule_type"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.rule_type);
                return writer;
            };
    
            /**
             * Encodes the specified WorkshopItemPaymentRule message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopItemPaymentRule} message WorkshopItemPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WorkshopItemPaymentRule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a WorkshopItemPaymentRule message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} WorkshopItemPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WorkshopItemPaymentRule.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.workshop_file_id = reader.uint64();
                            break;
                        }
                    case 2: {
                            message.revenue_percentage = reader.float();
                            break;
                        }
                    case 3: {
                            message.rule_description = reader.string();
                            break;
                        }
                    case 4: {
                            message.rule_type = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a WorkshopItemPaymentRule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} WorkshopItemPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WorkshopItemPaymentRule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a WorkshopItemPaymentRule message.
             * @function verify
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            WorkshopItemPaymentRule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.workshop_file_id != null && message.hasOwnProperty("workshop_file_id"))
                    if (!$util.isInteger(message.workshop_file_id) && !(message.workshop_file_id && $util.isInteger(message.workshop_file_id.low) && $util.isInteger(message.workshop_file_id.high)))
                        return "workshop_file_id: integer|Long expected";
                if (message.revenue_percentage != null && message.hasOwnProperty("revenue_percentage"))
                    if (typeof message.revenue_percentage !== "number")
                        return "revenue_percentage: number expected";
                if (message.rule_description != null && message.hasOwnProperty("rule_description"))
                    if (!$util.isString(message.rule_description))
                        return "rule_description: string expected";
                if (message.rule_type != null && message.hasOwnProperty("rule_type"))
                    if (!$util.isInteger(message.rule_type))
                        return "rule_type: integer expected";
                return null;
            };
    
            /**
             * Creates a WorkshopItemPaymentRule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} WorkshopItemPaymentRule
             */
            WorkshopItemPaymentRule.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
                    return object;
                var message = new $root.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule();
                if (object.workshop_file_id != null)
                    if ($util.Long)
                        (message.workshop_file_id = $util.Long.fromValue(object.workshop_file_id)).unsigned = true;
                    else if (typeof object.workshop_file_id === "string")
                        message.workshop_file_id = parseInt(object.workshop_file_id, 10);
                    else if (typeof object.workshop_file_id === "number")
                        message.workshop_file_id = object.workshop_file_id;
                    else if (typeof object.workshop_file_id === "object")
                        message.workshop_file_id = new $util.LongBits(object.workshop_file_id.low >>> 0, object.workshop_file_id.high >>> 0).toNumber(true);
                if (object.revenue_percentage != null)
                    message.revenue_percentage = Number(object.revenue_percentage);
                if (object.rule_description != null)
                    message.rule_description = String(object.rule_description);
                if (object.rule_type != null)
                    message.rule_type = object.rule_type >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a WorkshopItemPaymentRule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule} message WorkshopItemPaymentRule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            WorkshopItemPaymentRule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.workshop_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.workshop_file_id = options.longs === String ? "0" : 0;
                    object.revenue_percentage = 0;
                    object.rule_description = "";
                    object.rule_type = 1;
                }
                if (message.workshop_file_id != null && message.hasOwnProperty("workshop_file_id"))
                    if (typeof message.workshop_file_id === "number")
                        object.workshop_file_id = options.longs === String ? String(message.workshop_file_id) : message.workshop_file_id;
                    else
                        object.workshop_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.workshop_file_id) : options.longs === Number ? new $util.LongBits(message.workshop_file_id.low >>> 0, message.workshop_file_id.high >>> 0).toNumber(true) : message.workshop_file_id;
                if (message.revenue_percentage != null && message.hasOwnProperty("revenue_percentage"))
                    object.revenue_percentage = options.json && !isFinite(message.revenue_percentage) ? String(message.revenue_percentage) : message.revenue_percentage;
                if (message.rule_description != null && message.hasOwnProperty("rule_description"))
                    object.rule_description = message.rule_description;
                if (message.rule_type != null && message.hasOwnProperty("rule_type"))
                    object.rule_type = message.rule_type;
                return object;
            };
    
            /**
             * Converts this WorkshopItemPaymentRule to JSON.
             * @function toJSON
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            WorkshopItemPaymentRule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for WorkshopItemPaymentRule
             * @function getTypeUrl
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            WorkshopItemPaymentRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule";
            };
    
            return WorkshopItemPaymentRule;
        })();
    
        CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule = (function() {
    
            /**
             * Properties of a WorkshopDirectPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @interface IWorkshopDirectPaymentRule
             * @property {number|Long|null} [workshop_file_id] WorkshopDirectPaymentRule workshop_file_id
             * @property {string|null} [rule_description] WorkshopDirectPaymentRule rule_description
             */
    
            /**
             * Constructs a new WorkshopDirectPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @classdesc Represents a WorkshopDirectPaymentRule.
             * @implements IWorkshopDirectPaymentRule
             * @constructor
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule=} [properties] Properties to set
             */
            function WorkshopDirectPaymentRule(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * WorkshopDirectPaymentRule workshop_file_id.
             * @member {number|Long} workshop_file_id
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @instance
             */
            WorkshopDirectPaymentRule.prototype.workshop_file_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * WorkshopDirectPaymentRule rule_description.
             * @member {string} rule_description
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @instance
             */
            WorkshopDirectPaymentRule.prototype.rule_description = "";
    
            /**
             * Creates a new WorkshopDirectPaymentRule instance using the specified properties.
             * @function create
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule=} [properties] Properties to set
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} WorkshopDirectPaymentRule instance
             */
            WorkshopDirectPaymentRule.create = function create(properties) {
                return new WorkshopDirectPaymentRule(properties);
            };
    
            /**
             * Encodes the specified WorkshopDirectPaymentRule message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule} message WorkshopDirectPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WorkshopDirectPaymentRule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.workshop_file_id != null && Object.hasOwnProperty.call(message, "workshop_file_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.workshop_file_id);
                if (message.rule_description != null && Object.hasOwnProperty.call(message, "rule_description"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.rule_description);
                return writer;
            };
    
            /**
             * Encodes the specified WorkshopDirectPaymentRule message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IWorkshopDirectPaymentRule} message WorkshopDirectPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WorkshopDirectPaymentRule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a WorkshopDirectPaymentRule message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} WorkshopDirectPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WorkshopDirectPaymentRule.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.workshop_file_id = reader.uint64();
                            break;
                        }
                    case 2: {
                            message.rule_description = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a WorkshopDirectPaymentRule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} WorkshopDirectPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WorkshopDirectPaymentRule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a WorkshopDirectPaymentRule message.
             * @function verify
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            WorkshopDirectPaymentRule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.workshop_file_id != null && message.hasOwnProperty("workshop_file_id"))
                    if (!$util.isInteger(message.workshop_file_id) && !(message.workshop_file_id && $util.isInteger(message.workshop_file_id.low) && $util.isInteger(message.workshop_file_id.high)))
                        return "workshop_file_id: integer|Long expected";
                if (message.rule_description != null && message.hasOwnProperty("rule_description"))
                    if (!$util.isString(message.rule_description))
                        return "rule_description: string expected";
                return null;
            };
    
            /**
             * Creates a WorkshopDirectPaymentRule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} WorkshopDirectPaymentRule
             */
            WorkshopDirectPaymentRule.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
                    return object;
                var message = new $root.CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule();
                if (object.workshop_file_id != null)
                    if ($util.Long)
                        (message.workshop_file_id = $util.Long.fromValue(object.workshop_file_id)).unsigned = true;
                    else if (typeof object.workshop_file_id === "string")
                        message.workshop_file_id = parseInt(object.workshop_file_id, 10);
                    else if (typeof object.workshop_file_id === "number")
                        message.workshop_file_id = object.workshop_file_id;
                    else if (typeof object.workshop_file_id === "object")
                        message.workshop_file_id = new $util.LongBits(object.workshop_file_id.low >>> 0, object.workshop_file_id.high >>> 0).toNumber(true);
                if (object.rule_description != null)
                    message.rule_description = String(object.rule_description);
                return message;
            };
    
            /**
             * Creates a plain object from a WorkshopDirectPaymentRule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule} message WorkshopDirectPaymentRule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            WorkshopDirectPaymentRule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.workshop_file_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.workshop_file_id = options.longs === String ? "0" : 0;
                    object.rule_description = "";
                }
                if (message.workshop_file_id != null && message.hasOwnProperty("workshop_file_id"))
                    if (typeof message.workshop_file_id === "number")
                        object.workshop_file_id = options.longs === String ? String(message.workshop_file_id) : message.workshop_file_id;
                    else
                        object.workshop_file_id = options.longs === String ? $util.Long.prototype.toString.call(message.workshop_file_id) : options.longs === Number ? new $util.LongBits(message.workshop_file_id.low >>> 0, message.workshop_file_id.high >>> 0).toNumber(true) : message.workshop_file_id;
                if (message.rule_description != null && message.hasOwnProperty("rule_description"))
                    object.rule_description = message.rule_description;
                return object;
            };
    
            /**
             * Converts this WorkshopDirectPaymentRule to JSON.
             * @function toJSON
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            WorkshopDirectPaymentRule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for WorkshopDirectPaymentRule
             * @function getTypeUrl
             * @memberof CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            WorkshopDirectPaymentRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule";
            };
    
            return WorkshopDirectPaymentRule;
        })();
    
        CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule = (function() {
    
            /**
             * Properties of a PartnerItemPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @interface IPartnerItemPaymentRule
             * @property {number|null} [account_id] PartnerItemPaymentRule account_id
             * @property {number|null} [revenue_percentage] PartnerItemPaymentRule revenue_percentage
             * @property {string|null} [rule_description] PartnerItemPaymentRule rule_description
             */
    
            /**
             * Constructs a new PartnerItemPaymentRule.
             * @memberof CWorkshop_SetItemPaymentRules_Request
             * @classdesc Represents a PartnerItemPaymentRule.
             * @implements IPartnerItemPaymentRule
             * @constructor
             * @param {CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule=} [properties] Properties to set
             */
            function PartnerItemPaymentRule(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * PartnerItemPaymentRule account_id.
             * @member {number} account_id
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @instance
             */
            PartnerItemPaymentRule.prototype.account_id = 0;
    
            /**
             * PartnerItemPaymentRule revenue_percentage.
             * @member {number} revenue_percentage
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @instance
             */
            PartnerItemPaymentRule.prototype.revenue_percentage = 0;
    
            /**
             * PartnerItemPaymentRule rule_description.
             * @member {string} rule_description
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @instance
             */
            PartnerItemPaymentRule.prototype.rule_description = "";
    
            /**
             * Creates a new PartnerItemPaymentRule instance using the specified properties.
             * @function create
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule=} [properties] Properties to set
             * @returns {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} PartnerItemPaymentRule instance
             */
            PartnerItemPaymentRule.create = function create(properties) {
                return new PartnerItemPaymentRule(properties);
            };
    
            /**
             * Encodes the specified PartnerItemPaymentRule message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.verify|verify} messages.
             * @function encode
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule} message PartnerItemPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerItemPaymentRule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.account_id);
                if (message.revenue_percentage != null && Object.hasOwnProperty.call(message, "revenue_percentage"))
                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.revenue_percentage);
                if (message.rule_description != null && Object.hasOwnProperty.call(message, "rule_description"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.rule_description);
                return writer;
            };
    
            /**
             * Encodes the specified PartnerItemPaymentRule message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.IPartnerItemPaymentRule} message PartnerItemPaymentRule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PartnerItemPaymentRule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a PartnerItemPaymentRule message from the specified reader or buffer.
             * @function decode
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} PartnerItemPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerItemPaymentRule.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.account_id = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.revenue_percentage = reader.float();
                            break;
                        }
                    case 3: {
                            message.rule_description = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a PartnerItemPaymentRule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} PartnerItemPaymentRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PartnerItemPaymentRule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a PartnerItemPaymentRule message.
             * @function verify
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PartnerItemPaymentRule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.account_id != null && message.hasOwnProperty("account_id"))
                    if (!$util.isInteger(message.account_id))
                        return "account_id: integer expected";
                if (message.revenue_percentage != null && message.hasOwnProperty("revenue_percentage"))
                    if (typeof message.revenue_percentage !== "number")
                        return "revenue_percentage: number expected";
                if (message.rule_description != null && message.hasOwnProperty("rule_description"))
                    if (!$util.isString(message.rule_description))
                        return "rule_description: string expected";
                return null;
            };
    
            /**
             * Creates a PartnerItemPaymentRule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} PartnerItemPaymentRule
             */
            PartnerItemPaymentRule.fromObject = function fromObject(object) {
                if (object instanceof $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
                    return object;
                var message = new $root.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule();
                if (object.account_id != null)
                    message.account_id = object.account_id >>> 0;
                if (object.revenue_percentage != null)
                    message.revenue_percentage = Number(object.revenue_percentage);
                if (object.rule_description != null)
                    message.rule_description = String(object.rule_description);
                return message;
            };
    
            /**
             * Creates a plain object from a PartnerItemPaymentRule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule} message PartnerItemPaymentRule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PartnerItemPaymentRule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.account_id = 0;
                    object.revenue_percentage = 0;
                    object.rule_description = "";
                }
                if (message.account_id != null && message.hasOwnProperty("account_id"))
                    object.account_id = message.account_id;
                if (message.revenue_percentage != null && message.hasOwnProperty("revenue_percentage"))
                    object.revenue_percentage = options.json && !isFinite(message.revenue_percentage) ? String(message.revenue_percentage) : message.revenue_percentage;
                if (message.rule_description != null && message.hasOwnProperty("rule_description"))
                    object.rule_description = message.rule_description;
                return object;
            };
    
            /**
             * Converts this PartnerItemPaymentRule to JSON.
             * @function toJSON
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PartnerItemPaymentRule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for PartnerItemPaymentRule
             * @function getTypeUrl
             * @memberof CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PartnerItemPaymentRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule";
            };
    
            return PartnerItemPaymentRule;
        })();
    
        return CWorkshop_SetItemPaymentRules_Request;
    })();
    
    $root.CWorkshop_SetItemPaymentRules_Response = (function() {
    
        /**
         * Properties of a CWorkshop_SetItemPaymentRules_Response.
         * @exports ICWorkshop_SetItemPaymentRules_Response
         * @interface ICWorkshop_SetItemPaymentRules_Response
         */
    
        /**
         * Constructs a new CWorkshop_SetItemPaymentRules_Response.
         * @exports CWorkshop_SetItemPaymentRules_Response
         * @classdesc Represents a CWorkshop_SetItemPaymentRules_Response.
         * @implements ICWorkshop_SetItemPaymentRules_Response
         * @constructor
         * @param {ICWorkshop_SetItemPaymentRules_Response=} [properties] Properties to set
         */
        function CWorkshop_SetItemPaymentRules_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CWorkshop_SetItemPaymentRules_Response instance using the specified properties.
         * @function create
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Response=} [properties] Properties to set
         * @returns {CWorkshop_SetItemPaymentRules_Response} CWorkshop_SetItemPaymentRules_Response instance
         */
        CWorkshop_SetItemPaymentRules_Response.create = function create(properties) {
            return new CWorkshop_SetItemPaymentRules_Response(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_SetItemPaymentRules_Response message. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Response.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Response} message CWorkshop_SetItemPaymentRules_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_SetItemPaymentRules_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_SetItemPaymentRules_Response message, length delimited. Does not implicitly {@link CWorkshop_SetItemPaymentRules_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {ICWorkshop_SetItemPaymentRules_Response} message CWorkshop_SetItemPaymentRules_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_SetItemPaymentRules_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_SetItemPaymentRules_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_SetItemPaymentRules_Response} CWorkshop_SetItemPaymentRules_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_SetItemPaymentRules_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_SetItemPaymentRules_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_SetItemPaymentRules_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_SetItemPaymentRules_Response} CWorkshop_SetItemPaymentRules_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_SetItemPaymentRules_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_SetItemPaymentRules_Response message.
         * @function verify
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_SetItemPaymentRules_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CWorkshop_SetItemPaymentRules_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_SetItemPaymentRules_Response} CWorkshop_SetItemPaymentRules_Response
         */
        CWorkshop_SetItemPaymentRules_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_SetItemPaymentRules_Response)
                return object;
            return new $root.CWorkshop_SetItemPaymentRules_Response();
        };
    
        /**
         * Creates a plain object from a CWorkshop_SetItemPaymentRules_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {CWorkshop_SetItemPaymentRules_Response} message CWorkshop_SetItemPaymentRules_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_SetItemPaymentRules_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CWorkshop_SetItemPaymentRules_Response to JSON.
         * @function toJSON
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_SetItemPaymentRules_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_SetItemPaymentRules_Response
         * @function getTypeUrl
         * @memberof CWorkshop_SetItemPaymentRules_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_SetItemPaymentRules_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_SetItemPaymentRules_Response";
        };
    
        return CWorkshop_SetItemPaymentRules_Response;
    })();
    
    $root.CGameServers_AggregationQuery_Request = (function() {
    
        /**
         * Properties of a CGameServers_AggregationQuery_Request.
         * @exports ICGameServers_AggregationQuery_Request
         * @interface ICGameServers_AggregationQuery_Request
         * @property {string|null} [filter] CGameServers_AggregationQuery_Request filter
         * @property {Array.<string>|null} [group_fields] CGameServers_AggregationQuery_Request group_fields
         */
    
        /**
         * Constructs a new CGameServers_AggregationQuery_Request.
         * @exports CGameServers_AggregationQuery_Request
         * @classdesc Represents a CGameServers_AggregationQuery_Request.
         * @implements ICGameServers_AggregationQuery_Request
         * @constructor
         * @param {ICGameServers_AggregationQuery_Request=} [properties] Properties to set
         */
        function CGameServers_AggregationQuery_Request(properties) {
            this.group_fields = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGameServers_AggregationQuery_Request filter.
         * @member {string} filter
         * @memberof CGameServers_AggregationQuery_Request
         * @instance
         */
        CGameServers_AggregationQuery_Request.prototype.filter = "";
    
        /**
         * CGameServers_AggregationQuery_Request group_fields.
         * @member {Array.<string>} group_fields
         * @memberof CGameServers_AggregationQuery_Request
         * @instance
         */
        CGameServers_AggregationQuery_Request.prototype.group_fields = $util.emptyArray;
    
        /**
         * Creates a new CGameServers_AggregationQuery_Request instance using the specified properties.
         * @function create
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {ICGameServers_AggregationQuery_Request=} [properties] Properties to set
         * @returns {CGameServers_AggregationQuery_Request} CGameServers_AggregationQuery_Request instance
         */
        CGameServers_AggregationQuery_Request.create = function create(properties) {
            return new CGameServers_AggregationQuery_Request(properties);
        };
    
        /**
         * Encodes the specified CGameServers_AggregationQuery_Request message. Does not implicitly {@link CGameServers_AggregationQuery_Request.verify|verify} messages.
         * @function encode
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {ICGameServers_AggregationQuery_Request} message CGameServers_AggregationQuery_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGameServers_AggregationQuery_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
            if (message.group_fields != null && message.group_fields.length)
                for (var i = 0; i < message.group_fields.length; ++i)
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.group_fields[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CGameServers_AggregationQuery_Request message, length delimited. Does not implicitly {@link CGameServers_AggregationQuery_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {ICGameServers_AggregationQuery_Request} message CGameServers_AggregationQuery_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGameServers_AggregationQuery_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGameServers_AggregationQuery_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGameServers_AggregationQuery_Request} CGameServers_AggregationQuery_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGameServers_AggregationQuery_Request.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGameServers_AggregationQuery_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.filter = reader.string();
                        break;
                    }
                case 3: {
                        if (!(message.group_fields && message.group_fields.length))
                            message.group_fields = [];
                        message.group_fields.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGameServers_AggregationQuery_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGameServers_AggregationQuery_Request} CGameServers_AggregationQuery_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGameServers_AggregationQuery_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGameServers_AggregationQuery_Request message.
         * @function verify
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGameServers_AggregationQuery_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.filter != null && message.hasOwnProperty("filter"))
                if (!$util.isString(message.filter))
                    return "filter: string expected";
            if (message.group_fields != null && message.hasOwnProperty("group_fields")) {
                if (!Array.isArray(message.group_fields))
                    return "group_fields: array expected";
                for (var i = 0; i < message.group_fields.length; ++i)
                    if (!$util.isString(message.group_fields[i]))
                        return "group_fields: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CGameServers_AggregationQuery_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGameServers_AggregationQuery_Request} CGameServers_AggregationQuery_Request
         */
        CGameServers_AggregationQuery_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CGameServers_AggregationQuery_Request)
                return object;
            var message = new $root.CGameServers_AggregationQuery_Request();
            if (object.filter != null)
                message.filter = String(object.filter);
            if (object.group_fields) {
                if (!Array.isArray(object.group_fields))
                    throw TypeError(".CGameServers_AggregationQuery_Request.group_fields: array expected");
                message.group_fields = [];
                for (var i = 0; i < object.group_fields.length; ++i)
                    message.group_fields[i] = String(object.group_fields[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGameServers_AggregationQuery_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {CGameServers_AggregationQuery_Request} message CGameServers_AggregationQuery_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGameServers_AggregationQuery_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.group_fields = [];
            if (options.defaults)
                object.filter = "";
            if (message.filter != null && message.hasOwnProperty("filter"))
                object.filter = message.filter;
            if (message.group_fields && message.group_fields.length) {
                object.group_fields = [];
                for (var j = 0; j < message.group_fields.length; ++j)
                    object.group_fields[j] = message.group_fields[j];
            }
            return object;
        };
    
        /**
         * Converts this CGameServers_AggregationQuery_Request to JSON.
         * @function toJSON
         * @memberof CGameServers_AggregationQuery_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGameServers_AggregationQuery_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGameServers_AggregationQuery_Request
         * @function getTypeUrl
         * @memberof CGameServers_AggregationQuery_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGameServers_AggregationQuery_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGameServers_AggregationQuery_Request";
        };
    
        return CGameServers_AggregationQuery_Request;
    })();
    
    $root.CGameServers_AggregationQuery_Response = (function() {
    
        /**
         * Properties of a CGameServers_AggregationQuery_Response.
         * @exports ICGameServers_AggregationQuery_Response
         * @interface ICGameServers_AggregationQuery_Response
         * @property {Array.<CGameServers_AggregationQuery_Response.IGroup>|null} [groups] CGameServers_AggregationQuery_Response groups
         */
    
        /**
         * Constructs a new CGameServers_AggregationQuery_Response.
         * @exports CGameServers_AggregationQuery_Response
         * @classdesc Represents a CGameServers_AggregationQuery_Response.
         * @implements ICGameServers_AggregationQuery_Response
         * @constructor
         * @param {ICGameServers_AggregationQuery_Response=} [properties] Properties to set
         */
        function CGameServers_AggregationQuery_Response(properties) {
            this.groups = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGameServers_AggregationQuery_Response groups.
         * @member {Array.<CGameServers_AggregationQuery_Response.IGroup>} groups
         * @memberof CGameServers_AggregationQuery_Response
         * @instance
         */
        CGameServers_AggregationQuery_Response.prototype.groups = $util.emptyArray;
    
        /**
         * Creates a new CGameServers_AggregationQuery_Response instance using the specified properties.
         * @function create
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {ICGameServers_AggregationQuery_Response=} [properties] Properties to set
         * @returns {CGameServers_AggregationQuery_Response} CGameServers_AggregationQuery_Response instance
         */
        CGameServers_AggregationQuery_Response.create = function create(properties) {
            return new CGameServers_AggregationQuery_Response(properties);
        };
    
        /**
         * Encodes the specified CGameServers_AggregationQuery_Response message. Does not implicitly {@link CGameServers_AggregationQuery_Response.verify|verify} messages.
         * @function encode
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {ICGameServers_AggregationQuery_Response} message CGameServers_AggregationQuery_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGameServers_AggregationQuery_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.groups != null && message.groups.length)
                for (var i = 0; i < message.groups.length; ++i)
                    $root.CGameServers_AggregationQuery_Response.Group.encode(message.groups[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CGameServers_AggregationQuery_Response message, length delimited. Does not implicitly {@link CGameServers_AggregationQuery_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {ICGameServers_AggregationQuery_Response} message CGameServers_AggregationQuery_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGameServers_AggregationQuery_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGameServers_AggregationQuery_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGameServers_AggregationQuery_Response} CGameServers_AggregationQuery_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGameServers_AggregationQuery_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGameServers_AggregationQuery_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.groups && message.groups.length))
                            message.groups = [];
                        message.groups.push($root.CGameServers_AggregationQuery_Response.Group.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGameServers_AggregationQuery_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGameServers_AggregationQuery_Response} CGameServers_AggregationQuery_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGameServers_AggregationQuery_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGameServers_AggregationQuery_Response message.
         * @function verify
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGameServers_AggregationQuery_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.groups != null && message.hasOwnProperty("groups")) {
                if (!Array.isArray(message.groups))
                    return "groups: array expected";
                for (var i = 0; i < message.groups.length; ++i) {
                    var error = $root.CGameServers_AggregationQuery_Response.Group.verify(message.groups[i]);
                    if (error)
                        return "groups." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CGameServers_AggregationQuery_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGameServers_AggregationQuery_Response} CGameServers_AggregationQuery_Response
         */
        CGameServers_AggregationQuery_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CGameServers_AggregationQuery_Response)
                return object;
            var message = new $root.CGameServers_AggregationQuery_Response();
            if (object.groups) {
                if (!Array.isArray(object.groups))
                    throw TypeError(".CGameServers_AggregationQuery_Response.groups: array expected");
                message.groups = [];
                for (var i = 0; i < object.groups.length; ++i) {
                    if (typeof object.groups[i] !== "object")
                        throw TypeError(".CGameServers_AggregationQuery_Response.groups: object expected");
                    message.groups[i] = $root.CGameServers_AggregationQuery_Response.Group.fromObject(object.groups[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CGameServers_AggregationQuery_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {CGameServers_AggregationQuery_Response} message CGameServers_AggregationQuery_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGameServers_AggregationQuery_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.groups = [];
            if (message.groups && message.groups.length) {
                object.groups = [];
                for (var j = 0; j < message.groups.length; ++j)
                    object.groups[j] = $root.CGameServers_AggregationQuery_Response.Group.toObject(message.groups[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CGameServers_AggregationQuery_Response to JSON.
         * @function toJSON
         * @memberof CGameServers_AggregationQuery_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGameServers_AggregationQuery_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGameServers_AggregationQuery_Response
         * @function getTypeUrl
         * @memberof CGameServers_AggregationQuery_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGameServers_AggregationQuery_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGameServers_AggregationQuery_Response";
        };
    
        CGameServers_AggregationQuery_Response.Group = (function() {
    
            /**
             * Properties of a Group.
             * @memberof CGameServers_AggregationQuery_Response
             * @interface IGroup
             * @property {Array.<string>|null} [group_values] Group group_values
             * @property {number|null} [servers_empty] Group servers_empty
             * @property {number|null} [servers_full] Group servers_full
             * @property {number|null} [servers_total] Group servers_total
             * @property {number|null} [players_humans] Group players_humans
             * @property {number|null} [players_bots] Group players_bots
             * @property {number|null} [player_capacity] Group player_capacity
             */
    
            /**
             * Constructs a new Group.
             * @memberof CGameServers_AggregationQuery_Response
             * @classdesc Represents a Group.
             * @implements IGroup
             * @constructor
             * @param {CGameServers_AggregationQuery_Response.IGroup=} [properties] Properties to set
             */
            function Group(properties) {
                this.group_values = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Group group_values.
             * @member {Array.<string>} group_values
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.group_values = $util.emptyArray;
    
            /**
             * Group servers_empty.
             * @member {number} servers_empty
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.servers_empty = 0;
    
            /**
             * Group servers_full.
             * @member {number} servers_full
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.servers_full = 0;
    
            /**
             * Group servers_total.
             * @member {number} servers_total
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.servers_total = 0;
    
            /**
             * Group players_humans.
             * @member {number} players_humans
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.players_humans = 0;
    
            /**
             * Group players_bots.
             * @member {number} players_bots
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.players_bots = 0;
    
            /**
             * Group player_capacity.
             * @member {number} player_capacity
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             */
            Group.prototype.player_capacity = 0;
    
            /**
             * Creates a new Group instance using the specified properties.
             * @function create
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {CGameServers_AggregationQuery_Response.IGroup=} [properties] Properties to set
             * @returns {CGameServers_AggregationQuery_Response.Group} Group instance
             */
            Group.create = function create(properties) {
                return new Group(properties);
            };
    
            /**
             * Encodes the specified Group message. Does not implicitly {@link CGameServers_AggregationQuery_Response.Group.verify|verify} messages.
             * @function encode
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {CGameServers_AggregationQuery_Response.IGroup} message Group message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Group.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.group_values != null && message.group_values.length)
                    for (var i = 0; i < message.group_values.length; ++i)
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.group_values[i]);
                if (message.servers_empty != null && Object.hasOwnProperty.call(message, "servers_empty"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.servers_empty);
                if (message.servers_full != null && Object.hasOwnProperty.call(message, "servers_full"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.servers_full);
                if (message.servers_total != null && Object.hasOwnProperty.call(message, "servers_total"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.servers_total);
                if (message.players_humans != null && Object.hasOwnProperty.call(message, "players_humans"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.players_humans);
                if (message.players_bots != null && Object.hasOwnProperty.call(message, "players_bots"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.players_bots);
                if (message.player_capacity != null && Object.hasOwnProperty.call(message, "player_capacity"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.player_capacity);
                return writer;
            };
    
            /**
             * Encodes the specified Group message, length delimited. Does not implicitly {@link CGameServers_AggregationQuery_Response.Group.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {CGameServers_AggregationQuery_Response.IGroup} message Group message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Group.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Group message from the specified reader or buffer.
             * @function decode
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CGameServers_AggregationQuery_Response.Group} Group
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Group.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGameServers_AggregationQuery_Response.Group();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.group_values && message.group_values.length))
                                message.group_values = [];
                            message.group_values.push(reader.string());
                            break;
                        }
                    case 2: {
                            message.servers_empty = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.servers_full = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.servers_total = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.players_humans = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.players_bots = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.player_capacity = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Group message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CGameServers_AggregationQuery_Response.Group} Group
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Group.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Group message.
             * @function verify
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Group.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.group_values != null && message.hasOwnProperty("group_values")) {
                    if (!Array.isArray(message.group_values))
                        return "group_values: array expected";
                    for (var i = 0; i < message.group_values.length; ++i)
                        if (!$util.isString(message.group_values[i]))
                            return "group_values: string[] expected";
                }
                if (message.servers_empty != null && message.hasOwnProperty("servers_empty"))
                    if (!$util.isInteger(message.servers_empty))
                        return "servers_empty: integer expected";
                if (message.servers_full != null && message.hasOwnProperty("servers_full"))
                    if (!$util.isInteger(message.servers_full))
                        return "servers_full: integer expected";
                if (message.servers_total != null && message.hasOwnProperty("servers_total"))
                    if (!$util.isInteger(message.servers_total))
                        return "servers_total: integer expected";
                if (message.players_humans != null && message.hasOwnProperty("players_humans"))
                    if (!$util.isInteger(message.players_humans))
                        return "players_humans: integer expected";
                if (message.players_bots != null && message.hasOwnProperty("players_bots"))
                    if (!$util.isInteger(message.players_bots))
                        return "players_bots: integer expected";
                if (message.player_capacity != null && message.hasOwnProperty("player_capacity"))
                    if (!$util.isInteger(message.player_capacity))
                        return "player_capacity: integer expected";
                return null;
            };
    
            /**
             * Creates a Group message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CGameServers_AggregationQuery_Response.Group} Group
             */
            Group.fromObject = function fromObject(object) {
                if (object instanceof $root.CGameServers_AggregationQuery_Response.Group)
                    return object;
                var message = new $root.CGameServers_AggregationQuery_Response.Group();
                if (object.group_values) {
                    if (!Array.isArray(object.group_values))
                        throw TypeError(".CGameServers_AggregationQuery_Response.Group.group_values: array expected");
                    message.group_values = [];
                    for (var i = 0; i < object.group_values.length; ++i)
                        message.group_values[i] = String(object.group_values[i]);
                }
                if (object.servers_empty != null)
                    message.servers_empty = object.servers_empty >>> 0;
                if (object.servers_full != null)
                    message.servers_full = object.servers_full >>> 0;
                if (object.servers_total != null)
                    message.servers_total = object.servers_total >>> 0;
                if (object.players_humans != null)
                    message.players_humans = object.players_humans >>> 0;
                if (object.players_bots != null)
                    message.players_bots = object.players_bots >>> 0;
                if (object.player_capacity != null)
                    message.player_capacity = object.player_capacity >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a Group message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {CGameServers_AggregationQuery_Response.Group} message Group
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Group.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.group_values = [];
                if (options.defaults) {
                    object.servers_empty = 0;
                    object.servers_full = 0;
                    object.servers_total = 0;
                    object.players_humans = 0;
                    object.players_bots = 0;
                    object.player_capacity = 0;
                }
                if (message.group_values && message.group_values.length) {
                    object.group_values = [];
                    for (var j = 0; j < message.group_values.length; ++j)
                        object.group_values[j] = message.group_values[j];
                }
                if (message.servers_empty != null && message.hasOwnProperty("servers_empty"))
                    object.servers_empty = message.servers_empty;
                if (message.servers_full != null && message.hasOwnProperty("servers_full"))
                    object.servers_full = message.servers_full;
                if (message.servers_total != null && message.hasOwnProperty("servers_total"))
                    object.servers_total = message.servers_total;
                if (message.players_humans != null && message.hasOwnProperty("players_humans"))
                    object.players_humans = message.players_humans;
                if (message.players_bots != null && message.hasOwnProperty("players_bots"))
                    object.players_bots = message.players_bots;
                if (message.player_capacity != null && message.hasOwnProperty("player_capacity"))
                    object.player_capacity = message.player_capacity;
                return object;
            };
    
            /**
             * Converts this Group to JSON.
             * @function toJSON
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Group.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Group
             * @function getTypeUrl
             * @memberof CGameServers_AggregationQuery_Response.Group
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Group.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CGameServers_AggregationQuery_Response.Group";
            };
    
            return Group;
        })();
    
        return CGameServers_AggregationQuery_Response;
    })();
    
    $root.CWorkshop_AddSpecialPayment_Request = (function() {
    
        /**
         * Properties of a CWorkshop_AddSpecialPayment_Request.
         * @exports ICWorkshop_AddSpecialPayment_Request
         * @interface ICWorkshop_AddSpecialPayment_Request
         * @property {number|null} [appid] CWorkshop_AddSpecialPayment_Request appid
         * @property {number|null} [gameitemid] CWorkshop_AddSpecialPayment_Request gameitemid
         * @property {string|null} [date] CWorkshop_AddSpecialPayment_Request date
         * @property {number|Long|null} [payment_us_usd] CWorkshop_AddSpecialPayment_Request payment_us_usd
         * @property {number|Long|null} [payment_row_usd] CWorkshop_AddSpecialPayment_Request payment_row_usd
         */
    
        /**
         * Constructs a new CWorkshop_AddSpecialPayment_Request.
         * @exports CWorkshop_AddSpecialPayment_Request
         * @classdesc Represents a CWorkshop_AddSpecialPayment_Request.
         * @implements ICWorkshop_AddSpecialPayment_Request
         * @constructor
         * @param {ICWorkshop_AddSpecialPayment_Request=} [properties] Properties to set
         */
        function CWorkshop_AddSpecialPayment_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CWorkshop_AddSpecialPayment_Request appid.
         * @member {number} appid
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.appid = 0;
    
        /**
         * CWorkshop_AddSpecialPayment_Request gameitemid.
         * @member {number} gameitemid
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.gameitemid = 0;
    
        /**
         * CWorkshop_AddSpecialPayment_Request date.
         * @member {string} date
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.date = "";
    
        /**
         * CWorkshop_AddSpecialPayment_Request payment_us_usd.
         * @member {number|Long} payment_us_usd
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.payment_us_usd = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CWorkshop_AddSpecialPayment_Request payment_row_usd.
         * @member {number|Long} payment_row_usd
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         */
        CWorkshop_AddSpecialPayment_Request.prototype.payment_row_usd = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CWorkshop_AddSpecialPayment_Request instance using the specified properties.
         * @function create
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Request=} [properties] Properties to set
         * @returns {CWorkshop_AddSpecialPayment_Request} CWorkshop_AddSpecialPayment_Request instance
         */
        CWorkshop_AddSpecialPayment_Request.create = function create(properties) {
            return new CWorkshop_AddSpecialPayment_Request(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_AddSpecialPayment_Request message. Does not implicitly {@link CWorkshop_AddSpecialPayment_Request.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Request} message CWorkshop_AddSpecialPayment_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_AddSpecialPayment_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.gameitemid != null && Object.hasOwnProperty.call(message, "gameitemid"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.gameitemid);
            if (message.date != null && Object.hasOwnProperty.call(message, "date"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.date);
            if (message.payment_us_usd != null && Object.hasOwnProperty.call(message, "payment_us_usd"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.payment_us_usd);
            if (message.payment_row_usd != null && Object.hasOwnProperty.call(message, "payment_row_usd"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.payment_row_usd);
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_AddSpecialPayment_Request message, length delimited. Does not implicitly {@link CWorkshop_AddSpecialPayment_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Request} message CWorkshop_AddSpecialPayment_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_AddSpecialPayment_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_AddSpecialPayment_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_AddSpecialPayment_Request} CWorkshop_AddSpecialPayment_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_AddSpecialPayment_Request.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_AddSpecialPayment_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.gameitemid = reader.uint32();
                        break;
                    }
                case 3: {
                        message.date = reader.string();
                        break;
                    }
                case 4: {
                        message.payment_us_usd = reader.uint64();
                        break;
                    }
                case 5: {
                        message.payment_row_usd = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_AddSpecialPayment_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_AddSpecialPayment_Request} CWorkshop_AddSpecialPayment_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_AddSpecialPayment_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_AddSpecialPayment_Request message.
         * @function verify
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_AddSpecialPayment_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                if (!$util.isInteger(message.gameitemid))
                    return "gameitemid: integer expected";
            if (message.date != null && message.hasOwnProperty("date"))
                if (!$util.isString(message.date))
                    return "date: string expected";
            if (message.payment_us_usd != null && message.hasOwnProperty("payment_us_usd"))
                if (!$util.isInteger(message.payment_us_usd) && !(message.payment_us_usd && $util.isInteger(message.payment_us_usd.low) && $util.isInteger(message.payment_us_usd.high)))
                    return "payment_us_usd: integer|Long expected";
            if (message.payment_row_usd != null && message.hasOwnProperty("payment_row_usd"))
                if (!$util.isInteger(message.payment_row_usd) && !(message.payment_row_usd && $util.isInteger(message.payment_row_usd.low) && $util.isInteger(message.payment_row_usd.high)))
                    return "payment_row_usd: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CWorkshop_AddSpecialPayment_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_AddSpecialPayment_Request} CWorkshop_AddSpecialPayment_Request
         */
        CWorkshop_AddSpecialPayment_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_AddSpecialPayment_Request)
                return object;
            var message = new $root.CWorkshop_AddSpecialPayment_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.gameitemid != null)
                message.gameitemid = object.gameitemid >>> 0;
            if (object.date != null)
                message.date = String(object.date);
            if (object.payment_us_usd != null)
                if ($util.Long)
                    (message.payment_us_usd = $util.Long.fromValue(object.payment_us_usd)).unsigned = true;
                else if (typeof object.payment_us_usd === "string")
                    message.payment_us_usd = parseInt(object.payment_us_usd, 10);
                else if (typeof object.payment_us_usd === "number")
                    message.payment_us_usd = object.payment_us_usd;
                else if (typeof object.payment_us_usd === "object")
                    message.payment_us_usd = new $util.LongBits(object.payment_us_usd.low >>> 0, object.payment_us_usd.high >>> 0).toNumber(true);
            if (object.payment_row_usd != null)
                if ($util.Long)
                    (message.payment_row_usd = $util.Long.fromValue(object.payment_row_usd)).unsigned = true;
                else if (typeof object.payment_row_usd === "string")
                    message.payment_row_usd = parseInt(object.payment_row_usd, 10);
                else if (typeof object.payment_row_usd === "number")
                    message.payment_row_usd = object.payment_row_usd;
                else if (typeof object.payment_row_usd === "object")
                    message.payment_row_usd = new $util.LongBits(object.payment_row_usd.low >>> 0, object.payment_row_usd.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CWorkshop_AddSpecialPayment_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {CWorkshop_AddSpecialPayment_Request} message CWorkshop_AddSpecialPayment_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_AddSpecialPayment_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                object.gameitemid = 0;
                object.date = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.payment_us_usd = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.payment_us_usd = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.payment_row_usd = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.payment_row_usd = options.longs === String ? "0" : 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.gameitemid != null && message.hasOwnProperty("gameitemid"))
                object.gameitemid = message.gameitemid;
            if (message.date != null && message.hasOwnProperty("date"))
                object.date = message.date;
            if (message.payment_us_usd != null && message.hasOwnProperty("payment_us_usd"))
                if (typeof message.payment_us_usd === "number")
                    object.payment_us_usd = options.longs === String ? String(message.payment_us_usd) : message.payment_us_usd;
                else
                    object.payment_us_usd = options.longs === String ? $util.Long.prototype.toString.call(message.payment_us_usd) : options.longs === Number ? new $util.LongBits(message.payment_us_usd.low >>> 0, message.payment_us_usd.high >>> 0).toNumber(true) : message.payment_us_usd;
            if (message.payment_row_usd != null && message.hasOwnProperty("payment_row_usd"))
                if (typeof message.payment_row_usd === "number")
                    object.payment_row_usd = options.longs === String ? String(message.payment_row_usd) : message.payment_row_usd;
                else
                    object.payment_row_usd = options.longs === String ? $util.Long.prototype.toString.call(message.payment_row_usd) : options.longs === Number ? new $util.LongBits(message.payment_row_usd.low >>> 0, message.payment_row_usd.high >>> 0).toNumber(true) : message.payment_row_usd;
            return object;
        };
    
        /**
         * Converts this CWorkshop_AddSpecialPayment_Request to JSON.
         * @function toJSON
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_AddSpecialPayment_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_AddSpecialPayment_Request
         * @function getTypeUrl
         * @memberof CWorkshop_AddSpecialPayment_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_AddSpecialPayment_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_AddSpecialPayment_Request";
        };
    
        return CWorkshop_AddSpecialPayment_Request;
    })();
    
    $root.CWorkshop_AddSpecialPayment_Response = (function() {
    
        /**
         * Properties of a CWorkshop_AddSpecialPayment_Response.
         * @exports ICWorkshop_AddSpecialPayment_Response
         * @interface ICWorkshop_AddSpecialPayment_Response
         */
    
        /**
         * Constructs a new CWorkshop_AddSpecialPayment_Response.
         * @exports CWorkshop_AddSpecialPayment_Response
         * @classdesc Represents a CWorkshop_AddSpecialPayment_Response.
         * @implements ICWorkshop_AddSpecialPayment_Response
         * @constructor
         * @param {ICWorkshop_AddSpecialPayment_Response=} [properties] Properties to set
         */
        function CWorkshop_AddSpecialPayment_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CWorkshop_AddSpecialPayment_Response instance using the specified properties.
         * @function create
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Response=} [properties] Properties to set
         * @returns {CWorkshop_AddSpecialPayment_Response} CWorkshop_AddSpecialPayment_Response instance
         */
        CWorkshop_AddSpecialPayment_Response.create = function create(properties) {
            return new CWorkshop_AddSpecialPayment_Response(properties);
        };
    
        /**
         * Encodes the specified CWorkshop_AddSpecialPayment_Response message. Does not implicitly {@link CWorkshop_AddSpecialPayment_Response.verify|verify} messages.
         * @function encode
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Response} message CWorkshop_AddSpecialPayment_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_AddSpecialPayment_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CWorkshop_AddSpecialPayment_Response message, length delimited. Does not implicitly {@link CWorkshop_AddSpecialPayment_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {ICWorkshop_AddSpecialPayment_Response} message CWorkshop_AddSpecialPayment_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CWorkshop_AddSpecialPayment_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CWorkshop_AddSpecialPayment_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CWorkshop_AddSpecialPayment_Response} CWorkshop_AddSpecialPayment_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_AddSpecialPayment_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CWorkshop_AddSpecialPayment_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CWorkshop_AddSpecialPayment_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CWorkshop_AddSpecialPayment_Response} CWorkshop_AddSpecialPayment_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CWorkshop_AddSpecialPayment_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CWorkshop_AddSpecialPayment_Response message.
         * @function verify
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CWorkshop_AddSpecialPayment_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CWorkshop_AddSpecialPayment_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CWorkshop_AddSpecialPayment_Response} CWorkshop_AddSpecialPayment_Response
         */
        CWorkshop_AddSpecialPayment_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CWorkshop_AddSpecialPayment_Response)
                return object;
            return new $root.CWorkshop_AddSpecialPayment_Response();
        };
    
        /**
         * Creates a plain object from a CWorkshop_AddSpecialPayment_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {CWorkshop_AddSpecialPayment_Response} message CWorkshop_AddSpecialPayment_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CWorkshop_AddSpecialPayment_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CWorkshop_AddSpecialPayment_Response to JSON.
         * @function toJSON
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CWorkshop_AddSpecialPayment_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CWorkshop_AddSpecialPayment_Response
         * @function getTypeUrl
         * @memberof CWorkshop_AddSpecialPayment_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CWorkshop_AddSpecialPayment_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CWorkshop_AddSpecialPayment_Response";
        };
    
        return CWorkshop_AddSpecialPayment_Response;
    })();
    
    $root.CProductInfo_SetRichPresenceLocalization_Request = (function() {
    
        /**
         * Properties of a CProductInfo_SetRichPresenceLocalization_Request.
         * @exports ICProductInfo_SetRichPresenceLocalization_Request
         * @interface ICProductInfo_SetRichPresenceLocalization_Request
         * @property {number|null} [appid] CProductInfo_SetRichPresenceLocalization_Request appid
         * @property {Array.<CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection>|null} [languages] CProductInfo_SetRichPresenceLocalization_Request languages
         * @property {number|Long|null} [steamid] CProductInfo_SetRichPresenceLocalization_Request steamid
         */
    
        /**
         * Constructs a new CProductInfo_SetRichPresenceLocalization_Request.
         * @exports CProductInfo_SetRichPresenceLocalization_Request
         * @classdesc Represents a CProductInfo_SetRichPresenceLocalization_Request.
         * @implements ICProductInfo_SetRichPresenceLocalization_Request
         * @constructor
         * @param {ICProductInfo_SetRichPresenceLocalization_Request=} [properties] Properties to set
         */
        function CProductInfo_SetRichPresenceLocalization_Request(properties) {
            this.languages = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CProductInfo_SetRichPresenceLocalization_Request appid.
         * @member {number} appid
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @instance
         */
        CProductInfo_SetRichPresenceLocalization_Request.prototype.appid = 0;
    
        /**
         * CProductInfo_SetRichPresenceLocalization_Request languages.
         * @member {Array.<CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection>} languages
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @instance
         */
        CProductInfo_SetRichPresenceLocalization_Request.prototype.languages = $util.emptyArray;
    
        /**
         * CProductInfo_SetRichPresenceLocalization_Request steamid.
         * @member {number|Long} steamid
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @instance
         */
        CProductInfo_SetRichPresenceLocalization_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CProductInfo_SetRichPresenceLocalization_Request instance using the specified properties.
         * @function create
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Request=} [properties] Properties to set
         * @returns {CProductInfo_SetRichPresenceLocalization_Request} CProductInfo_SetRichPresenceLocalization_Request instance
         */
        CProductInfo_SetRichPresenceLocalization_Request.create = function create(properties) {
            return new CProductInfo_SetRichPresenceLocalization_Request(properties);
        };
    
        /**
         * Encodes the specified CProductInfo_SetRichPresenceLocalization_Request message. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.verify|verify} messages.
         * @function encode
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Request} message CProductInfo_SetRichPresenceLocalization_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductInfo_SetRichPresenceLocalization_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.languages != null && message.languages.length)
                for (var i = 0; i < message.languages.length; ++i)
                    $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.encode(message.languages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CProductInfo_SetRichPresenceLocalization_Request message, length delimited. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Request} message CProductInfo_SetRichPresenceLocalization_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductInfo_SetRichPresenceLocalization_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CProductInfo_SetRichPresenceLocalization_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CProductInfo_SetRichPresenceLocalization_Request} CProductInfo_SetRichPresenceLocalization_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductInfo_SetRichPresenceLocalization_Request.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductInfo_SetRichPresenceLocalization_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.languages && message.languages.length))
                            message.languages = [];
                        message.languages.push($root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.steamid = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CProductInfo_SetRichPresenceLocalization_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CProductInfo_SetRichPresenceLocalization_Request} CProductInfo_SetRichPresenceLocalization_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductInfo_SetRichPresenceLocalization_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CProductInfo_SetRichPresenceLocalization_Request message.
         * @function verify
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CProductInfo_SetRichPresenceLocalization_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.languages != null && message.hasOwnProperty("languages")) {
                if (!Array.isArray(message.languages))
                    return "languages: array expected";
                for (var i = 0; i < message.languages.length; ++i) {
                    var error = $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.verify(message.languages[i]);
                    if (error)
                        return "languages." + error;
                }
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CProductInfo_SetRichPresenceLocalization_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CProductInfo_SetRichPresenceLocalization_Request} CProductInfo_SetRichPresenceLocalization_Request
         */
        CProductInfo_SetRichPresenceLocalization_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CProductInfo_SetRichPresenceLocalization_Request)
                return object;
            var message = new $root.CProductInfo_SetRichPresenceLocalization_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.languages) {
                if (!Array.isArray(object.languages))
                    throw TypeError(".CProductInfo_SetRichPresenceLocalization_Request.languages: array expected");
                message.languages = [];
                for (var i = 0; i < object.languages.length; ++i) {
                    if (typeof object.languages[i] !== "object")
                        throw TypeError(".CProductInfo_SetRichPresenceLocalization_Request.languages: object expected");
                    message.languages[i] = $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.fromObject(object.languages[i]);
                }
            }
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = true;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CProductInfo_SetRichPresenceLocalization_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {CProductInfo_SetRichPresenceLocalization_Request} message CProductInfo_SetRichPresenceLocalization_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CProductInfo_SetRichPresenceLocalization_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.languages = [];
            if (options.defaults) {
                object.appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.languages && message.languages.length) {
                object.languages = [];
                for (var j = 0; j < message.languages.length; ++j)
                    object.languages[j] = $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.toObject(message.languages[j], options);
            }
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber(true) : message.steamid;
            return object;
        };
    
        /**
         * Converts this CProductInfo_SetRichPresenceLocalization_Request to JSON.
         * @function toJSON
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CProductInfo_SetRichPresenceLocalization_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CProductInfo_SetRichPresenceLocalization_Request
         * @function getTypeUrl
         * @memberof CProductInfo_SetRichPresenceLocalization_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CProductInfo_SetRichPresenceLocalization_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CProductInfo_SetRichPresenceLocalization_Request";
        };
    
        CProductInfo_SetRichPresenceLocalization_Request.Token = (function() {
    
            /**
             * Properties of a Token.
             * @memberof CProductInfo_SetRichPresenceLocalization_Request
             * @interface IToken
             * @property {string|null} [token] Token token
             * @property {string|null} [value] Token value
             */
    
            /**
             * Constructs a new Token.
             * @memberof CProductInfo_SetRichPresenceLocalization_Request
             * @classdesc Represents a Token.
             * @implements IToken
             * @constructor
             * @param {CProductInfo_SetRichPresenceLocalization_Request.IToken=} [properties] Properties to set
             */
            function Token(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Token token.
             * @member {string} token
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @instance
             */
            Token.prototype.token = "";
    
            /**
             * Token value.
             * @member {string} value
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @instance
             */
            Token.prototype.value = "";
    
            /**
             * Creates a new Token instance using the specified properties.
             * @function create
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.IToken=} [properties] Properties to set
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.Token} Token instance
             */
            Token.create = function create(properties) {
                return new Token(properties);
            };
    
            /**
             * Encodes the specified Token message. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.Token.verify|verify} messages.
             * @function encode
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.IToken} message Token message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Token.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.token != null && Object.hasOwnProperty.call(message, "token"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.token);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                return writer;
            };
    
            /**
             * Encodes the specified Token message, length delimited. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.Token.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.IToken} message Token message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Token.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Token message from the specified reader or buffer.
             * @function decode
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.Token} Token
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Token.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductInfo_SetRichPresenceLocalization_Request.Token();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.token = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Token message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.Token} Token
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Token.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Token message.
             * @function verify
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Token.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.token != null && message.hasOwnProperty("token"))
                    if (!$util.isString(message.token))
                        return "token: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };
    
            /**
             * Creates a Token message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.Token} Token
             */
            Token.fromObject = function fromObject(object) {
                if (object instanceof $root.CProductInfo_SetRichPresenceLocalization_Request.Token)
                    return object;
                var message = new $root.CProductInfo_SetRichPresenceLocalization_Request.Token();
                if (object.token != null)
                    message.token = String(object.token);
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };
    
            /**
             * Creates a plain object from a Token message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.Token} message Token
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Token.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.token = "";
                    object.value = "";
                }
                if (message.token != null && message.hasOwnProperty("token"))
                    object.token = message.token;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };
    
            /**
             * Converts this Token to JSON.
             * @function toJSON
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Token.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Token
             * @function getTypeUrl
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.Token
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Token.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CProductInfo_SetRichPresenceLocalization_Request.Token";
            };
    
            return Token;
        })();
    
        CProductInfo_SetRichPresenceLocalization_Request.LanguageSection = (function() {
    
            /**
             * Properties of a LanguageSection.
             * @memberof CProductInfo_SetRichPresenceLocalization_Request
             * @interface ILanguageSection
             * @property {string|null} [language] LanguageSection language
             * @property {Array.<CProductInfo_SetRichPresenceLocalization_Request.IToken>|null} [tokens] LanguageSection tokens
             */
    
            /**
             * Constructs a new LanguageSection.
             * @memberof CProductInfo_SetRichPresenceLocalization_Request
             * @classdesc Represents a LanguageSection.
             * @implements ILanguageSection
             * @constructor
             * @param {CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection=} [properties] Properties to set
             */
            function LanguageSection(properties) {
                this.tokens = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * LanguageSection language.
             * @member {string} language
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @instance
             */
            LanguageSection.prototype.language = "";
    
            /**
             * LanguageSection tokens.
             * @member {Array.<CProductInfo_SetRichPresenceLocalization_Request.IToken>} tokens
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @instance
             */
            LanguageSection.prototype.tokens = $util.emptyArray;
    
            /**
             * Creates a new LanguageSection instance using the specified properties.
             * @function create
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection=} [properties] Properties to set
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} LanguageSection instance
             */
            LanguageSection.create = function create(properties) {
                return new LanguageSection(properties);
            };
    
            /**
             * Encodes the specified LanguageSection message. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.verify|verify} messages.
             * @function encode
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection} message LanguageSection message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LanguageSection.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.language);
                if (message.tokens != null && message.tokens.length)
                    for (var i = 0; i < message.tokens.length; ++i)
                        $root.CProductInfo_SetRichPresenceLocalization_Request.Token.encode(message.tokens[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified LanguageSection message, length delimited. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.ILanguageSection} message LanguageSection message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LanguageSection.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a LanguageSection message from the specified reader or buffer.
             * @function decode
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} LanguageSection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LanguageSection.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.language = reader.string();
                            break;
                        }
                    case 2: {
                            if (!(message.tokens && message.tokens.length))
                                message.tokens = [];
                            message.tokens.push($root.CProductInfo_SetRichPresenceLocalization_Request.Token.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a LanguageSection message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} LanguageSection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LanguageSection.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a LanguageSection message.
             * @function verify
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LanguageSection.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.language != null && message.hasOwnProperty("language"))
                    if (!$util.isString(message.language))
                        return "language: string expected";
                if (message.tokens != null && message.hasOwnProperty("tokens")) {
                    if (!Array.isArray(message.tokens))
                        return "tokens: array expected";
                    for (var i = 0; i < message.tokens.length; ++i) {
                        var error = $root.CProductInfo_SetRichPresenceLocalization_Request.Token.verify(message.tokens[i]);
                        if (error)
                            return "tokens." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a LanguageSection message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} LanguageSection
             */
            LanguageSection.fromObject = function fromObject(object) {
                if (object instanceof $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection)
                    return object;
                var message = new $root.CProductInfo_SetRichPresenceLocalization_Request.LanguageSection();
                if (object.language != null)
                    message.language = String(object.language);
                if (object.tokens) {
                    if (!Array.isArray(object.tokens))
                        throw TypeError(".CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens: array expected");
                    message.tokens = [];
                    for (var i = 0; i < object.tokens.length; ++i) {
                        if (typeof object.tokens[i] !== "object")
                            throw TypeError(".CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.tokens: object expected");
                        message.tokens[i] = $root.CProductInfo_SetRichPresenceLocalization_Request.Token.fromObject(object.tokens[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from a LanguageSection message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {CProductInfo_SetRichPresenceLocalization_Request.LanguageSection} message LanguageSection
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LanguageSection.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.tokens = [];
                if (options.defaults)
                    object.language = "";
                if (message.language != null && message.hasOwnProperty("language"))
                    object.language = message.language;
                if (message.tokens && message.tokens.length) {
                    object.tokens = [];
                    for (var j = 0; j < message.tokens.length; ++j)
                        object.tokens[j] = $root.CProductInfo_SetRichPresenceLocalization_Request.Token.toObject(message.tokens[j], options);
                }
                return object;
            };
    
            /**
             * Converts this LanguageSection to JSON.
             * @function toJSON
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LanguageSection.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for LanguageSection
             * @function getTypeUrl
             * @memberof CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LanguageSection.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CProductInfo_SetRichPresenceLocalization_Request.LanguageSection";
            };
    
            return LanguageSection;
        })();
    
        return CProductInfo_SetRichPresenceLocalization_Request;
    })();
    
    $root.CProductInfo_SetRichPresenceLocalization_Response = (function() {
    
        /**
         * Properties of a CProductInfo_SetRichPresenceLocalization_Response.
         * @exports ICProductInfo_SetRichPresenceLocalization_Response
         * @interface ICProductInfo_SetRichPresenceLocalization_Response
         */
    
        /**
         * Constructs a new CProductInfo_SetRichPresenceLocalization_Response.
         * @exports CProductInfo_SetRichPresenceLocalization_Response
         * @classdesc Represents a CProductInfo_SetRichPresenceLocalization_Response.
         * @implements ICProductInfo_SetRichPresenceLocalization_Response
         * @constructor
         * @param {ICProductInfo_SetRichPresenceLocalization_Response=} [properties] Properties to set
         */
        function CProductInfo_SetRichPresenceLocalization_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CProductInfo_SetRichPresenceLocalization_Response instance using the specified properties.
         * @function create
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Response=} [properties] Properties to set
         * @returns {CProductInfo_SetRichPresenceLocalization_Response} CProductInfo_SetRichPresenceLocalization_Response instance
         */
        CProductInfo_SetRichPresenceLocalization_Response.create = function create(properties) {
            return new CProductInfo_SetRichPresenceLocalization_Response(properties);
        };
    
        /**
         * Encodes the specified CProductInfo_SetRichPresenceLocalization_Response message. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Response.verify|verify} messages.
         * @function encode
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Response} message CProductInfo_SetRichPresenceLocalization_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductInfo_SetRichPresenceLocalization_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CProductInfo_SetRichPresenceLocalization_Response message, length delimited. Does not implicitly {@link CProductInfo_SetRichPresenceLocalization_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {ICProductInfo_SetRichPresenceLocalization_Response} message CProductInfo_SetRichPresenceLocalization_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CProductInfo_SetRichPresenceLocalization_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CProductInfo_SetRichPresenceLocalization_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CProductInfo_SetRichPresenceLocalization_Response} CProductInfo_SetRichPresenceLocalization_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductInfo_SetRichPresenceLocalization_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CProductInfo_SetRichPresenceLocalization_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CProductInfo_SetRichPresenceLocalization_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CProductInfo_SetRichPresenceLocalization_Response} CProductInfo_SetRichPresenceLocalization_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CProductInfo_SetRichPresenceLocalization_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CProductInfo_SetRichPresenceLocalization_Response message.
         * @function verify
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CProductInfo_SetRichPresenceLocalization_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CProductInfo_SetRichPresenceLocalization_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CProductInfo_SetRichPresenceLocalization_Response} CProductInfo_SetRichPresenceLocalization_Response
         */
        CProductInfo_SetRichPresenceLocalization_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CProductInfo_SetRichPresenceLocalization_Response)
                return object;
            return new $root.CProductInfo_SetRichPresenceLocalization_Response();
        };
    
        /**
         * Creates a plain object from a CProductInfo_SetRichPresenceLocalization_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {CProductInfo_SetRichPresenceLocalization_Response} message CProductInfo_SetRichPresenceLocalization_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CProductInfo_SetRichPresenceLocalization_Response.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CProductInfo_SetRichPresenceLocalization_Response to JSON.
         * @function toJSON
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CProductInfo_SetRichPresenceLocalization_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CProductInfo_SetRichPresenceLocalization_Response
         * @function getTypeUrl
         * @memberof CProductInfo_SetRichPresenceLocalization_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CProductInfo_SetRichPresenceLocalization_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CProductInfo_SetRichPresenceLocalization_Response";
        };
    
        return CProductInfo_SetRichPresenceLocalization_Response;
    })();
    
    $root.CMsgSerializedSOCache = (function() {
    
        /**
         * Properties of a CMsgSerializedSOCache.
         * @exports ICMsgSerializedSOCache
         * @interface ICMsgSerializedSOCache
         * @property {number|null} [file_version] CMsgSerializedSOCache file_version
         * @property {Array.<CMsgSerializedSOCache.ICache>|null} [caches] CMsgSerializedSOCache caches
         * @property {number|null} [gc_socache_file_version] CMsgSerializedSOCache gc_socache_file_version
         */
    
        /**
         * Constructs a new CMsgSerializedSOCache.
         * @exports CMsgSerializedSOCache
         * @classdesc Represents a CMsgSerializedSOCache.
         * @implements ICMsgSerializedSOCache
         * @constructor
         * @param {ICMsgSerializedSOCache=} [properties] Properties to set
         */
        function CMsgSerializedSOCache(properties) {
            this.caches = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSerializedSOCache file_version.
         * @member {number} file_version
         * @memberof CMsgSerializedSOCache
         * @instance
         */
        CMsgSerializedSOCache.prototype.file_version = 0;
    
        /**
         * CMsgSerializedSOCache caches.
         * @member {Array.<CMsgSerializedSOCache.ICache>} caches
         * @memberof CMsgSerializedSOCache
         * @instance
         */
        CMsgSerializedSOCache.prototype.caches = $util.emptyArray;
    
        /**
         * CMsgSerializedSOCache gc_socache_file_version.
         * @member {number} gc_socache_file_version
         * @memberof CMsgSerializedSOCache
         * @instance
         */
        CMsgSerializedSOCache.prototype.gc_socache_file_version = 0;
    
        /**
         * Creates a new CMsgSerializedSOCache instance using the specified properties.
         * @function create
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {ICMsgSerializedSOCache=} [properties] Properties to set
         * @returns {CMsgSerializedSOCache} CMsgSerializedSOCache instance
         */
        CMsgSerializedSOCache.create = function create(properties) {
            return new CMsgSerializedSOCache(properties);
        };
    
        /**
         * Encodes the specified CMsgSerializedSOCache message. Does not implicitly {@link CMsgSerializedSOCache.verify|verify} messages.
         * @function encode
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {ICMsgSerializedSOCache} message CMsgSerializedSOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSerializedSOCache.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.file_version != null && Object.hasOwnProperty.call(message, "file_version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.file_version);
            if (message.caches != null && message.caches.length)
                for (var i = 0; i < message.caches.length; ++i)
                    $root.CMsgSerializedSOCache.Cache.encode(message.caches[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            if (message.gc_socache_file_version != null && Object.hasOwnProperty.call(message, "gc_socache_file_version"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.gc_socache_file_version);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSerializedSOCache message, length delimited. Does not implicitly {@link CMsgSerializedSOCache.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {ICMsgSerializedSOCache} message CMsgSerializedSOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSerializedSOCache.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSerializedSOCache message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSerializedSOCache} CMsgSerializedSOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSerializedSOCache.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSerializedSOCache();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.file_version = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.caches && message.caches.length))
                            message.caches = [];
                        message.caches.push($root.CMsgSerializedSOCache.Cache.decode(reader, reader.uint32()));
                        break;
                    }
                case 3: {
                        message.gc_socache_file_version = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSerializedSOCache message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSerializedSOCache} CMsgSerializedSOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSerializedSOCache.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSerializedSOCache message.
         * @function verify
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSerializedSOCache.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.file_version != null && message.hasOwnProperty("file_version"))
                if (!$util.isInteger(message.file_version))
                    return "file_version: integer expected";
            if (message.caches != null && message.hasOwnProperty("caches")) {
                if (!Array.isArray(message.caches))
                    return "caches: array expected";
                for (var i = 0; i < message.caches.length; ++i) {
                    var error = $root.CMsgSerializedSOCache.Cache.verify(message.caches[i]);
                    if (error)
                        return "caches." + error;
                }
            }
            if (message.gc_socache_file_version != null && message.hasOwnProperty("gc_socache_file_version"))
                if (!$util.isInteger(message.gc_socache_file_version))
                    return "gc_socache_file_version: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgSerializedSOCache message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSerializedSOCache} CMsgSerializedSOCache
         */
        CMsgSerializedSOCache.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSerializedSOCache)
                return object;
            var message = new $root.CMsgSerializedSOCache();
            if (object.file_version != null)
                message.file_version = object.file_version >>> 0;
            if (object.caches) {
                if (!Array.isArray(object.caches))
                    throw TypeError(".CMsgSerializedSOCache.caches: array expected");
                message.caches = [];
                for (var i = 0; i < object.caches.length; ++i) {
                    if (typeof object.caches[i] !== "object")
                        throw TypeError(".CMsgSerializedSOCache.caches: object expected");
                    message.caches[i] = $root.CMsgSerializedSOCache.Cache.fromObject(object.caches[i]);
                }
            }
            if (object.gc_socache_file_version != null)
                message.gc_socache_file_version = object.gc_socache_file_version >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSerializedSOCache message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {CMsgSerializedSOCache} message CMsgSerializedSOCache
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSerializedSOCache.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.caches = [];
            if (options.defaults) {
                object.file_version = 0;
                object.gc_socache_file_version = 0;
            }
            if (message.file_version != null && message.hasOwnProperty("file_version"))
                object.file_version = message.file_version;
            if (message.caches && message.caches.length) {
                object.caches = [];
                for (var j = 0; j < message.caches.length; ++j)
                    object.caches[j] = $root.CMsgSerializedSOCache.Cache.toObject(message.caches[j], options);
            }
            if (message.gc_socache_file_version != null && message.hasOwnProperty("gc_socache_file_version"))
                object.gc_socache_file_version = message.gc_socache_file_version;
            return object;
        };
    
        /**
         * Converts this CMsgSerializedSOCache to JSON.
         * @function toJSON
         * @memberof CMsgSerializedSOCache
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSerializedSOCache.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSerializedSOCache
         * @function getTypeUrl
         * @memberof CMsgSerializedSOCache
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSerializedSOCache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSerializedSOCache";
        };
    
        CMsgSerializedSOCache.TypeCache = (function() {
    
            /**
             * Properties of a TypeCache.
             * @memberof CMsgSerializedSOCache
             * @interface ITypeCache
             * @property {number|null} [type] TypeCache type
             * @property {Array.<Uint8Array>|null} [objects] TypeCache objects
             * @property {number|null} [service_id] TypeCache service_id
             */
    
            /**
             * Constructs a new TypeCache.
             * @memberof CMsgSerializedSOCache
             * @classdesc Represents a TypeCache.
             * @implements ITypeCache
             * @constructor
             * @param {CMsgSerializedSOCache.ITypeCache=} [properties] Properties to set
             */
            function TypeCache(properties) {
                this.objects = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * TypeCache type.
             * @member {number} type
             * @memberof CMsgSerializedSOCache.TypeCache
             * @instance
             */
            TypeCache.prototype.type = 0;
    
            /**
             * TypeCache objects.
             * @member {Array.<Uint8Array>} objects
             * @memberof CMsgSerializedSOCache.TypeCache
             * @instance
             */
            TypeCache.prototype.objects = $util.emptyArray;
    
            /**
             * TypeCache service_id.
             * @member {number} service_id
             * @memberof CMsgSerializedSOCache.TypeCache
             * @instance
             */
            TypeCache.prototype.service_id = 0;
    
            /**
             * Creates a new TypeCache instance using the specified properties.
             * @function create
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {CMsgSerializedSOCache.ITypeCache=} [properties] Properties to set
             * @returns {CMsgSerializedSOCache.TypeCache} TypeCache instance
             */
            TypeCache.create = function create(properties) {
                return new TypeCache(properties);
            };
    
            /**
             * Encodes the specified TypeCache message. Does not implicitly {@link CMsgSerializedSOCache.TypeCache.verify|verify} messages.
             * @function encode
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {CMsgSerializedSOCache.ITypeCache} message TypeCache message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TypeCache.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.type);
                if (message.objects != null && message.objects.length)
                    for (var i = 0; i < message.objects.length; ++i)
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.objects[i]);
                if (message.service_id != null && Object.hasOwnProperty.call(message, "service_id"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.service_id);
                return writer;
            };
    
            /**
             * Encodes the specified TypeCache message, length delimited. Does not implicitly {@link CMsgSerializedSOCache.TypeCache.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {CMsgSerializedSOCache.ITypeCache} message TypeCache message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TypeCache.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a TypeCache message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSerializedSOCache.TypeCache} TypeCache
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TypeCache.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSerializedSOCache.TypeCache();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.type = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.objects && message.objects.length))
                                message.objects = [];
                            message.objects.push(reader.bytes());
                            break;
                        }
                    case 3: {
                            message.service_id = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a TypeCache message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSerializedSOCache.TypeCache} TypeCache
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TypeCache.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a TypeCache message.
             * @function verify
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TypeCache.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type != null && message.hasOwnProperty("type"))
                    if (!$util.isInteger(message.type))
                        return "type: integer expected";
                if (message.objects != null && message.hasOwnProperty("objects")) {
                    if (!Array.isArray(message.objects))
                        return "objects: array expected";
                    for (var i = 0; i < message.objects.length; ++i)
                        if (!(message.objects[i] && typeof message.objects[i].length === "number" || $util.isString(message.objects[i])))
                            return "objects: buffer[] expected";
                }
                if (message.service_id != null && message.hasOwnProperty("service_id"))
                    if (!$util.isInteger(message.service_id))
                        return "service_id: integer expected";
                return null;
            };
    
            /**
             * Creates a TypeCache message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSerializedSOCache.TypeCache} TypeCache
             */
            TypeCache.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSerializedSOCache.TypeCache)
                    return object;
                var message = new $root.CMsgSerializedSOCache.TypeCache();
                if (object.type != null)
                    message.type = object.type >>> 0;
                if (object.objects) {
                    if (!Array.isArray(object.objects))
                        throw TypeError(".CMsgSerializedSOCache.TypeCache.objects: array expected");
                    message.objects = [];
                    for (var i = 0; i < object.objects.length; ++i)
                        if (typeof object.objects[i] === "string")
                            $util.base64.decode(object.objects[i], message.objects[i] = $util.newBuffer($util.base64.length(object.objects[i])), 0);
                        else if (object.objects[i].length >= 0)
                            message.objects[i] = object.objects[i];
                }
                if (object.service_id != null)
                    message.service_id = object.service_id >>> 0;
                return message;
            };
    
            /**
             * Creates a plain object from a TypeCache message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {CMsgSerializedSOCache.TypeCache} message TypeCache
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TypeCache.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.objects = [];
                if (options.defaults) {
                    object.type = 0;
                    object.service_id = 0;
                }
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = message.type;
                if (message.objects && message.objects.length) {
                    object.objects = [];
                    for (var j = 0; j < message.objects.length; ++j)
                        object.objects[j] = options.bytes === String ? $util.base64.encode(message.objects[j], 0, message.objects[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.objects[j]) : message.objects[j];
                }
                if (message.service_id != null && message.hasOwnProperty("service_id"))
                    object.service_id = message.service_id;
                return object;
            };
    
            /**
             * Converts this TypeCache to JSON.
             * @function toJSON
             * @memberof CMsgSerializedSOCache.TypeCache
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TypeCache.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for TypeCache
             * @function getTypeUrl
             * @memberof CMsgSerializedSOCache.TypeCache
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TypeCache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSerializedSOCache.TypeCache";
            };
    
            return TypeCache;
        })();
    
        CMsgSerializedSOCache.Cache = (function() {
    
            /**
             * Properties of a Cache.
             * @memberof CMsgSerializedSOCache
             * @interface ICache
             * @property {number|null} [type] Cache type
             * @property {number|Long|null} [id] Cache id
             * @property {Array.<CMsgSerializedSOCache.Cache.IVersion>|null} [versions] Cache versions
             * @property {Array.<CMsgSerializedSOCache.ITypeCache>|null} [type_caches] Cache type_caches
             */
    
            /**
             * Constructs a new Cache.
             * @memberof CMsgSerializedSOCache
             * @classdesc Represents a Cache.
             * @implements ICache
             * @constructor
             * @param {CMsgSerializedSOCache.ICache=} [properties] Properties to set
             */
            function Cache(properties) {
                this.versions = [];
                this.type_caches = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * Cache type.
             * @member {number} type
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             */
            Cache.prototype.type = 0;
    
            /**
             * Cache id.
             * @member {number|Long} id
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             */
            Cache.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Cache versions.
             * @member {Array.<CMsgSerializedSOCache.Cache.IVersion>} versions
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             */
            Cache.prototype.versions = $util.emptyArray;
    
            /**
             * Cache type_caches.
             * @member {Array.<CMsgSerializedSOCache.ITypeCache>} type_caches
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             */
            Cache.prototype.type_caches = $util.emptyArray;
    
            /**
             * Creates a new Cache instance using the specified properties.
             * @function create
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {CMsgSerializedSOCache.ICache=} [properties] Properties to set
             * @returns {CMsgSerializedSOCache.Cache} Cache instance
             */
            Cache.create = function create(properties) {
                return new Cache(properties);
            };
    
            /**
             * Encodes the specified Cache message. Does not implicitly {@link CMsgSerializedSOCache.Cache.verify|verify} messages.
             * @function encode
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {CMsgSerializedSOCache.ICache} message Cache message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Cache.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.type);
                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.id);
                if (message.versions != null && message.versions.length)
                    for (var i = 0; i < message.versions.length; ++i)
                        $root.CMsgSerializedSOCache.Cache.Version.encode(message.versions[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.type_caches != null && message.type_caches.length)
                    for (var i = 0; i < message.type_caches.length; ++i)
                        $root.CMsgSerializedSOCache.TypeCache.encode(message.type_caches[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };
    
            /**
             * Encodes the specified Cache message, length delimited. Does not implicitly {@link CMsgSerializedSOCache.Cache.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {CMsgSerializedSOCache.ICache} message Cache message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Cache.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes a Cache message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSerializedSOCache.Cache} Cache
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Cache.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSerializedSOCache.Cache();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.type = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.id = reader.uint64();
                            break;
                        }
                    case 3: {
                            if (!(message.versions && message.versions.length))
                                message.versions = [];
                            message.versions.push($root.CMsgSerializedSOCache.Cache.Version.decode(reader, reader.uint32()));
                            break;
                        }
                    case 4: {
                            if (!(message.type_caches && message.type_caches.length))
                                message.type_caches = [];
                            message.type_caches.push($root.CMsgSerializedSOCache.TypeCache.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes a Cache message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSerializedSOCache.Cache} Cache
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Cache.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies a Cache message.
             * @function verify
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Cache.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type != null && message.hasOwnProperty("type"))
                    if (!$util.isInteger(message.type))
                        return "type: integer expected";
                if (message.id != null && message.hasOwnProperty("id"))
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                if (message.versions != null && message.hasOwnProperty("versions")) {
                    if (!Array.isArray(message.versions))
                        return "versions: array expected";
                    for (var i = 0; i < message.versions.length; ++i) {
                        var error = $root.CMsgSerializedSOCache.Cache.Version.verify(message.versions[i]);
                        if (error)
                            return "versions." + error;
                    }
                }
                if (message.type_caches != null && message.hasOwnProperty("type_caches")) {
                    if (!Array.isArray(message.type_caches))
                        return "type_caches: array expected";
                    for (var i = 0; i < message.type_caches.length; ++i) {
                        var error = $root.CMsgSerializedSOCache.TypeCache.verify(message.type_caches[i]);
                        if (error)
                            return "type_caches." + error;
                    }
                }
                return null;
            };
    
            /**
             * Creates a Cache message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSerializedSOCache.Cache} Cache
             */
            Cache.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSerializedSOCache.Cache)
                    return object;
                var message = new $root.CMsgSerializedSOCache.Cache();
                if (object.type != null)
                    message.type = object.type >>> 0;
                if (object.id != null)
                    if ($util.Long)
                        (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                    else if (typeof object.id === "string")
                        message.id = parseInt(object.id, 10);
                    else if (typeof object.id === "number")
                        message.id = object.id;
                    else if (typeof object.id === "object")
                        message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
                if (object.versions) {
                    if (!Array.isArray(object.versions))
                        throw TypeError(".CMsgSerializedSOCache.Cache.versions: array expected");
                    message.versions = [];
                    for (var i = 0; i < object.versions.length; ++i) {
                        if (typeof object.versions[i] !== "object")
                            throw TypeError(".CMsgSerializedSOCache.Cache.versions: object expected");
                        message.versions[i] = $root.CMsgSerializedSOCache.Cache.Version.fromObject(object.versions[i]);
                    }
                }
                if (object.type_caches) {
                    if (!Array.isArray(object.type_caches))
                        throw TypeError(".CMsgSerializedSOCache.Cache.type_caches: array expected");
                    message.type_caches = [];
                    for (var i = 0; i < object.type_caches.length; ++i) {
                        if (typeof object.type_caches[i] !== "object")
                            throw TypeError(".CMsgSerializedSOCache.Cache.type_caches: object expected");
                        message.type_caches[i] = $root.CMsgSerializedSOCache.TypeCache.fromObject(object.type_caches[i]);
                    }
                }
                return message;
            };
    
            /**
             * Creates a plain object from a Cache message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {CMsgSerializedSOCache.Cache} message Cache
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Cache.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults) {
                    object.versions = [];
                    object.type_caches = [];
                }
                if (options.defaults) {
                    object.type = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.id = options.longs === String ? "0" : 0;
                }
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = message.type;
                if (message.id != null && message.hasOwnProperty("id"))
                    if (typeof message.id === "number")
                        object.id = options.longs === String ? String(message.id) : message.id;
                    else
                        object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
                if (message.versions && message.versions.length) {
                    object.versions = [];
                    for (var j = 0; j < message.versions.length; ++j)
                        object.versions[j] = $root.CMsgSerializedSOCache.Cache.Version.toObject(message.versions[j], options);
                }
                if (message.type_caches && message.type_caches.length) {
                    object.type_caches = [];
                    for (var j = 0; j < message.type_caches.length; ++j)
                        object.type_caches[j] = $root.CMsgSerializedSOCache.TypeCache.toObject(message.type_caches[j], options);
                }
                return object;
            };
    
            /**
             * Converts this Cache to JSON.
             * @function toJSON
             * @memberof CMsgSerializedSOCache.Cache
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Cache.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for Cache
             * @function getTypeUrl
             * @memberof CMsgSerializedSOCache.Cache
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Cache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSerializedSOCache.Cache";
            };
    
            Cache.Version = (function() {
    
                /**
                 * Properties of a Version.
                 * @memberof CMsgSerializedSOCache.Cache
                 * @interface IVersion
                 * @property {number|null} [service] Version service
                 * @property {number|Long|null} [version] Version version
                 */
    
                /**
                 * Constructs a new Version.
                 * @memberof CMsgSerializedSOCache.Cache
                 * @classdesc Represents a Version.
                 * @implements IVersion
                 * @constructor
                 * @param {CMsgSerializedSOCache.Cache.IVersion=} [properties] Properties to set
                 */
                function Version(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Version service.
                 * @member {number} service
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @instance
                 */
                Version.prototype.service = 0;
    
                /**
                 * Version version.
                 * @member {number|Long} version
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @instance
                 */
                Version.prototype.version = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new Version instance using the specified properties.
                 * @function create
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {CMsgSerializedSOCache.Cache.IVersion=} [properties] Properties to set
                 * @returns {CMsgSerializedSOCache.Cache.Version} Version instance
                 */
                Version.create = function create(properties) {
                    return new Version(properties);
                };
    
                /**
                 * Encodes the specified Version message. Does not implicitly {@link CMsgSerializedSOCache.Cache.Version.verify|verify} messages.
                 * @function encode
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {CMsgSerializedSOCache.Cache.IVersion} message Version message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Version.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.service);
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.version);
                    return writer;
                };
    
                /**
                 * Encodes the specified Version message, length delimited. Does not implicitly {@link CMsgSerializedSOCache.Cache.Version.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {CMsgSerializedSOCache.Cache.IVersion} message Version message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Version.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Version message from the specified reader or buffer.
                 * @function decode
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {CMsgSerializedSOCache.Cache.Version} Version
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Version.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSerializedSOCache.Cache.Version();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.service = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.version = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Version message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {CMsgSerializedSOCache.Cache.Version} Version
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Version.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Version message.
                 * @function verify
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Version.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.service != null && message.hasOwnProperty("service"))
                        if (!$util.isInteger(message.service))
                            return "service: integer expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))
                            return "version: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a Version message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {CMsgSerializedSOCache.Cache.Version} Version
                 */
                Version.fromObject = function fromObject(object) {
                    if (object instanceof $root.CMsgSerializedSOCache.Cache.Version)
                        return object;
                    var message = new $root.CMsgSerializedSOCache.Cache.Version();
                    if (object.service != null)
                        message.service = object.service >>> 0;
                    if (object.version != null)
                        if ($util.Long)
                            (message.version = $util.Long.fromValue(object.version)).unsigned = true;
                        else if (typeof object.version === "string")
                            message.version = parseInt(object.version, 10);
                        else if (typeof object.version === "number")
                            message.version = object.version;
                        else if (typeof object.version === "object")
                            message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Version message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {CMsgSerializedSOCache.Cache.Version} message Version
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Version.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.service = 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.version = options.longs === String ? "0" : 0;
                    }
                    if (message.service != null && message.hasOwnProperty("service"))
                        object.service = message.service;
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (typeof message.version === "number")
                            object.version = options.longs === String ? String(message.version) : message.version;
                        else
                            object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber(true) : message.version;
                    return object;
                };
    
                /**
                 * Converts this Version to JSON.
                 * @function toJSON
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Version.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Version
                 * @function getTypeUrl
                 * @memberof CMsgSerializedSOCache.Cache.Version
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Version.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/CMsgSerializedSOCache.Cache.Version";
                };
    
                return Version;
            })();
    
            return Cache;
        })();
    
        return CMsgSerializedSOCache;
    })();
    
    /**
     * GCProtoBufMsgSrc enum.
     * @exports GCProtoBufMsgSrc
     * @enum {number}
     * @property {number} GCProtoBufMsgSrc_Unspecified=0 GCProtoBufMsgSrc_Unspecified value
     * @property {number} GCProtoBufMsgSrc_FromSystem=1 GCProtoBufMsgSrc_FromSystem value
     * @property {number} GCProtoBufMsgSrc_FromSteamID=2 GCProtoBufMsgSrc_FromSteamID value
     * @property {number} GCProtoBufMsgSrc_FromGC=3 GCProtoBufMsgSrc_FromGC value
     * @property {number} GCProtoBufMsgSrc_ReplySystem=4 GCProtoBufMsgSrc_ReplySystem value
     */
    $root.GCProtoBufMsgSrc = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GCProtoBufMsgSrc_Unspecified"] = 0;
        values[valuesById[1] = "GCProtoBufMsgSrc_FromSystem"] = 1;
        values[valuesById[2] = "GCProtoBufMsgSrc_FromSteamID"] = 2;
        values[valuesById[3] = "GCProtoBufMsgSrc_FromGC"] = 3;
        values[valuesById[4] = "GCProtoBufMsgSrc_ReplySystem"] = 4;
        return values;
    })();
    
    $root.CMsgProtoBufHeader = (function() {
    
        /**
         * Properties of a CMsgProtoBufHeader.
         * @exports ICMsgProtoBufHeader
         * @interface ICMsgProtoBufHeader
         * @property {number|Long|null} [client_steam_id] CMsgProtoBufHeader client_steam_id
         * @property {number|null} [client_session_id] CMsgProtoBufHeader client_session_id
         * @property {number|null} [source_app_id] CMsgProtoBufHeader source_app_id
         * @property {number|Long|null} [job_id_source] CMsgProtoBufHeader job_id_source
         * @property {number|Long|null} [job_id_target] CMsgProtoBufHeader job_id_target
         * @property {string|null} [target_job_name] CMsgProtoBufHeader target_job_name
         * @property {number|null} [eresult] CMsgProtoBufHeader eresult
         * @property {string|null} [error_message] CMsgProtoBufHeader error_message
         * @property {number|null} [ip] CMsgProtoBufHeader ip
         * @property {GCProtoBufMsgSrc|null} [gc_msg_src] CMsgProtoBufHeader gc_msg_src
         * @property {number|null} [gc_dir_index_source] CMsgProtoBufHeader gc_dir_index_source
         */
    
        /**
         * Constructs a new CMsgProtoBufHeader.
         * @exports CMsgProtoBufHeader
         * @classdesc Represents a CMsgProtoBufHeader.
         * @implements ICMsgProtoBufHeader
         * @constructor
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         */
        function CMsgProtoBufHeader(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtoBufHeader client_steam_id.
         * @member {number|Long} client_steam_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.client_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgProtoBufHeader client_session_id.
         * @member {number} client_session_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.client_session_id = 0;
    
        /**
         * CMsgProtoBufHeader source_app_id.
         * @member {number} source_app_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.source_app_id = 0;
    
        /**
         * CMsgProtoBufHeader job_id_source.
         * @member {number|Long} job_id_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.job_id_source = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader job_id_target.
         * @member {number|Long} job_id_target
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.job_id_target = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader target_job_name.
         * @member {string} target_job_name
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.target_job_name = "";
    
        /**
         * CMsgProtoBufHeader eresult.
         * @member {number} eresult
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.eresult = 2;
    
        /**
         * CMsgProtoBufHeader error_message.
         * @member {string} error_message
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.error_message = "";
    
        /**
         * CMsgProtoBufHeader ip.
         * @member {number} ip
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip = 0;
    
        /**
         * CMsgProtoBufHeader gc_msg_src.
         * @member {GCProtoBufMsgSrc} gc_msg_src
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.gc_msg_src = 0;
    
        /**
         * CMsgProtoBufHeader gc_dir_index_source.
         * @member {number} gc_dir_index_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.gc_dir_index_source = 0;
    
        /**
         * Creates a new CMsgProtoBufHeader instance using the specified properties.
         * @function create
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader instance
         */
        CMsgProtoBufHeader.create = function create(properties) {
            return new CMsgProtoBufHeader(properties);
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.client_steam_id != null && Object.hasOwnProperty.call(message, "client_steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.client_steam_id);
            if (message.client_session_id != null && Object.hasOwnProperty.call(message, "client_session_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.client_session_id);
            if (message.source_app_id != null && Object.hasOwnProperty.call(message, "source_app_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.source_app_id);
            if (message.job_id_source != null && Object.hasOwnProperty.call(message, "job_id_source"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.job_id_source);
            if (message.job_id_target != null && Object.hasOwnProperty.call(message, "job_id_target"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.job_id_target);
            if (message.target_job_name != null && Object.hasOwnProperty.call(message, "target_job_name"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.target_job_name);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.eresult);
            if (message.error_message != null && Object.hasOwnProperty.call(message, "error_message"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.error_message);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.ip);
            if (message.gc_msg_src != null && Object.hasOwnProperty.call(message, "gc_msg_src"))
                writer.uint32(/* id 200, wireType 0 =*/1600).int32(message.gc_msg_src);
            if (message.gc_dir_index_source != null && Object.hasOwnProperty.call(message, "gc_dir_index_source"))
                writer.uint32(/* id 201, wireType 0 =*/1608).uint32(message.gc_dir_index_source);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message, length delimited. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtoBufHeader();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.client_steam_id = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.client_session_id = reader.int32();
                        break;
                    }
                case 3: {
                        message.source_app_id = reader.uint32();
                        break;
                    }
                case 10: {
                        message.job_id_source = reader.fixed64();
                        break;
                    }
                case 11: {
                        message.job_id_target = reader.fixed64();
                        break;
                    }
                case 12: {
                        message.target_job_name = reader.string();
                        break;
                    }
                case 13: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 14: {
                        message.error_message = reader.string();
                        break;
                    }
                case 15: {
                        message.ip = reader.uint32();
                        break;
                    }
                case 200: {
                        message.gc_msg_src = reader.int32();
                        break;
                    }
                case 201: {
                        message.gc_dir_index_source = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtoBufHeader message.
         * @function verify
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtoBufHeader.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.client_steam_id != null && message.hasOwnProperty("client_steam_id"))
                if (!$util.isInteger(message.client_steam_id) && !(message.client_steam_id && $util.isInteger(message.client_steam_id.low) && $util.isInteger(message.client_steam_id.high)))
                    return "client_steam_id: integer|Long expected";
            if (message.client_session_id != null && message.hasOwnProperty("client_session_id"))
                if (!$util.isInteger(message.client_session_id))
                    return "client_session_id: integer expected";
            if (message.source_app_id != null && message.hasOwnProperty("source_app_id"))
                if (!$util.isInteger(message.source_app_id))
                    return "source_app_id: integer expected";
            if (message.job_id_source != null && message.hasOwnProperty("job_id_source"))
                if (!$util.isInteger(message.job_id_source) && !(message.job_id_source && $util.isInteger(message.job_id_source.low) && $util.isInteger(message.job_id_source.high)))
                    return "job_id_source: integer|Long expected";
            if (message.job_id_target != null && message.hasOwnProperty("job_id_target"))
                if (!$util.isInteger(message.job_id_target) && !(message.job_id_target && $util.isInteger(message.job_id_target.low) && $util.isInteger(message.job_id_target.high)))
                    return "job_id_target: integer|Long expected";
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                if (!$util.isString(message.target_job_name))
                    return "target_job_name: string expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                if (!$util.isString(message.error_message))
                    return "error_message: string expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            if (message.gc_msg_src != null && message.hasOwnProperty("gc_msg_src"))
                switch (message.gc_msg_src) {
                default:
                    return "gc_msg_src: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.gc_dir_index_source != null && message.hasOwnProperty("gc_dir_index_source"))
                if (!$util.isInteger(message.gc_dir_index_source))
                    return "gc_dir_index_source: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgProtoBufHeader message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         */
        CMsgProtoBufHeader.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtoBufHeader)
                return object;
            var message = new $root.CMsgProtoBufHeader();
            if (object.client_steam_id != null)
                if ($util.Long)
                    (message.client_steam_id = $util.Long.fromValue(object.client_steam_id)).unsigned = false;
                else if (typeof object.client_steam_id === "string")
                    message.client_steam_id = parseInt(object.client_steam_id, 10);
                else if (typeof object.client_steam_id === "number")
                    message.client_steam_id = object.client_steam_id;
                else if (typeof object.client_steam_id === "object")
                    message.client_steam_id = new $util.LongBits(object.client_steam_id.low >>> 0, object.client_steam_id.high >>> 0).toNumber();
            if (object.client_session_id != null)
                message.client_session_id = object.client_session_id | 0;
            if (object.source_app_id != null)
                message.source_app_id = object.source_app_id >>> 0;
            if (object.job_id_source != null)
                if ($util.Long)
                    (message.job_id_source = $util.Long.fromValue(object.job_id_source)).unsigned = false;
                else if (typeof object.job_id_source === "string")
                    message.job_id_source = parseInt(object.job_id_source, 10);
                else if (typeof object.job_id_source === "number")
                    message.job_id_source = object.job_id_source;
                else if (typeof object.job_id_source === "object")
                    message.job_id_source = new $util.LongBits(object.job_id_source.low >>> 0, object.job_id_source.high >>> 0).toNumber();
            if (object.job_id_target != null)
                if ($util.Long)
                    (message.job_id_target = $util.Long.fromValue(object.job_id_target)).unsigned = false;
                else if (typeof object.job_id_target === "string")
                    message.job_id_target = parseInt(object.job_id_target, 10);
                else if (typeof object.job_id_target === "number")
                    message.job_id_target = object.job_id_target;
                else if (typeof object.job_id_target === "object")
                    message.job_id_target = new $util.LongBits(object.job_id_target.low >>> 0, object.job_id_target.high >>> 0).toNumber();
            if (object.target_job_name != null)
                message.target_job_name = String(object.target_job_name);
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.error_message != null)
                message.error_message = String(object.error_message);
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            switch (object.gc_msg_src) {
            default:
                if (typeof object.gc_msg_src === "number") {
                    message.gc_msg_src = object.gc_msg_src;
                    break;
                }
                break;
            case "GCProtoBufMsgSrc_Unspecified":
            case 0:
                message.gc_msg_src = 0;
                break;
            case "GCProtoBufMsgSrc_FromSystem":
            case 1:
                message.gc_msg_src = 1;
                break;
            case "GCProtoBufMsgSrc_FromSteamID":
            case 2:
                message.gc_msg_src = 2;
                break;
            case "GCProtoBufMsgSrc_FromGC":
            case 3:
                message.gc_msg_src = 3;
                break;
            case "GCProtoBufMsgSrc_ReplySystem":
            case 4:
                message.gc_msg_src = 4;
                break;
            }
            if (object.gc_dir_index_source != null)
                message.gc_dir_index_source = object.gc_dir_index_source >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtoBufHeader message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {CMsgProtoBufHeader} message CMsgProtoBufHeader
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtoBufHeader.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.client_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_steam_id = options.longs === String ? "0" : 0;
                object.client_session_id = 0;
                object.source_app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.job_id_source = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.job_id_source = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.job_id_target = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.job_id_target = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                object.target_job_name = "";
                object.eresult = 2;
                object.error_message = "";
                object.ip = 0;
                object.gc_msg_src = options.enums === String ? "GCProtoBufMsgSrc_Unspecified" : 0;
                object.gc_dir_index_source = 0;
            }
            if (message.client_steam_id != null && message.hasOwnProperty("client_steam_id"))
                if (typeof message.client_steam_id === "number")
                    object.client_steam_id = options.longs === String ? String(message.client_steam_id) : message.client_steam_id;
                else
                    object.client_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.client_steam_id) : options.longs === Number ? new $util.LongBits(message.client_steam_id.low >>> 0, message.client_steam_id.high >>> 0).toNumber() : message.client_steam_id;
            if (message.client_session_id != null && message.hasOwnProperty("client_session_id"))
                object.client_session_id = message.client_session_id;
            if (message.source_app_id != null && message.hasOwnProperty("source_app_id"))
                object.source_app_id = message.source_app_id;
            if (message.job_id_source != null && message.hasOwnProperty("job_id_source"))
                if (typeof message.job_id_source === "number")
                    object.job_id_source = options.longs === String ? String(message.job_id_source) : message.job_id_source;
                else
                    object.job_id_source = options.longs === String ? $util.Long.prototype.toString.call(message.job_id_source) : options.longs === Number ? new $util.LongBits(message.job_id_source.low >>> 0, message.job_id_source.high >>> 0).toNumber() : message.job_id_source;
            if (message.job_id_target != null && message.hasOwnProperty("job_id_target"))
                if (typeof message.job_id_target === "number")
                    object.job_id_target = options.longs === String ? String(message.job_id_target) : message.job_id_target;
                else
                    object.job_id_target = options.longs === String ? $util.Long.prototype.toString.call(message.job_id_target) : options.longs === Number ? new $util.LongBits(message.job_id_target.low >>> 0, message.job_id_target.high >>> 0).toNumber() : message.job_id_target;
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                object.target_job_name = message.target_job_name;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                object.error_message = message.error_message;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            if (message.gc_msg_src != null && message.hasOwnProperty("gc_msg_src"))
                object.gc_msg_src = options.enums === String ? $root.GCProtoBufMsgSrc[message.gc_msg_src] === undefined ? message.gc_msg_src : $root.GCProtoBufMsgSrc[message.gc_msg_src] : message.gc_msg_src;
            if (message.gc_dir_index_source != null && message.hasOwnProperty("gc_dir_index_source"))
                object.gc_dir_index_source = message.gc_dir_index_source;
            return object;
        };
    
        /**
         * Converts this CMsgProtoBufHeader to JSON.
         * @function toJSON
         * @memberof CMsgProtoBufHeader
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtoBufHeader.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgProtoBufHeader
         * @function getTypeUrl
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgProtoBufHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgProtoBufHeader";
        };
    
        return CMsgProtoBufHeader;
    })();
    
    $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request = (function() {
    
        /**
         * Properties of a CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @exports ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @interface ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @property {number|null} [appid] CChinaAgreementSessions_StartAgreementSessionInGame_Request appid
         * @property {number|Long|null} [steamid] CChinaAgreementSessions_StartAgreementSessionInGame_Request steamid
         * @property {string|null} [client_ipaddress] CChinaAgreementSessions_StartAgreementSessionInGame_Request client_ipaddress
         */
    
        /**
         * Constructs a new CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @exports CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @classdesc Represents a CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @implements ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @constructor
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request=} [properties] Properties to set
         */
        function CChinaAgreementSessions_StartAgreementSessionInGame_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request appid.
         * @member {number} appid
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.appid = 0;
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request client_ipaddress.
         * @member {string} client_ipaddress
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.client_ipaddress = "";
    
        /**
         * Creates a new CChinaAgreementSessions_StartAgreementSessionInGame_Request instance using the specified properties.
         * @function create
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request=} [properties] Properties to set
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.create = function create(properties) {
            return new CChinaAgreementSessions_StartAgreementSessionInGame_Request(properties);
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Request message. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify|verify} messages.
         * @function encode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.client_ipaddress != null && Object.hasOwnProperty.call(message, "client_ipaddress"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.client_ipaddress);
            return writer;
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Request message, length delimited. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.client_ipaddress = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChinaAgreementSessions_StartAgreementSessionInGame_Request message.
         * @function verify
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.client_ipaddress != null && message.hasOwnProperty("client_ipaddress"))
                if (!$util.isString(message.client_ipaddress))
                    return "client_ipaddress: string expected";
            return null;
        };
    
        /**
         * Creates a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request)
                return object;
            var message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.client_ipaddress != null)
                message.client_ipaddress = String(object.client_ipaddress);
            return message;
        };
    
        /**
         * Creates a plain object from a CChinaAgreementSessions_StartAgreementSessionInGame_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {CChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.client_ipaddress = "";
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.client_ipaddress != null && message.hasOwnProperty("client_ipaddress"))
                object.client_ipaddress = message.client_ipaddress;
            return object;
        };
    
        /**
         * Converts this CChinaAgreementSessions_StartAgreementSessionInGame_Request to JSON.
         * @function toJSON
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @function getTypeUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CChinaAgreementSessions_StartAgreementSessionInGame_Request";
        };
    
        return CChinaAgreementSessions_StartAgreementSessionInGame_Request;
    })();
    
    $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response = (function() {
    
        /**
         * Properties of a CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @exports ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @interface ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @property {string|null} [agreement_url] CChinaAgreementSessions_StartAgreementSessionInGame_Response agreement_url
         */
    
        /**
         * Constructs a new CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @exports CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @classdesc Represents a CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @implements ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @constructor
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response=} [properties] Properties to set
         */
        function CChinaAgreementSessions_StartAgreementSessionInGame_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Response agreement_url.
         * @member {string} agreement_url
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.prototype.agreement_url = "";
    
        /**
         * Creates a new CChinaAgreementSessions_StartAgreementSessionInGame_Response instance using the specified properties.
         * @function create
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response=} [properties] Properties to set
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.create = function create(properties) {
            return new CChinaAgreementSessions_StartAgreementSessionInGame_Response(properties);
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Response message. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify|verify} messages.
         * @function encode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.agreement_url != null && Object.hasOwnProperty.call(message, "agreement_url"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.agreement_url);
            return writer;
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Response message, length delimited. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.agreement_url = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChinaAgreementSessions_StartAgreementSessionInGame_Response message.
         * @function verify
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.agreement_url != null && message.hasOwnProperty("agreement_url"))
                if (!$util.isString(message.agreement_url))
                    return "agreement_url: string expected";
            return null;
        };
    
        /**
         * Creates a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response)
                return object;
            var message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response();
            if (object.agreement_url != null)
                message.agreement_url = String(object.agreement_url);
            return message;
        };
    
        /**
         * Creates a plain object from a CChinaAgreementSessions_StartAgreementSessionInGame_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {CChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.agreement_url = "";
            if (message.agreement_url != null && message.hasOwnProperty("agreement_url"))
                object.agreement_url = message.agreement_url;
            return object;
        };
    
        /**
         * Converts this CChinaAgreementSessions_StartAgreementSessionInGame_Response to JSON.
         * @function toJSON
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @function getTypeUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CChinaAgreementSessions_StartAgreementSessionInGame_Response";
        };
    
        return CChinaAgreementSessions_StartAgreementSessionInGame_Response;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [message_type] FileDescriptorProto message_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] FileDescriptorProto enum_type
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [source_code_info] FileDescriptorProto source_code_info
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.message_type = [];
                    this.enum_type = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto message_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} message_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.message_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto source_code_info.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} source_code_info
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.source_code_info = null;
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.message_type != null && message.message_type.length)
                        for (var i = 0; i < message.message_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.message_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.source_code_info != null && Object.hasOwnProperty.call(message, "source_code_info"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.source_code_info, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 4: {
                                if (!(message.message_type && message.message_type.length))
                                    message.message_type = [];
                                message.message_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enum_type && message.enum_type.length))
                                    message.enum_type = [];
                                message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.source_code_info = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.message_type != null && message.hasOwnProperty("message_type")) {
                        if (!Array.isArray(message.message_type))
                            return "message_type: array expected";
                        for (var i = 0; i < message.message_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.message_type[i]);
                            if (error)
                                return "message_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.source_code_info);
                        if (error)
                            return "source_code_info." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.message_type) {
                        if (!Array.isArray(object.message_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.message_type: array expected");
                        message.message_type = [];
                        for (var i = 0; i < object.message_type.length; ++i) {
                            if (typeof object.message_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.message_type: object expected");
                            message.message_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.message_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.source_code_info != null) {
                        if (typeof object.source_code_info !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.source_code_info: object expected");
                        message.source_code_info = $root.google.protobuf.SourceCodeInfo.fromObject(object.source_code_info);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.message_type = [];
                        object.enum_type = [];
                        object.service = [];
                        object.extension = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.source_code_info = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.message_type && message.message_type.length) {
                        object.message_type = [];
                        for (var j = 0; j < message.message_type.length; ++j)
                            object.message_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.message_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                        object.source_code_info = $root.google.protobuf.SourceCodeInfo.toObject(message.source_code_info, options);
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nested_type] DescriptorProto nested_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] DescriptorProto enum_type
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extension_range] DescriptorProto extension_range
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nested_type = [];
                    this.enum_type = [];
                    this.extension_range = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nested_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nested_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nested_type = $util.emptyArray;
    
                /**
                 * DescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * DescriptorProto extension_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extension_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension_range = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nested_type != null && message.nested_type.length)
                        for (var i = 0; i < message.nested_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nested_type[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extension_range != null && message.extension_range.length)
                        for (var i = 0; i < message.extension_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extension_range[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nested_type && message.nested_type.length))
                                    message.nested_type = [];
                                message.nested_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enum_type && message.enum_type.length))
                                    message.enum_type = [];
                                message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extension_range && message.extension_range.length))
                                    message.extension_range = [];
                                message.extension_range.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nested_type != null && message.hasOwnProperty("nested_type")) {
                        if (!Array.isArray(message.nested_type))
                            return "nested_type: array expected";
                        for (var i = 0; i < message.nested_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nested_type[i]);
                            if (error)
                                return "nested_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.extension_range != null && message.hasOwnProperty("extension_range")) {
                        if (!Array.isArray(message.extension_range))
                            return "extension_range: array expected";
                        for (var i = 0; i < message.extension_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extension_range[i]);
                            if (error)
                                return "extension_range." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nested_type) {
                        if (!Array.isArray(object.nested_type))
                            throw TypeError(".google.protobuf.DescriptorProto.nested_type: array expected");
                        message.nested_type = [];
                        for (var i = 0; i < object.nested_type.length; ++i) {
                            if (typeof object.nested_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nested_type: object expected");
                            message.nested_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nested_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.DescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.extension_range) {
                        if (!Array.isArray(object.extension_range))
                            throw TypeError(".google.protobuf.DescriptorProto.extension_range: array expected");
                        message.extension_range = [];
                        for (var i = 0; i < object.extension_range.length; ++i) {
                            if (typeof object.extension_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension_range: object expected");
                            message.extension_range[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extension_range[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nested_type = [];
                        object.enum_type = [];
                        object.extension_range = [];
                        object.extension = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nested_type && message.nested_type.length) {
                        object.nested_type = [];
                        for (var j = 0; j < message.nested_type.length; ++j)
                            object.nested_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.nested_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.extension_range && message.extension_range.length) {
                        object.extension_range = [];
                        for (var j = 0; j < message.extension_range.length; ++j)
                            object.extension_range[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extension_range[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [type_name] FieldDescriptorProto type_name
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [default_value] FieldDescriptorProto default_value
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto type_name.
                 * @member {string} type_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type_name = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto default_value.
                 * @member {string} default_value
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.default_value = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.type_name != null && Object.hasOwnProperty.call(message, "type_name"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.type_name);
                    if (message.default_value != null && Object.hasOwnProperty.call(message, "default_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.default_value);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.type_name = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.default_value = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        if (!$util.isString(message.type_name))
                            return "type_name: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        if (!$util.isString(message.default_value))
                            return "default_value: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.type_name != null)
                        message.type_name = String(object.type_name);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.default_value != null)
                        message.default_value = String(object.default_value);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.type_name = "";
                        object.default_value = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        object.type_name = message.type_name;
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        object.default_value = message.default_value;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.value = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [input_type] MethodDescriptorProto input_type
                 * @property {string|null} [output_type] MethodDescriptorProto output_type
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto input_type.
                 * @member {string} input_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.input_type = "";
    
                /**
                 * MethodDescriptorProto output_type.
                 * @member {string} output_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.output_type = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.input_type != null && Object.hasOwnProperty.call(message, "input_type"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.input_type);
                    if (message.output_type != null && Object.hasOwnProperty.call(message, "output_type"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.output_type);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.input_type = reader.string();
                                break;
                            }
                        case 3: {
                                message.output_type = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        if (!$util.isString(message.input_type))
                            return "input_type: string expected";
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        if (!$util.isString(message.output_type))
                            return "output_type: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.input_type != null)
                        message.input_type = String(object.input_type);
                    if (object.output_type != null)
                        message.output_type = String(object.output_type);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.input_type = "";
                        object.output_type = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        object.input_type = message.input_type;
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        object.output_type = message.output_type;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [java_package] FileOptions java_package
                 * @property {string|null} [java_outer_classname] FileOptions java_outer_classname
                 * @property {boolean|null} [java_multiple_files] FileOptions java_multiple_files
                 * @property {boolean|null} [java_generate_equals_and_hash] FileOptions java_generate_equals_and_hash
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimize_for] FileOptions optimize_for
                 * @property {boolean|null} [cc_generic_services] FileOptions cc_generic_services
                 * @property {boolean|null} [java_generic_services] FileOptions java_generic_services
                 * @property {boolean|null} [py_generic_services] FileOptions py_generic_services
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FileOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions java_package.
                 * @member {string} java_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_package = "";
    
                /**
                 * FileOptions java_outer_classname.
                 * @member {string} java_outer_classname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_outer_classname = "";
    
                /**
                 * FileOptions java_multiple_files.
                 * @member {boolean} java_multiple_files
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_multiple_files = false;
    
                /**
                 * FileOptions java_generate_equals_and_hash.
                 * @member {boolean} java_generate_equals_and_hash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generate_equals_and_hash = false;
    
                /**
                 * FileOptions optimize_for.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimize_for
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimize_for = 1;
    
                /**
                 * FileOptions cc_generic_services.
                 * @member {boolean} cc_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_generic_services = false;
    
                /**
                 * FileOptions java_generic_services.
                 * @member {boolean} java_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generic_services = false;
    
                /**
                 * FileOptions py_generic_services.
                 * @member {boolean} py_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.py_generic_services = false;
    
                /**
                 * FileOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.java_package != null && Object.hasOwnProperty.call(message, "java_package"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.java_package);
                    if (message.java_outer_classname != null && Object.hasOwnProperty.call(message, "java_outer_classname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.java_outer_classname);
                    if (message.optimize_for != null && Object.hasOwnProperty.call(message, "optimize_for"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimize_for);
                    if (message.java_multiple_files != null && Object.hasOwnProperty.call(message, "java_multiple_files"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.java_multiple_files);
                    if (message.cc_generic_services != null && Object.hasOwnProperty.call(message, "cc_generic_services"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.cc_generic_services);
                    if (message.java_generic_services != null && Object.hasOwnProperty.call(message, "java_generic_services"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.java_generic_services);
                    if (message.py_generic_services != null && Object.hasOwnProperty.call(message, "py_generic_services"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.py_generic_services);
                    if (message.java_generate_equals_and_hash != null && Object.hasOwnProperty.call(message, "java_generate_equals_and_hash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.java_generate_equals_and_hash);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.java_package = reader.string();
                                break;
                            }
                        case 8: {
                                message.java_outer_classname = reader.string();
                                break;
                            }
                        case 10: {
                                message.java_multiple_files = reader.bool();
                                break;
                            }
                        case 20: {
                                message.java_generate_equals_and_hash = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimize_for = reader.int32();
                                break;
                            }
                        case 16: {
                                message.cc_generic_services = reader.bool();
                                break;
                            }
                        case 17: {
                                message.java_generic_services = reader.bool();
                                break;
                            }
                        case 18: {
                                message.py_generic_services = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        if (!$util.isString(message.java_package))
                            return "java_package: string expected";
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        if (!$util.isString(message.java_outer_classname))
                            return "java_outer_classname: string expected";
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        if (typeof message.java_multiple_files !== "boolean")
                            return "java_multiple_files: boolean expected";
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        if (typeof message.java_generate_equals_and_hash !== "boolean")
                            return "java_generate_equals_and_hash: boolean expected";
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        switch (message.optimize_for) {
                        default:
                            return "optimize_for: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        if (typeof message.cc_generic_services !== "boolean")
                            return "cc_generic_services: boolean expected";
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        if (typeof message.java_generic_services !== "boolean")
                            return "java_generic_services: boolean expected";
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        if (typeof message.py_generic_services !== "boolean")
                            return "py_generic_services: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.java_package != null)
                        message.java_package = String(object.java_package);
                    if (object.java_outer_classname != null)
                        message.java_outer_classname = String(object.java_outer_classname);
                    if (object.java_multiple_files != null)
                        message.java_multiple_files = Boolean(object.java_multiple_files);
                    if (object.java_generate_equals_and_hash != null)
                        message.java_generate_equals_and_hash = Boolean(object.java_generate_equals_and_hash);
                    switch (object.optimize_for) {
                    default:
                        if (typeof object.optimize_for === "number") {
                            message.optimize_for = object.optimize_for;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimize_for = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimize_for = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimize_for = 3;
                        break;
                    }
                    if (object.cc_generic_services != null)
                        message.cc_generic_services = Boolean(object.cc_generic_services);
                    if (object.java_generic_services != null)
                        message.java_generic_services = Boolean(object.java_generic_services);
                    if (object.py_generic_services != null)
                        message.py_generic_services = Boolean(object.py_generic_services);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.java_package = "";
                        object.java_outer_classname = "";
                        object.optimize_for = options.enums === String ? "SPEED" : 1;
                        object.java_multiple_files = false;
                        object.cc_generic_services = false;
                        object.java_generic_services = false;
                        object.py_generic_services = false;
                        object.java_generate_equals_and_hash = false;
                    }
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        object.java_package = message.java_package;
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        object.java_outer_classname = message.java_outer_classname;
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        object.optimize_for = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] === undefined ? message.optimize_for : $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] : message.optimize_for;
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        object.java_multiple_files = message.java_multiple_files;
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        object.cc_generic_services = message.cc_generic_services;
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        object.java_generic_services = message.java_generic_services;
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        object.py_generic_services = message.py_generic_services;
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        object.java_generate_equals_and_hash = message.java_generate_equals_and_hash;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [message_set_wire_format] MessageOptions message_set_wire_format
                 * @property {boolean|null} [no_standard_descriptor_accessor] MessageOptions no_standard_descriptor_accessor
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MessageOptions uninterpreted_option
                 * @property {number|null} [".msgpool_soft_limit"] MessageOptions .msgpool_soft_limit
                 * @property {number|null} [".msgpool_hard_limit"] MessageOptions .msgpool_hard_limit
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions message_set_wire_format.
                 * @member {boolean} message_set_wire_format
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.message_set_wire_format = false;
    
                /**
                 * MessageOptions no_standard_descriptor_accessor.
                 * @member {boolean} no_standard_descriptor_accessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.no_standard_descriptor_accessor = false;
    
                /**
                 * MessageOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * MessageOptions .msgpool_soft_limit.
                 * @member {number} .msgpool_soft_limit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpool_soft_limit"] = 32;
    
                /**
                 * MessageOptions .msgpool_hard_limit.
                 * @member {number} .msgpool_hard_limit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpool_hard_limit"] = 384;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.message_set_wire_format != null && Object.hasOwnProperty.call(message, "message_set_wire_format"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.message_set_wire_format);
                    if (message.no_standard_descriptor_accessor != null && Object.hasOwnProperty.call(message, "no_standard_descriptor_accessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.no_standard_descriptor_accessor);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".msgpool_soft_limit"] != null && Object.hasOwnProperty.call(message, ".msgpool_soft_limit"))
                        writer.uint32(/* id 60000, wireType 0 =*/480000).int32(message[".msgpool_soft_limit"]);
                    if (message[".msgpool_hard_limit"] != null && Object.hasOwnProperty.call(message, ".msgpool_hard_limit"))
                        writer.uint32(/* id 60001, wireType 0 =*/480008).int32(message[".msgpool_hard_limit"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.message_set_wire_format = reader.bool();
                                break;
                            }
                        case 2: {
                                message.no_standard_descriptor_accessor = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 60000: {
                                message[".msgpool_soft_limit"] = reader.int32();
                                break;
                            }
                        case 60001: {
                                message[".msgpool_hard_limit"] = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        if (typeof message.message_set_wire_format !== "boolean")
                            return "message_set_wire_format: boolean expected";
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        if (typeof message.no_standard_descriptor_accessor !== "boolean")
                            return "no_standard_descriptor_accessor: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        if (!$util.isInteger(message[".msgpool_soft_limit"]))
                            return ".msgpool_soft_limit: integer expected";
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        if (!$util.isInteger(message[".msgpool_hard_limit"]))
                            return ".msgpool_hard_limit: integer expected";
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.message_set_wire_format != null)
                        message.message_set_wire_format = Boolean(object.message_set_wire_format);
                    if (object.no_standard_descriptor_accessor != null)
                        message.no_standard_descriptor_accessor = Boolean(object.no_standard_descriptor_accessor);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".msgpool_soft_limit"] != null)
                        message[".msgpool_soft_limit"] = object[".msgpool_soft_limit"] | 0;
                    if (object[".msgpool_hard_limit"] != null)
                        message[".msgpool_hard_limit"] = object[".msgpool_hard_limit"] | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.message_set_wire_format = false;
                        object.no_standard_descriptor_accessor = false;
                        object[".msgpool_soft_limit"] = 32;
                        object[".msgpool_hard_limit"] = 384;
                    }
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        object.message_set_wire_format = message.message_set_wire_format;
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        object.no_standard_descriptor_accessor = message.no_standard_descriptor_accessor;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        object[".msgpool_soft_limit"] = message[".msgpool_soft_limit"];
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        object[".msgpool_hard_limit"] = message[".msgpool_hard_limit"];
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {string|null} [experimental_map_key] FieldOptions experimental_map_key
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FieldOptions uninterpreted_option
                 * @property {boolean|null} [".key_field"] FieldOptions .key_field
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions experimental_map_key.
                 * @member {string} experimental_map_key
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.experimental_map_key = "";
    
                /**
                 * FieldOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FieldOptions .key_field.
                 * @member {boolean} .key_field
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".key_field"] = false;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.experimental_map_key != null && Object.hasOwnProperty.call(message, "experimental_map_key"))
                        writer.uint32(/* id 9, wireType 2 =*/74).string(message.experimental_map_key);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".key_field"] != null && Object.hasOwnProperty.call(message, ".key_field"))
                        writer.uint32(/* id 60000, wireType 0 =*/480000).bool(message[".key_field"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 9: {
                                message.experimental_map_key = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 60000: {
                                message[".key_field"] = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.experimental_map_key != null && message.hasOwnProperty("experimental_map_key"))
                        if (!$util.isString(message.experimental_map_key))
                            return "experimental_map_key: string expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".key_field"] != null && message.hasOwnProperty(".key_field"))
                        if (typeof message[".key_field"] !== "boolean")
                            return ".key_field: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.experimental_map_key != null)
                        message.experimental_map_key = String(object.experimental_map_key);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".key_field"] != null)
                        message[".key_field"] = Boolean(object[".key_field"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.experimental_map_key = "";
                        object[".key_field"] = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.experimental_map_key != null && message.hasOwnProperty("experimental_map_key"))
                        object.experimental_map_key = message.experimental_map_key;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".key_field"] != null && message.hasOwnProperty(".key_field"))
                        object[".key_field"] = message[".key_field"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumValueOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] ServiceOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MethodOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifier_value] UninterpretedOption identifier_value
                 * @property {number|Long|null} [positive_int_value] UninterpretedOption positive_int_value
                 * @property {number|Long|null} [negative_int_value] UninterpretedOption negative_int_value
                 * @property {number|null} [double_value] UninterpretedOption double_value
                 * @property {Uint8Array|null} [string_value] UninterpretedOption string_value
                 * @property {string|null} [aggregate_value] UninterpretedOption aggregate_value
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifier_value.
                 * @member {string} identifier_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifier_value = "";
    
                /**
                 * UninterpretedOption positive_int_value.
                 * @member {number|Long} positive_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positive_int_value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negative_int_value.
                 * @member {number|Long} negative_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negative_int_value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption double_value.
                 * @member {number} double_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.double_value = 0;
    
                /**
                 * UninterpretedOption string_value.
                 * @member {Uint8Array} string_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.string_value = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregate_value.
                 * @member {string} aggregate_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregate_value = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifier_value != null && Object.hasOwnProperty.call(message, "identifier_value"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier_value);
                    if (message.positive_int_value != null && Object.hasOwnProperty.call(message, "positive_int_value"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positive_int_value);
                    if (message.negative_int_value != null && Object.hasOwnProperty.call(message, "negative_int_value"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negative_int_value);
                    if (message.double_value != null && Object.hasOwnProperty.call(message, "double_value"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.double_value);
                    if (message.string_value != null && Object.hasOwnProperty.call(message, "string_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.string_value);
                    if (message.aggregate_value != null && Object.hasOwnProperty.call(message, "aggregate_value"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregate_value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifier_value = reader.string();
                                break;
                            }
                        case 4: {
                                message.positive_int_value = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negative_int_value = reader.int64();
                                break;
                            }
                        case 6: {
                                message.double_value = reader.double();
                                break;
                            }
                        case 7: {
                                message.string_value = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregate_value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        if (!$util.isString(message.identifier_value))
                            return "identifier_value: string expected";
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (!$util.isInteger(message.positive_int_value) && !(message.positive_int_value && $util.isInteger(message.positive_int_value.low) && $util.isInteger(message.positive_int_value.high)))
                            return "positive_int_value: integer|Long expected";
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (!$util.isInteger(message.negative_int_value) && !(message.negative_int_value && $util.isInteger(message.negative_int_value.low) && $util.isInteger(message.negative_int_value.high)))
                            return "negative_int_value: integer|Long expected";
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        if (typeof message.double_value !== "number")
                            return "double_value: number expected";
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        if (!(message.string_value && typeof message.string_value.length === "number" || $util.isString(message.string_value)))
                            return "string_value: buffer expected";
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        if (!$util.isString(message.aggregate_value))
                            return "aggregate_value: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifier_value != null)
                        message.identifier_value = String(object.identifier_value);
                    if (object.positive_int_value != null)
                        if ($util.Long)
                            (message.positive_int_value = $util.Long.fromValue(object.positive_int_value)).unsigned = true;
                        else if (typeof object.positive_int_value === "string")
                            message.positive_int_value = parseInt(object.positive_int_value, 10);
                        else if (typeof object.positive_int_value === "number")
                            message.positive_int_value = object.positive_int_value;
                        else if (typeof object.positive_int_value === "object")
                            message.positive_int_value = new $util.LongBits(object.positive_int_value.low >>> 0, object.positive_int_value.high >>> 0).toNumber(true);
                    if (object.negative_int_value != null)
                        if ($util.Long)
                            (message.negative_int_value = $util.Long.fromValue(object.negative_int_value)).unsigned = false;
                        else if (typeof object.negative_int_value === "string")
                            message.negative_int_value = parseInt(object.negative_int_value, 10);
                        else if (typeof object.negative_int_value === "number")
                            message.negative_int_value = object.negative_int_value;
                        else if (typeof object.negative_int_value === "object")
                            message.negative_int_value = new $util.LongBits(object.negative_int_value.low >>> 0, object.negative_int_value.high >>> 0).toNumber();
                    if (object.double_value != null)
                        message.double_value = Number(object.double_value);
                    if (object.string_value != null)
                        if (typeof object.string_value === "string")
                            $util.base64.decode(object.string_value, message.string_value = $util.newBuffer($util.base64.length(object.string_value)), 0);
                        else if (object.string_value.length >= 0)
                            message.string_value = object.string_value;
                    if (object.aggregate_value != null)
                        message.aggregate_value = String(object.aggregate_value);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifier_value = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positive_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positive_int_value = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negative_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negative_int_value = options.longs === String ? "0" : 0;
                        object.double_value = 0;
                        if (options.bytes === String)
                            object.string_value = "";
                        else {
                            object.string_value = [];
                            if (options.bytes !== Array)
                                object.string_value = $util.newBuffer(object.string_value);
                        }
                        object.aggregate_value = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        object.identifier_value = message.identifier_value;
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (typeof message.positive_int_value === "number")
                            object.positive_int_value = options.longs === String ? String(message.positive_int_value) : message.positive_int_value;
                        else
                            object.positive_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.positive_int_value) : options.longs === Number ? new $util.LongBits(message.positive_int_value.low >>> 0, message.positive_int_value.high >>> 0).toNumber(true) : message.positive_int_value;
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (typeof message.negative_int_value === "number")
                            object.negative_int_value = options.longs === String ? String(message.negative_int_value) : message.negative_int_value;
                        else
                            object.negative_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.negative_int_value) : options.longs === Number ? new $util.LongBits(message.negative_int_value.low >>> 0, message.negative_int_value.high >>> 0).toNumber() : message.negative_int_value;
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        object.double_value = options.json && !isFinite(message.double_value) ? String(message.double_value) : message.double_value;
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        object.string_value = options.bytes === String ? $util.base64.encode(message.string_value, 0, message.string_value.length) : options.bytes === Array ? Array.prototype.slice.call(message.string_value) : message.string_value;
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        object.aggregate_value = message.aggregate_value;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} name_part NamePart name_part
                     * @property {boolean} is_extension NamePart is_extension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart name_part.
                     * @member {string} name_part
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.name_part = "";
    
                    /**
                     * NamePart is_extension.
                     * @member {boolean} is_extension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.is_extension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name_part);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.is_extension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name_part = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.is_extension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("name_part"))
                            throw $util.ProtocolError("missing required 'name_part'", { instance: message });
                        if (!message.hasOwnProperty("is_extension"))
                            throw $util.ProtocolError("missing required 'is_extension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.name_part))
                            return "name_part: string expected";
                        if (typeof message.is_extension !== "boolean")
                            return "is_extension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.name_part != null)
                            message.name_part = String(object.name_part);
                        if (object.is_extension != null)
                            message.is_extension = Boolean(object.is_extension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name_part = "";
                            object.is_extension = false;
                        }
                        if (message.name_part != null && message.hasOwnProperty("name_part"))
                            object.name_part = message.name_part;
                        if (message.is_extension != null && message.hasOwnProperty("is_extension"))
                            object.is_extension = message.is_extension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();

    return $root;
});
