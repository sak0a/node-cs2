/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("protobufjs/minimal"));

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
    
    /**
     * EGCBaseMsg enum.
     * @exports EGCBaseMsg
     * @enum {number}
     * @property {number} k_EMsgGCSystemMessage=4001 k_EMsgGCSystemMessage value
     * @property {number} k_EMsgGCReplicateConVars=4002 k_EMsgGCReplicateConVars value
     * @property {number} k_EMsgGCConVarUpdated=4003 k_EMsgGCConVarUpdated value
     * @property {number} k_EMsgGCInQueue=4008 k_EMsgGCInQueue value
     * @property {number} k_EMsgGCInviteToParty=4501 k_EMsgGCInviteToParty value
     * @property {number} k_EMsgGCInvitationCreated=4502 k_EMsgGCInvitationCreated value
     * @property {number} k_EMsgGCPartyInviteResponse=4503 k_EMsgGCPartyInviteResponse value
     * @property {number} k_EMsgGCKickFromParty=4504 k_EMsgGCKickFromParty value
     * @property {number} k_EMsgGCLeaveParty=4505 k_EMsgGCLeaveParty value
     * @property {number} k_EMsgGCServerAvailable=4506 k_EMsgGCServerAvailable value
     * @property {number} k_EMsgGCClientConnectToServer=4507 k_EMsgGCClientConnectToServer value
     * @property {number} k_EMsgGCGameServerInfo=4508 k_EMsgGCGameServerInfo value
     * @property {number} k_EMsgGCError=4509 k_EMsgGCError value
     * @property {number} k_EMsgGCReplay_UploadedToYouTube=4510 k_EMsgGCReplay_UploadedToYouTube value
     * @property {number} k_EMsgGCLANServerAvailable=4511 k_EMsgGCLANServerAvailable value
     */
    $root.EGCBaseMsg = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[4001] = "k_EMsgGCSystemMessage"] = 4001;
        values[valuesById[4002] = "k_EMsgGCReplicateConVars"] = 4002;
        values[valuesById[4003] = "k_EMsgGCConVarUpdated"] = 4003;
        values[valuesById[4008] = "k_EMsgGCInQueue"] = 4008;
        values[valuesById[4501] = "k_EMsgGCInviteToParty"] = 4501;
        values[valuesById[4502] = "k_EMsgGCInvitationCreated"] = 4502;
        values[valuesById[4503] = "k_EMsgGCPartyInviteResponse"] = 4503;
        values[valuesById[4504] = "k_EMsgGCKickFromParty"] = 4504;
        values[valuesById[4505] = "k_EMsgGCLeaveParty"] = 4505;
        values[valuesById[4506] = "k_EMsgGCServerAvailable"] = 4506;
        values[valuesById[4507] = "k_EMsgGCClientConnectToServer"] = 4507;
        values[valuesById[4508] = "k_EMsgGCGameServerInfo"] = 4508;
        values[valuesById[4509] = "k_EMsgGCError"] = 4509;
        values[valuesById[4510] = "k_EMsgGCReplay_UploadedToYouTube"] = 4510;
        values[valuesById[4511] = "k_EMsgGCLANServerAvailable"] = 4511;
        return values;
    })();
    
    /**
     * EGCBaseProtoObjectTypes enum.
     * @exports EGCBaseProtoObjectTypes
     * @enum {number}
     * @property {number} k_EProtoObjectPartyInvite=1001 k_EProtoObjectPartyInvite value
     * @property {number} k_EProtoObjectLobbyInvite=1002 k_EProtoObjectLobbyInvite value
     */
    $root.EGCBaseProtoObjectTypes = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[1001] = "k_EProtoObjectPartyInvite"] = 1001;
        values[valuesById[1002] = "k_EProtoObjectLobbyInvite"] = 1002;
        return values;
    })();
    
    /**
     * GC_BannedWordType enum.
     * @exports GC_BannedWordType
     * @enum {number}
     * @property {number} GC_BANNED_WORD_DISABLE_WORD=0 GC_BANNED_WORD_DISABLE_WORD value
     * @property {number} GC_BANNED_WORD_ENABLE_WORD=1 GC_BANNED_WORD_ENABLE_WORD value
     */
    $root.GC_BannedWordType = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GC_BANNED_WORD_DISABLE_WORD"] = 0;
        values[valuesById[1] = "GC_BANNED_WORD_ENABLE_WORD"] = 1;
        return values;
    })();
    
    $root.CGCStorePurchaseInit_LineItem = (function() {
    
        /**
         * Properties of a CGCStorePurchaseInit_LineItem.
         * @exports ICGCStorePurchaseInit_LineItem
         * @interface ICGCStorePurchaseInit_LineItem
         * @property {number|null} [item_def_id] CGCStorePurchaseInit_LineItem item_def_id
         * @property {number|null} [quantity] CGCStorePurchaseInit_LineItem quantity
         * @property {number|null} [cost_in_local_currency] CGCStorePurchaseInit_LineItem cost_in_local_currency
         * @property {number|null} [purchase_type] CGCStorePurchaseInit_LineItem purchase_type
         * @property {number|Long|null} [supplemental_data] CGCStorePurchaseInit_LineItem supplemental_data
         */
    
        /**
         * Constructs a new CGCStorePurchaseInit_LineItem.
         * @exports CGCStorePurchaseInit_LineItem
         * @classdesc Represents a CGCStorePurchaseInit_LineItem.
         * @implements ICGCStorePurchaseInit_LineItem
         * @constructor
         * @param {ICGCStorePurchaseInit_LineItem=} [properties] Properties to set
         */
        function CGCStorePurchaseInit_LineItem(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CGCStorePurchaseInit_LineItem item_def_id.
         * @member {number} item_def_id
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.item_def_id = 0;
    
        /**
         * CGCStorePurchaseInit_LineItem quantity.
         * @member {number} quantity
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.quantity = 0;
    
        /**
         * CGCStorePurchaseInit_LineItem cost_in_local_currency.
         * @member {number} cost_in_local_currency
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.cost_in_local_currency = 0;
    
        /**
         * CGCStorePurchaseInit_LineItem purchase_type.
         * @member {number} purchase_type
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.purchase_type = 0;
    
        /**
         * CGCStorePurchaseInit_LineItem supplemental_data.
         * @member {number|Long} supplemental_data
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         */
        CGCStorePurchaseInit_LineItem.prototype.supplemental_data = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CGCStorePurchaseInit_LineItem instance using the specified properties.
         * @function create
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {ICGCStorePurchaseInit_LineItem=} [properties] Properties to set
         * @returns {CGCStorePurchaseInit_LineItem} CGCStorePurchaseInit_LineItem instance
         */
        CGCStorePurchaseInit_LineItem.create = function create(properties) {
            return new CGCStorePurchaseInit_LineItem(properties);
        };
    
        /**
         * Encodes the specified CGCStorePurchaseInit_LineItem message. Does not implicitly {@link CGCStorePurchaseInit_LineItem.verify|verify} messages.
         * @function encode
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {ICGCStorePurchaseInit_LineItem} message CGCStorePurchaseInit_LineItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCStorePurchaseInit_LineItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_def_id != null && Object.hasOwnProperty.call(message, "item_def_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.item_def_id);
            if (message.quantity != null && Object.hasOwnProperty.call(message, "quantity"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.quantity);
            if (message.cost_in_local_currency != null && Object.hasOwnProperty.call(message, "cost_in_local_currency"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cost_in_local_currency);
            if (message.purchase_type != null && Object.hasOwnProperty.call(message, "purchase_type"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.purchase_type);
            if (message.supplemental_data != null && Object.hasOwnProperty.call(message, "supplemental_data"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.supplemental_data);
            return writer;
        };
    
        /**
         * Encodes the specified CGCStorePurchaseInit_LineItem message, length delimited. Does not implicitly {@link CGCStorePurchaseInit_LineItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {ICGCStorePurchaseInit_LineItem} message CGCStorePurchaseInit_LineItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CGCStorePurchaseInit_LineItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CGCStorePurchaseInit_LineItem message from the specified reader or buffer.
         * @function decode
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CGCStorePurchaseInit_LineItem} CGCStorePurchaseInit_LineItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCStorePurchaseInit_LineItem.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CGCStorePurchaseInit_LineItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.item_def_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.quantity = reader.uint32();
                        break;
                    }
                case 3: {
                        message.cost_in_local_currency = reader.uint32();
                        break;
                    }
                case 4: {
                        message.purchase_type = reader.uint32();
                        break;
                    }
                case 5: {
                        message.supplemental_data = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CGCStorePurchaseInit_LineItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CGCStorePurchaseInit_LineItem} CGCStorePurchaseInit_LineItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CGCStorePurchaseInit_LineItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CGCStorePurchaseInit_LineItem message.
         * @function verify
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CGCStorePurchaseInit_LineItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_def_id != null && message.hasOwnProperty("item_def_id"))
                if (!$util.isInteger(message.item_def_id))
                    return "item_def_id: integer expected";
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                if (!$util.isInteger(message.quantity))
                    return "quantity: integer expected";
            if (message.cost_in_local_currency != null && message.hasOwnProperty("cost_in_local_currency"))
                if (!$util.isInteger(message.cost_in_local_currency))
                    return "cost_in_local_currency: integer expected";
            if (message.purchase_type != null && message.hasOwnProperty("purchase_type"))
                if (!$util.isInteger(message.purchase_type))
                    return "purchase_type: integer expected";
            if (message.supplemental_data != null && message.hasOwnProperty("supplemental_data"))
                if (!$util.isInteger(message.supplemental_data) && !(message.supplemental_data && $util.isInteger(message.supplemental_data.low) && $util.isInteger(message.supplemental_data.high)))
                    return "supplemental_data: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CGCStorePurchaseInit_LineItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CGCStorePurchaseInit_LineItem} CGCStorePurchaseInit_LineItem
         */
        CGCStorePurchaseInit_LineItem.fromObject = function fromObject(object) {
            if (object instanceof $root.CGCStorePurchaseInit_LineItem)
                return object;
            var message = new $root.CGCStorePurchaseInit_LineItem();
            if (object.item_def_id != null)
                message.item_def_id = object.item_def_id >>> 0;
            if (object.quantity != null)
                message.quantity = object.quantity >>> 0;
            if (object.cost_in_local_currency != null)
                message.cost_in_local_currency = object.cost_in_local_currency >>> 0;
            if (object.purchase_type != null)
                message.purchase_type = object.purchase_type >>> 0;
            if (object.supplemental_data != null)
                if ($util.Long)
                    (message.supplemental_data = $util.Long.fromValue(object.supplemental_data)).unsigned = true;
                else if (typeof object.supplemental_data === "string")
                    message.supplemental_data = parseInt(object.supplemental_data, 10);
                else if (typeof object.supplemental_data === "number")
                    message.supplemental_data = object.supplemental_data;
                else if (typeof object.supplemental_data === "object")
                    message.supplemental_data = new $util.LongBits(object.supplemental_data.low >>> 0, object.supplemental_data.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CGCStorePurchaseInit_LineItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {CGCStorePurchaseInit_LineItem} message CGCStorePurchaseInit_LineItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CGCStorePurchaseInit_LineItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.item_def_id = 0;
                object.quantity = 0;
                object.cost_in_local_currency = 0;
                object.purchase_type = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.supplemental_data = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.supplemental_data = options.longs === String ? "0" : 0;
            }
            if (message.item_def_id != null && message.hasOwnProperty("item_def_id"))
                object.item_def_id = message.item_def_id;
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                object.quantity = message.quantity;
            if (message.cost_in_local_currency != null && message.hasOwnProperty("cost_in_local_currency"))
                object.cost_in_local_currency = message.cost_in_local_currency;
            if (message.purchase_type != null && message.hasOwnProperty("purchase_type"))
                object.purchase_type = message.purchase_type;
            if (message.supplemental_data != null && message.hasOwnProperty("supplemental_data"))
                if (typeof message.supplemental_data === "number")
                    object.supplemental_data = options.longs === String ? String(message.supplemental_data) : message.supplemental_data;
                else
                    object.supplemental_data = options.longs === String ? $util.Long.prototype.toString.call(message.supplemental_data) : options.longs === Number ? new $util.LongBits(message.supplemental_data.low >>> 0, message.supplemental_data.high >>> 0).toNumber(true) : message.supplemental_data;
            return object;
        };
    
        /**
         * Converts this CGCStorePurchaseInit_LineItem to JSON.
         * @function toJSON
         * @memberof CGCStorePurchaseInit_LineItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CGCStorePurchaseInit_LineItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CGCStorePurchaseInit_LineItem
         * @function getTypeUrl
         * @memberof CGCStorePurchaseInit_LineItem
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CGCStorePurchaseInit_LineItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CGCStorePurchaseInit_LineItem";
        };
    
        return CGCStorePurchaseInit_LineItem;
    })();
    
    $root.CMsgGCStorePurchaseInit = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseInit.
         * @exports ICMsgGCStorePurchaseInit
         * @interface ICMsgGCStorePurchaseInit
         * @property {string|null} [country] CMsgGCStorePurchaseInit country
         * @property {number|null} [language] CMsgGCStorePurchaseInit language
         * @property {number|null} [currency] CMsgGCStorePurchaseInit currency
         * @property {Array.<ICGCStorePurchaseInit_LineItem>|null} [line_items] CMsgGCStorePurchaseInit line_items
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseInit.
         * @exports CMsgGCStorePurchaseInit
         * @classdesc Represents a CMsgGCStorePurchaseInit.
         * @implements ICMsgGCStorePurchaseInit
         * @constructor
         * @param {ICMsgGCStorePurchaseInit=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseInit(properties) {
            this.line_items = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseInit country.
         * @member {string} country
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         */
        CMsgGCStorePurchaseInit.prototype.country = "";
    
        /**
         * CMsgGCStorePurchaseInit language.
         * @member {number} language
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         */
        CMsgGCStorePurchaseInit.prototype.language = 0;
    
        /**
         * CMsgGCStorePurchaseInit currency.
         * @member {number} currency
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         */
        CMsgGCStorePurchaseInit.prototype.currency = 0;
    
        /**
         * CMsgGCStorePurchaseInit line_items.
         * @member {Array.<ICGCStorePurchaseInit_LineItem>} line_items
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         */
        CMsgGCStorePurchaseInit.prototype.line_items = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCStorePurchaseInit instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {ICMsgGCStorePurchaseInit=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseInit} CMsgGCStorePurchaseInit instance
         */
        CMsgGCStorePurchaseInit.create = function create(properties) {
            return new CMsgGCStorePurchaseInit(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseInit message. Does not implicitly {@link CMsgGCStorePurchaseInit.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {ICMsgGCStorePurchaseInit} message CMsgGCStorePurchaseInit message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseInit.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.country != null && Object.hasOwnProperty.call(message, "country"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.country);
            if (message.language != null && Object.hasOwnProperty.call(message, "language"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.language);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.currency);
            if (message.line_items != null && message.line_items.length)
                for (var i = 0; i < message.line_items.length; ++i)
                    $root.CGCStorePurchaseInit_LineItem.encode(message.line_items[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseInit message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseInit.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {ICMsgGCStorePurchaseInit} message CMsgGCStorePurchaseInit message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseInit.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseInit message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseInit} CMsgGCStorePurchaseInit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseInit.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseInit();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.country = reader.string();
                        break;
                    }
                case 2: {
                        message.language = reader.int32();
                        break;
                    }
                case 3: {
                        message.currency = reader.int32();
                        break;
                    }
                case 4: {
                        if (!(message.line_items && message.line_items.length))
                            message.line_items = [];
                        message.line_items.push($root.CGCStorePurchaseInit_LineItem.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseInit message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseInit} CMsgGCStorePurchaseInit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseInit.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseInit message.
         * @function verify
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseInit.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.country != null && message.hasOwnProperty("country"))
                if (!$util.isString(message.country))
                    return "country: string expected";
            if (message.language != null && message.hasOwnProperty("language"))
                if (!$util.isInteger(message.language))
                    return "language: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isInteger(message.currency))
                    return "currency: integer expected";
            if (message.line_items != null && message.hasOwnProperty("line_items")) {
                if (!Array.isArray(message.line_items))
                    return "line_items: array expected";
                for (var i = 0; i < message.line_items.length; ++i) {
                    var error = $root.CGCStorePurchaseInit_LineItem.verify(message.line_items[i]);
                    if (error)
                        return "line_items." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseInit message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseInit} CMsgGCStorePurchaseInit
         */
        CMsgGCStorePurchaseInit.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseInit)
                return object;
            var message = new $root.CMsgGCStorePurchaseInit();
            if (object.country != null)
                message.country = String(object.country);
            if (object.language != null)
                message.language = object.language | 0;
            if (object.currency != null)
                message.currency = object.currency | 0;
            if (object.line_items) {
                if (!Array.isArray(object.line_items))
                    throw TypeError(".CMsgGCStorePurchaseInit.line_items: array expected");
                message.line_items = [];
                for (var i = 0; i < object.line_items.length; ++i) {
                    if (typeof object.line_items[i] !== "object")
                        throw TypeError(".CMsgGCStorePurchaseInit.line_items: object expected");
                    message.line_items[i] = $root.CGCStorePurchaseInit_LineItem.fromObject(object.line_items[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseInit message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {CMsgGCStorePurchaseInit} message CMsgGCStorePurchaseInit
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseInit.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.line_items = [];
            if (options.defaults) {
                object.country = "";
                object.language = 0;
                object.currency = 0;
            }
            if (message.country != null && message.hasOwnProperty("country"))
                object.country = message.country;
            if (message.language != null && message.hasOwnProperty("language"))
                object.language = message.language;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            if (message.line_items && message.line_items.length) {
                object.line_items = [];
                for (var j = 0; j < message.line_items.length; ++j)
                    object.line_items[j] = $root.CGCStorePurchaseInit_LineItem.toObject(message.line_items[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseInit to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseInit
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseInit.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseInit
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseInit
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseInit.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseInit";
        };
    
        return CMsgGCStorePurchaseInit;
    })();
    
    $root.CMsgGCStorePurchaseInitResponse = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseInitResponse.
         * @exports ICMsgGCStorePurchaseInitResponse
         * @interface ICMsgGCStorePurchaseInitResponse
         * @property {number|null} [result] CMsgGCStorePurchaseInitResponse result
         * @property {number|Long|null} [txn_id] CMsgGCStorePurchaseInitResponse txn_id
         * @property {string|null} [url] CMsgGCStorePurchaseInitResponse url
         * @property {Array.<number|Long>|null} [item_ids] CMsgGCStorePurchaseInitResponse item_ids
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseInitResponse.
         * @exports CMsgGCStorePurchaseInitResponse
         * @classdesc Represents a CMsgGCStorePurchaseInitResponse.
         * @implements ICMsgGCStorePurchaseInitResponse
         * @constructor
         * @param {ICMsgGCStorePurchaseInitResponse=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseInitResponse(properties) {
            this.item_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseInitResponse result.
         * @member {number} result
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         */
        CMsgGCStorePurchaseInitResponse.prototype.result = 0;
    
        /**
         * CMsgGCStorePurchaseInitResponse txn_id.
         * @member {number|Long} txn_id
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         */
        CMsgGCStorePurchaseInitResponse.prototype.txn_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgGCStorePurchaseInitResponse url.
         * @member {string} url
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         */
        CMsgGCStorePurchaseInitResponse.prototype.url = "";
    
        /**
         * CMsgGCStorePurchaseInitResponse item_ids.
         * @member {Array.<number|Long>} item_ids
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         */
        CMsgGCStorePurchaseInitResponse.prototype.item_ids = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCStorePurchaseInitResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {ICMsgGCStorePurchaseInitResponse=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseInitResponse} CMsgGCStorePurchaseInitResponse instance
         */
        CMsgGCStorePurchaseInitResponse.create = function create(properties) {
            return new CMsgGCStorePurchaseInitResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseInitResponse message. Does not implicitly {@link CMsgGCStorePurchaseInitResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {ICMsgGCStorePurchaseInitResponse} message CMsgGCStorePurchaseInitResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseInitResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);
            if (message.txn_id != null && Object.hasOwnProperty.call(message, "txn_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.txn_id);
            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.url);
            if (message.item_ids != null && message.item_ids.length)
                for (var i = 0; i < message.item_ids.length; ++i)
                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.item_ids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseInitResponse message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseInitResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {ICMsgGCStorePurchaseInitResponse} message CMsgGCStorePurchaseInitResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseInitResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseInitResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseInitResponse} CMsgGCStorePurchaseInitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseInitResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseInitResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.result = reader.int32();
                        break;
                    }
                case 2: {
                        message.txn_id = reader.uint64();
                        break;
                    }
                case 3: {
                        message.url = reader.string();
                        break;
                    }
                case 4: {
                        if (!(message.item_ids && message.item_ids.length))
                            message.item_ids = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.item_ids.push(reader.uint64());
                        } else
                            message.item_ids.push(reader.uint64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseInitResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseInitResponse} CMsgGCStorePurchaseInitResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseInitResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseInitResponse message.
         * @function verify
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseInitResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.txn_id != null && message.hasOwnProperty("txn_id"))
                if (!$util.isInteger(message.txn_id) && !(message.txn_id && $util.isInteger(message.txn_id.low) && $util.isInteger(message.txn_id.high)))
                    return "txn_id: integer|Long expected";
            if (message.url != null && message.hasOwnProperty("url"))
                if (!$util.isString(message.url))
                    return "url: string expected";
            if (message.item_ids != null && message.hasOwnProperty("item_ids")) {
                if (!Array.isArray(message.item_ids))
                    return "item_ids: array expected";
                for (var i = 0; i < message.item_ids.length; ++i)
                    if (!$util.isInteger(message.item_ids[i]) && !(message.item_ids[i] && $util.isInteger(message.item_ids[i].low) && $util.isInteger(message.item_ids[i].high)))
                        return "item_ids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseInitResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseInitResponse} CMsgGCStorePurchaseInitResponse
         */
        CMsgGCStorePurchaseInitResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseInitResponse)
                return object;
            var message = new $root.CMsgGCStorePurchaseInitResponse();
            if (object.result != null)
                message.result = object.result | 0;
            if (object.txn_id != null)
                if ($util.Long)
                    (message.txn_id = $util.Long.fromValue(object.txn_id)).unsigned = true;
                else if (typeof object.txn_id === "string")
                    message.txn_id = parseInt(object.txn_id, 10);
                else if (typeof object.txn_id === "number")
                    message.txn_id = object.txn_id;
                else if (typeof object.txn_id === "object")
                    message.txn_id = new $util.LongBits(object.txn_id.low >>> 0, object.txn_id.high >>> 0).toNumber(true);
            if (object.url != null)
                message.url = String(object.url);
            if (object.item_ids) {
                if (!Array.isArray(object.item_ids))
                    throw TypeError(".CMsgGCStorePurchaseInitResponse.item_ids: array expected");
                message.item_ids = [];
                for (var i = 0; i < object.item_ids.length; ++i)
                    if ($util.Long)
                        (message.item_ids[i] = $util.Long.fromValue(object.item_ids[i])).unsigned = true;
                    else if (typeof object.item_ids[i] === "string")
                        message.item_ids[i] = parseInt(object.item_ids[i], 10);
                    else if (typeof object.item_ids[i] === "number")
                        message.item_ids[i] = object.item_ids[i];
                    else if (typeof object.item_ids[i] === "object")
                        message.item_ids[i] = new $util.LongBits(object.item_ids[i].low >>> 0, object.item_ids[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseInitResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {CMsgGCStorePurchaseInitResponse} message CMsgGCStorePurchaseInitResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseInitResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.item_ids = [];
            if (options.defaults) {
                object.result = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.txn_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.txn_id = options.longs === String ? "0" : 0;
                object.url = "";
            }
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.txn_id != null && message.hasOwnProperty("txn_id"))
                if (typeof message.txn_id === "number")
                    object.txn_id = options.longs === String ? String(message.txn_id) : message.txn_id;
                else
                    object.txn_id = options.longs === String ? $util.Long.prototype.toString.call(message.txn_id) : options.longs === Number ? new $util.LongBits(message.txn_id.low >>> 0, message.txn_id.high >>> 0).toNumber(true) : message.txn_id;
            if (message.url != null && message.hasOwnProperty("url"))
                object.url = message.url;
            if (message.item_ids && message.item_ids.length) {
                object.item_ids = [];
                for (var j = 0; j < message.item_ids.length; ++j)
                    if (typeof message.item_ids[j] === "number")
                        object.item_ids[j] = options.longs === String ? String(message.item_ids[j]) : message.item_ids[j];
                    else
                        object.item_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.item_ids[j]) : options.longs === Number ? new $util.LongBits(message.item_ids[j].low >>> 0, message.item_ids[j].high >>> 0).toNumber(true) : message.item_ids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseInitResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseInitResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseInitResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseInitResponse
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseInitResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseInitResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseInitResponse";
        };
    
        return CMsgGCStorePurchaseInitResponse;
    })();
    
    $root.CSOPartyInvite = (function() {
    
        /**
         * Properties of a CSOPartyInvite.
         * @exports ICSOPartyInvite
         * @interface ICSOPartyInvite
         * @property {number|Long|null} [group_id] CSOPartyInvite group_id
         * @property {number|Long|null} [sender_id] CSOPartyInvite sender_id
         * @property {string|null} [sender_name] CSOPartyInvite sender_name
         */
    
        /**
         * Constructs a new CSOPartyInvite.
         * @exports CSOPartyInvite
         * @classdesc Represents a CSOPartyInvite.
         * @implements ICSOPartyInvite
         * @constructor
         * @param {ICSOPartyInvite=} [properties] Properties to set
         */
        function CSOPartyInvite(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOPartyInvite group_id.
         * @member {number|Long} group_id
         * @memberof CSOPartyInvite
         * @instance
         */
        CSOPartyInvite.prototype.group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOPartyInvite sender_id.
         * @member {number|Long} sender_id
         * @memberof CSOPartyInvite
         * @instance
         */
        CSOPartyInvite.prototype.sender_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CSOPartyInvite sender_name.
         * @member {string} sender_name
         * @memberof CSOPartyInvite
         * @instance
         */
        CSOPartyInvite.prototype.sender_name = "";
    
        /**
         * Creates a new CSOPartyInvite instance using the specified properties.
         * @function create
         * @memberof CSOPartyInvite
         * @static
         * @param {ICSOPartyInvite=} [properties] Properties to set
         * @returns {CSOPartyInvite} CSOPartyInvite instance
         */
        CSOPartyInvite.create = function create(properties) {
            return new CSOPartyInvite(properties);
        };
    
        /**
         * Encodes the specified CSOPartyInvite message. Does not implicitly {@link CSOPartyInvite.verify|verify} messages.
         * @function encode
         * @memberof CSOPartyInvite
         * @static
         * @param {ICSOPartyInvite} message CSOPartyInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOPartyInvite.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.group_id != null && Object.hasOwnProperty.call(message, "group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.group_id);
            if (message.sender_id != null && Object.hasOwnProperty.call(message, "sender_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.sender_id);
            if (message.sender_name != null && Object.hasOwnProperty.call(message, "sender_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.sender_name);
            return writer;
        };
    
        /**
         * Encodes the specified CSOPartyInvite message, length delimited. Does not implicitly {@link CSOPartyInvite.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOPartyInvite
         * @static
         * @param {ICSOPartyInvite} message CSOPartyInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOPartyInvite.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOPartyInvite message from the specified reader or buffer.
         * @function decode
         * @memberof CSOPartyInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOPartyInvite} CSOPartyInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOPartyInvite.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOPartyInvite();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.group_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.sender_id = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.sender_name = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOPartyInvite message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOPartyInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOPartyInvite} CSOPartyInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOPartyInvite.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOPartyInvite message.
         * @function verify
         * @memberof CSOPartyInvite
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOPartyInvite.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.group_id != null && message.hasOwnProperty("group_id"))
                if (!$util.isInteger(message.group_id) && !(message.group_id && $util.isInteger(message.group_id.low) && $util.isInteger(message.group_id.high)))
                    return "group_id: integer|Long expected";
            if (message.sender_id != null && message.hasOwnProperty("sender_id"))
                if (!$util.isInteger(message.sender_id) && !(message.sender_id && $util.isInteger(message.sender_id.low) && $util.isInteger(message.sender_id.high)))
                    return "sender_id: integer|Long expected";
            if (message.sender_name != null && message.hasOwnProperty("sender_name"))
                if (!$util.isString(message.sender_name))
                    return "sender_name: string expected";
            return null;
        };
    
        /**
         * Creates a CSOPartyInvite message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOPartyInvite
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOPartyInvite} CSOPartyInvite
         */
        CSOPartyInvite.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOPartyInvite)
                return object;
            var message = new $root.CSOPartyInvite();
            if (object.group_id != null)
                if ($util.Long)
                    (message.group_id = $util.Long.fromValue(object.group_id)).unsigned = true;
                else if (typeof object.group_id === "string")
                    message.group_id = parseInt(object.group_id, 10);
                else if (typeof object.group_id === "number")
                    message.group_id = object.group_id;
                else if (typeof object.group_id === "object")
                    message.group_id = new $util.LongBits(object.group_id.low >>> 0, object.group_id.high >>> 0).toNumber(true);
            if (object.sender_id != null)
                if ($util.Long)
                    (message.sender_id = $util.Long.fromValue(object.sender_id)).unsigned = false;
                else if (typeof object.sender_id === "string")
                    message.sender_id = parseInt(object.sender_id, 10);
                else if (typeof object.sender_id === "number")
                    message.sender_id = object.sender_id;
                else if (typeof object.sender_id === "object")
                    message.sender_id = new $util.LongBits(object.sender_id.low >>> 0, object.sender_id.high >>> 0).toNumber();
            if (object.sender_name != null)
                message.sender_name = String(object.sender_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOPartyInvite message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOPartyInvite
         * @static
         * @param {CSOPartyInvite} message CSOPartyInvite
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOPartyInvite.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.sender_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.sender_id = options.longs === String ? "0" : 0;
                object.sender_name = "";
            }
            if (message.group_id != null && message.hasOwnProperty("group_id"))
                if (typeof message.group_id === "number")
                    object.group_id = options.longs === String ? String(message.group_id) : message.group_id;
                else
                    object.group_id = options.longs === String ? $util.Long.prototype.toString.call(message.group_id) : options.longs === Number ? new $util.LongBits(message.group_id.low >>> 0, message.group_id.high >>> 0).toNumber(true) : message.group_id;
            if (message.sender_id != null && message.hasOwnProperty("sender_id"))
                if (typeof message.sender_id === "number")
                    object.sender_id = options.longs === String ? String(message.sender_id) : message.sender_id;
                else
                    object.sender_id = options.longs === String ? $util.Long.prototype.toString.call(message.sender_id) : options.longs === Number ? new $util.LongBits(message.sender_id.low >>> 0, message.sender_id.high >>> 0).toNumber() : message.sender_id;
            if (message.sender_name != null && message.hasOwnProperty("sender_name"))
                object.sender_name = message.sender_name;
            return object;
        };
    
        /**
         * Converts this CSOPartyInvite to JSON.
         * @function toJSON
         * @memberof CSOPartyInvite
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOPartyInvite.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOPartyInvite
         * @function getTypeUrl
         * @memberof CSOPartyInvite
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOPartyInvite.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOPartyInvite";
        };
    
        return CSOPartyInvite;
    })();
    
    $root.CSOLobbyInvite = (function() {
    
        /**
         * Properties of a CSOLobbyInvite.
         * @exports ICSOLobbyInvite
         * @interface ICSOLobbyInvite
         * @property {number|Long|null} [group_id] CSOLobbyInvite group_id
         * @property {number|Long|null} [sender_id] CSOLobbyInvite sender_id
         * @property {string|null} [sender_name] CSOLobbyInvite sender_name
         */
    
        /**
         * Constructs a new CSOLobbyInvite.
         * @exports CSOLobbyInvite
         * @classdesc Represents a CSOLobbyInvite.
         * @implements ICSOLobbyInvite
         * @constructor
         * @param {ICSOLobbyInvite=} [properties] Properties to set
         */
        function CSOLobbyInvite(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOLobbyInvite group_id.
         * @member {number|Long} group_id
         * @memberof CSOLobbyInvite
         * @instance
         */
        CSOLobbyInvite.prototype.group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOLobbyInvite sender_id.
         * @member {number|Long} sender_id
         * @memberof CSOLobbyInvite
         * @instance
         */
        CSOLobbyInvite.prototype.sender_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CSOLobbyInvite sender_name.
         * @member {string} sender_name
         * @memberof CSOLobbyInvite
         * @instance
         */
        CSOLobbyInvite.prototype.sender_name = "";
    
        /**
         * Creates a new CSOLobbyInvite instance using the specified properties.
         * @function create
         * @memberof CSOLobbyInvite
         * @static
         * @param {ICSOLobbyInvite=} [properties] Properties to set
         * @returns {CSOLobbyInvite} CSOLobbyInvite instance
         */
        CSOLobbyInvite.create = function create(properties) {
            return new CSOLobbyInvite(properties);
        };
    
        /**
         * Encodes the specified CSOLobbyInvite message. Does not implicitly {@link CSOLobbyInvite.verify|verify} messages.
         * @function encode
         * @memberof CSOLobbyInvite
         * @static
         * @param {ICSOLobbyInvite} message CSOLobbyInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOLobbyInvite.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.group_id != null && Object.hasOwnProperty.call(message, "group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.group_id);
            if (message.sender_id != null && Object.hasOwnProperty.call(message, "sender_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.sender_id);
            if (message.sender_name != null && Object.hasOwnProperty.call(message, "sender_name"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.sender_name);
            return writer;
        };
    
        /**
         * Encodes the specified CSOLobbyInvite message, length delimited. Does not implicitly {@link CSOLobbyInvite.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOLobbyInvite
         * @static
         * @param {ICSOLobbyInvite} message CSOLobbyInvite message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOLobbyInvite.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOLobbyInvite message from the specified reader or buffer.
         * @function decode
         * @memberof CSOLobbyInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOLobbyInvite} CSOLobbyInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOLobbyInvite.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOLobbyInvite();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.group_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.sender_id = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.sender_name = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOLobbyInvite message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOLobbyInvite
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOLobbyInvite} CSOLobbyInvite
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOLobbyInvite.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOLobbyInvite message.
         * @function verify
         * @memberof CSOLobbyInvite
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOLobbyInvite.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.group_id != null && message.hasOwnProperty("group_id"))
                if (!$util.isInteger(message.group_id) && !(message.group_id && $util.isInteger(message.group_id.low) && $util.isInteger(message.group_id.high)))
                    return "group_id: integer|Long expected";
            if (message.sender_id != null && message.hasOwnProperty("sender_id"))
                if (!$util.isInteger(message.sender_id) && !(message.sender_id && $util.isInteger(message.sender_id.low) && $util.isInteger(message.sender_id.high)))
                    return "sender_id: integer|Long expected";
            if (message.sender_name != null && message.hasOwnProperty("sender_name"))
                if (!$util.isString(message.sender_name))
                    return "sender_name: string expected";
            return null;
        };
    
        /**
         * Creates a CSOLobbyInvite message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOLobbyInvite
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOLobbyInvite} CSOLobbyInvite
         */
        CSOLobbyInvite.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOLobbyInvite)
                return object;
            var message = new $root.CSOLobbyInvite();
            if (object.group_id != null)
                if ($util.Long)
                    (message.group_id = $util.Long.fromValue(object.group_id)).unsigned = true;
                else if (typeof object.group_id === "string")
                    message.group_id = parseInt(object.group_id, 10);
                else if (typeof object.group_id === "number")
                    message.group_id = object.group_id;
                else if (typeof object.group_id === "object")
                    message.group_id = new $util.LongBits(object.group_id.low >>> 0, object.group_id.high >>> 0).toNumber(true);
            if (object.sender_id != null)
                if ($util.Long)
                    (message.sender_id = $util.Long.fromValue(object.sender_id)).unsigned = false;
                else if (typeof object.sender_id === "string")
                    message.sender_id = parseInt(object.sender_id, 10);
                else if (typeof object.sender_id === "number")
                    message.sender_id = object.sender_id;
                else if (typeof object.sender_id === "object")
                    message.sender_id = new $util.LongBits(object.sender_id.low >>> 0, object.sender_id.high >>> 0).toNumber();
            if (object.sender_name != null)
                message.sender_name = String(object.sender_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOLobbyInvite message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOLobbyInvite
         * @static
         * @param {CSOLobbyInvite} message CSOLobbyInvite
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOLobbyInvite.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.sender_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.sender_id = options.longs === String ? "0" : 0;
                object.sender_name = "";
            }
            if (message.group_id != null && message.hasOwnProperty("group_id"))
                if (typeof message.group_id === "number")
                    object.group_id = options.longs === String ? String(message.group_id) : message.group_id;
                else
                    object.group_id = options.longs === String ? $util.Long.prototype.toString.call(message.group_id) : options.longs === Number ? new $util.LongBits(message.group_id.low >>> 0, message.group_id.high >>> 0).toNumber(true) : message.group_id;
            if (message.sender_id != null && message.hasOwnProperty("sender_id"))
                if (typeof message.sender_id === "number")
                    object.sender_id = options.longs === String ? String(message.sender_id) : message.sender_id;
                else
                    object.sender_id = options.longs === String ? $util.Long.prototype.toString.call(message.sender_id) : options.longs === Number ? new $util.LongBits(message.sender_id.low >>> 0, message.sender_id.high >>> 0).toNumber() : message.sender_id;
            if (message.sender_name != null && message.hasOwnProperty("sender_name"))
                object.sender_name = message.sender_name;
            return object;
        };
    
        /**
         * Converts this CSOLobbyInvite to JSON.
         * @function toJSON
         * @memberof CSOLobbyInvite
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOLobbyInvite.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOLobbyInvite
         * @function getTypeUrl
         * @memberof CSOLobbyInvite
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOLobbyInvite.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOLobbyInvite";
        };
    
        return CSOLobbyInvite;
    })();
    
    $root.CMsgSystemBroadcast = (function() {
    
        /**
         * Properties of a CMsgSystemBroadcast.
         * @exports ICMsgSystemBroadcast
         * @interface ICMsgSystemBroadcast
         * @property {string|null} [message] CMsgSystemBroadcast message
         */
    
        /**
         * Constructs a new CMsgSystemBroadcast.
         * @exports CMsgSystemBroadcast
         * @classdesc Represents a CMsgSystemBroadcast.
         * @implements ICMsgSystemBroadcast
         * @constructor
         * @param {ICMsgSystemBroadcast=} [properties] Properties to set
         */
        function CMsgSystemBroadcast(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSystemBroadcast message.
         * @member {string} message
         * @memberof CMsgSystemBroadcast
         * @instance
         */
        CMsgSystemBroadcast.prototype.message = "";
    
        /**
         * Creates a new CMsgSystemBroadcast instance using the specified properties.
         * @function create
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {ICMsgSystemBroadcast=} [properties] Properties to set
         * @returns {CMsgSystemBroadcast} CMsgSystemBroadcast instance
         */
        CMsgSystemBroadcast.create = function create(properties) {
            return new CMsgSystemBroadcast(properties);
        };
    
        /**
         * Encodes the specified CMsgSystemBroadcast message. Does not implicitly {@link CMsgSystemBroadcast.verify|verify} messages.
         * @function encode
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {ICMsgSystemBroadcast} message CMsgSystemBroadcast message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSystemBroadcast.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSystemBroadcast message, length delimited. Does not implicitly {@link CMsgSystemBroadcast.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {ICMsgSystemBroadcast} message CMsgSystemBroadcast message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSystemBroadcast.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSystemBroadcast message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSystemBroadcast} CMsgSystemBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSystemBroadcast.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSystemBroadcast();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.message = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSystemBroadcast message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSystemBroadcast} CMsgSystemBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSystemBroadcast.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSystemBroadcast message.
         * @function verify
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSystemBroadcast.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.message != null && message.hasOwnProperty("message"))
                if (!$util.isString(message.message))
                    return "message: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgSystemBroadcast message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSystemBroadcast} CMsgSystemBroadcast
         */
        CMsgSystemBroadcast.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSystemBroadcast)
                return object;
            var message = new $root.CMsgSystemBroadcast();
            if (object.message != null)
                message.message = String(object.message);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSystemBroadcast message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {CMsgSystemBroadcast} message CMsgSystemBroadcast
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSystemBroadcast.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.message = "";
            if (message.message != null && message.hasOwnProperty("message"))
                object.message = message.message;
            return object;
        };
    
        /**
         * Converts this CMsgSystemBroadcast to JSON.
         * @function toJSON
         * @memberof CMsgSystemBroadcast
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSystemBroadcast.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSystemBroadcast
         * @function getTypeUrl
         * @memberof CMsgSystemBroadcast
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSystemBroadcast.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSystemBroadcast";
        };
    
        return CMsgSystemBroadcast;
    })();
    
    $root.CMsgInviteToParty = (function() {
    
        /**
         * Properties of a CMsgInviteToParty.
         * @exports ICMsgInviteToParty
         * @interface ICMsgInviteToParty
         * @property {number|Long|null} [steam_id] CMsgInviteToParty steam_id
         * @property {number|null} [client_version] CMsgInviteToParty client_version
         * @property {number|null} [team_invite] CMsgInviteToParty team_invite
         */
    
        /**
         * Constructs a new CMsgInviteToParty.
         * @exports CMsgInviteToParty
         * @classdesc Represents a CMsgInviteToParty.
         * @implements ICMsgInviteToParty
         * @constructor
         * @param {ICMsgInviteToParty=} [properties] Properties to set
         */
        function CMsgInviteToParty(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgInviteToParty steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgInviteToParty
         * @instance
         */
        CMsgInviteToParty.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgInviteToParty client_version.
         * @member {number} client_version
         * @memberof CMsgInviteToParty
         * @instance
         */
        CMsgInviteToParty.prototype.client_version = 0;
    
        /**
         * CMsgInviteToParty team_invite.
         * @member {number} team_invite
         * @memberof CMsgInviteToParty
         * @instance
         */
        CMsgInviteToParty.prototype.team_invite = 0;
    
        /**
         * Creates a new CMsgInviteToParty instance using the specified properties.
         * @function create
         * @memberof CMsgInviteToParty
         * @static
         * @param {ICMsgInviteToParty=} [properties] Properties to set
         * @returns {CMsgInviteToParty} CMsgInviteToParty instance
         */
        CMsgInviteToParty.create = function create(properties) {
            return new CMsgInviteToParty(properties);
        };
    
        /**
         * Encodes the specified CMsgInviteToParty message. Does not implicitly {@link CMsgInviteToParty.verify|verify} messages.
         * @function encode
         * @memberof CMsgInviteToParty
         * @static
         * @param {ICMsgInviteToParty} message CMsgInviteToParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgInviteToParty.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            if (message.client_version != null && Object.hasOwnProperty.call(message, "client_version"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.client_version);
            if (message.team_invite != null && Object.hasOwnProperty.call(message, "team_invite"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.team_invite);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgInviteToParty message, length delimited. Does not implicitly {@link CMsgInviteToParty.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgInviteToParty
         * @static
         * @param {ICMsgInviteToParty} message CMsgInviteToParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgInviteToParty.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgInviteToParty message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgInviteToParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgInviteToParty} CMsgInviteToParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgInviteToParty.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgInviteToParty();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.steam_id = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.client_version = reader.uint32();
                        break;
                    }
                case 3: {
                        message.team_invite = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgInviteToParty message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgInviteToParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgInviteToParty} CMsgInviteToParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgInviteToParty.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgInviteToParty message.
         * @function verify
         * @memberof CMsgInviteToParty
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgInviteToParty.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            if (message.client_version != null && message.hasOwnProperty("client_version"))
                if (!$util.isInteger(message.client_version))
                    return "client_version: integer expected";
            if (message.team_invite != null && message.hasOwnProperty("team_invite"))
                if (!$util.isInteger(message.team_invite))
                    return "team_invite: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgInviteToParty message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgInviteToParty
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgInviteToParty} CMsgInviteToParty
         */
        CMsgInviteToParty.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgInviteToParty)
                return object;
            var message = new $root.CMsgInviteToParty();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            if (object.client_version != null)
                message.client_version = object.client_version >>> 0;
            if (object.team_invite != null)
                message.team_invite = object.team_invite >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgInviteToParty message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgInviteToParty
         * @static
         * @param {CMsgInviteToParty} message CMsgInviteToParty
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgInviteToParty.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
                object.client_version = 0;
                object.team_invite = 0;
            }
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            if (message.client_version != null && message.hasOwnProperty("client_version"))
                object.client_version = message.client_version;
            if (message.team_invite != null && message.hasOwnProperty("team_invite"))
                object.team_invite = message.team_invite;
            return object;
        };
    
        /**
         * Converts this CMsgInviteToParty to JSON.
         * @function toJSON
         * @memberof CMsgInviteToParty
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgInviteToParty.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgInviteToParty
         * @function getTypeUrl
         * @memberof CMsgInviteToParty
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgInviteToParty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgInviteToParty";
        };
    
        return CMsgInviteToParty;
    })();
    
    $root.CMsgInvitationCreated = (function() {
    
        /**
         * Properties of a CMsgInvitationCreated.
         * @exports ICMsgInvitationCreated
         * @interface ICMsgInvitationCreated
         * @property {number|Long|null} [group_id] CMsgInvitationCreated group_id
         * @property {number|Long|null} [steam_id] CMsgInvitationCreated steam_id
         */
    
        /**
         * Constructs a new CMsgInvitationCreated.
         * @exports CMsgInvitationCreated
         * @classdesc Represents a CMsgInvitationCreated.
         * @implements ICMsgInvitationCreated
         * @constructor
         * @param {ICMsgInvitationCreated=} [properties] Properties to set
         */
        function CMsgInvitationCreated(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgInvitationCreated group_id.
         * @member {number|Long} group_id
         * @memberof CMsgInvitationCreated
         * @instance
         */
        CMsgInvitationCreated.prototype.group_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgInvitationCreated steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgInvitationCreated
         * @instance
         */
        CMsgInvitationCreated.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgInvitationCreated instance using the specified properties.
         * @function create
         * @memberof CMsgInvitationCreated
         * @static
         * @param {ICMsgInvitationCreated=} [properties] Properties to set
         * @returns {CMsgInvitationCreated} CMsgInvitationCreated instance
         */
        CMsgInvitationCreated.create = function create(properties) {
            return new CMsgInvitationCreated(properties);
        };
    
        /**
         * Encodes the specified CMsgInvitationCreated message. Does not implicitly {@link CMsgInvitationCreated.verify|verify} messages.
         * @function encode
         * @memberof CMsgInvitationCreated
         * @static
         * @param {ICMsgInvitationCreated} message CMsgInvitationCreated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgInvitationCreated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.group_id != null && Object.hasOwnProperty.call(message, "group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.group_id);
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgInvitationCreated message, length delimited. Does not implicitly {@link CMsgInvitationCreated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgInvitationCreated
         * @static
         * @param {ICMsgInvitationCreated} message CMsgInvitationCreated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgInvitationCreated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgInvitationCreated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgInvitationCreated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgInvitationCreated} CMsgInvitationCreated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgInvitationCreated.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgInvitationCreated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.group_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.steam_id = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgInvitationCreated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgInvitationCreated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgInvitationCreated} CMsgInvitationCreated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgInvitationCreated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgInvitationCreated message.
         * @function verify
         * @memberof CMsgInvitationCreated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgInvitationCreated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.group_id != null && message.hasOwnProperty("group_id"))
                if (!$util.isInteger(message.group_id) && !(message.group_id && $util.isInteger(message.group_id.low) && $util.isInteger(message.group_id.high)))
                    return "group_id: integer|Long expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgInvitationCreated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgInvitationCreated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgInvitationCreated} CMsgInvitationCreated
         */
        CMsgInvitationCreated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgInvitationCreated)
                return object;
            var message = new $root.CMsgInvitationCreated();
            if (object.group_id != null)
                if ($util.Long)
                    (message.group_id = $util.Long.fromValue(object.group_id)).unsigned = true;
                else if (typeof object.group_id === "string")
                    message.group_id = parseInt(object.group_id, 10);
                else if (typeof object.group_id === "number")
                    message.group_id = object.group_id;
                else if (typeof object.group_id === "object")
                    message.group_id = new $util.LongBits(object.group_id.low >>> 0, object.group_id.high >>> 0).toNumber(true);
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgInvitationCreated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgInvitationCreated
         * @static
         * @param {CMsgInvitationCreated} message CMsgInvitationCreated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgInvitationCreated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.group_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.group_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
            }
            if (message.group_id != null && message.hasOwnProperty("group_id"))
                if (typeof message.group_id === "number")
                    object.group_id = options.longs === String ? String(message.group_id) : message.group_id;
                else
                    object.group_id = options.longs === String ? $util.Long.prototype.toString.call(message.group_id) : options.longs === Number ? new $util.LongBits(message.group_id.low >>> 0, message.group_id.high >>> 0).toNumber(true) : message.group_id;
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgInvitationCreated to JSON.
         * @function toJSON
         * @memberof CMsgInvitationCreated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgInvitationCreated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgInvitationCreated
         * @function getTypeUrl
         * @memberof CMsgInvitationCreated
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgInvitationCreated.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgInvitationCreated";
        };
    
        return CMsgInvitationCreated;
    })();
    
    $root.CMsgPartyInviteResponse = (function() {
    
        /**
         * Properties of a CMsgPartyInviteResponse.
         * @exports ICMsgPartyInviteResponse
         * @interface ICMsgPartyInviteResponse
         * @property {number|Long|null} [party_id] CMsgPartyInviteResponse party_id
         * @property {boolean|null} [accept] CMsgPartyInviteResponse accept
         * @property {number|null} [client_version] CMsgPartyInviteResponse client_version
         * @property {number|null} [team_invite] CMsgPartyInviteResponse team_invite
         */
    
        /**
         * Constructs a new CMsgPartyInviteResponse.
         * @exports CMsgPartyInviteResponse
         * @classdesc Represents a CMsgPartyInviteResponse.
         * @implements ICMsgPartyInviteResponse
         * @constructor
         * @param {ICMsgPartyInviteResponse=} [properties] Properties to set
         */
        function CMsgPartyInviteResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgPartyInviteResponse party_id.
         * @member {number|Long} party_id
         * @memberof CMsgPartyInviteResponse
         * @instance
         */
        CMsgPartyInviteResponse.prototype.party_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgPartyInviteResponse accept.
         * @member {boolean} accept
         * @memberof CMsgPartyInviteResponse
         * @instance
         */
        CMsgPartyInviteResponse.prototype.accept = false;
    
        /**
         * CMsgPartyInviteResponse client_version.
         * @member {number} client_version
         * @memberof CMsgPartyInviteResponse
         * @instance
         */
        CMsgPartyInviteResponse.prototype.client_version = 0;
    
        /**
         * CMsgPartyInviteResponse team_invite.
         * @member {number} team_invite
         * @memberof CMsgPartyInviteResponse
         * @instance
         */
        CMsgPartyInviteResponse.prototype.team_invite = 0;
    
        /**
         * Creates a new CMsgPartyInviteResponse instance using the specified properties.
         * @function create
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {ICMsgPartyInviteResponse=} [properties] Properties to set
         * @returns {CMsgPartyInviteResponse} CMsgPartyInviteResponse instance
         */
        CMsgPartyInviteResponse.create = function create(properties) {
            return new CMsgPartyInviteResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgPartyInviteResponse message. Does not implicitly {@link CMsgPartyInviteResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {ICMsgPartyInviteResponse} message CMsgPartyInviteResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgPartyInviteResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.party_id != null && Object.hasOwnProperty.call(message, "party_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.party_id);
            if (message.accept != null && Object.hasOwnProperty.call(message, "accept"))
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.accept);
            if (message.client_version != null && Object.hasOwnProperty.call(message, "client_version"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.client_version);
            if (message.team_invite != null && Object.hasOwnProperty.call(message, "team_invite"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.team_invite);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgPartyInviteResponse message, length delimited. Does not implicitly {@link CMsgPartyInviteResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {ICMsgPartyInviteResponse} message CMsgPartyInviteResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgPartyInviteResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgPartyInviteResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgPartyInviteResponse} CMsgPartyInviteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgPartyInviteResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgPartyInviteResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.party_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.accept = reader.bool();
                        break;
                    }
                case 3: {
                        message.client_version = reader.uint32();
                        break;
                    }
                case 4: {
                        message.team_invite = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgPartyInviteResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgPartyInviteResponse} CMsgPartyInviteResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgPartyInviteResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgPartyInviteResponse message.
         * @function verify
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgPartyInviteResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.party_id != null && message.hasOwnProperty("party_id"))
                if (!$util.isInteger(message.party_id) && !(message.party_id && $util.isInteger(message.party_id.low) && $util.isInteger(message.party_id.high)))
                    return "party_id: integer|Long expected";
            if (message.accept != null && message.hasOwnProperty("accept"))
                if (typeof message.accept !== "boolean")
                    return "accept: boolean expected";
            if (message.client_version != null && message.hasOwnProperty("client_version"))
                if (!$util.isInteger(message.client_version))
                    return "client_version: integer expected";
            if (message.team_invite != null && message.hasOwnProperty("team_invite"))
                if (!$util.isInteger(message.team_invite))
                    return "team_invite: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgPartyInviteResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgPartyInviteResponse} CMsgPartyInviteResponse
         */
        CMsgPartyInviteResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgPartyInviteResponse)
                return object;
            var message = new $root.CMsgPartyInviteResponse();
            if (object.party_id != null)
                if ($util.Long)
                    (message.party_id = $util.Long.fromValue(object.party_id)).unsigned = true;
                else if (typeof object.party_id === "string")
                    message.party_id = parseInt(object.party_id, 10);
                else if (typeof object.party_id === "number")
                    message.party_id = object.party_id;
                else if (typeof object.party_id === "object")
                    message.party_id = new $util.LongBits(object.party_id.low >>> 0, object.party_id.high >>> 0).toNumber(true);
            if (object.accept != null)
                message.accept = Boolean(object.accept);
            if (object.client_version != null)
                message.client_version = object.client_version >>> 0;
            if (object.team_invite != null)
                message.team_invite = object.team_invite >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgPartyInviteResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {CMsgPartyInviteResponse} message CMsgPartyInviteResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgPartyInviteResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.party_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.party_id = options.longs === String ? "0" : 0;
                object.accept = false;
                object.client_version = 0;
                object.team_invite = 0;
            }
            if (message.party_id != null && message.hasOwnProperty("party_id"))
                if (typeof message.party_id === "number")
                    object.party_id = options.longs === String ? String(message.party_id) : message.party_id;
                else
                    object.party_id = options.longs === String ? $util.Long.prototype.toString.call(message.party_id) : options.longs === Number ? new $util.LongBits(message.party_id.low >>> 0, message.party_id.high >>> 0).toNumber(true) : message.party_id;
            if (message.accept != null && message.hasOwnProperty("accept"))
                object.accept = message.accept;
            if (message.client_version != null && message.hasOwnProperty("client_version"))
                object.client_version = message.client_version;
            if (message.team_invite != null && message.hasOwnProperty("team_invite"))
                object.team_invite = message.team_invite;
            return object;
        };
    
        /**
         * Converts this CMsgPartyInviteResponse to JSON.
         * @function toJSON
         * @memberof CMsgPartyInviteResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgPartyInviteResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgPartyInviteResponse
         * @function getTypeUrl
         * @memberof CMsgPartyInviteResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgPartyInviteResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgPartyInviteResponse";
        };
    
        return CMsgPartyInviteResponse;
    })();
    
    $root.CMsgKickFromParty = (function() {
    
        /**
         * Properties of a CMsgKickFromParty.
         * @exports ICMsgKickFromParty
         * @interface ICMsgKickFromParty
         * @property {number|Long|null} [steam_id] CMsgKickFromParty steam_id
         */
    
        /**
         * Constructs a new CMsgKickFromParty.
         * @exports CMsgKickFromParty
         * @classdesc Represents a CMsgKickFromParty.
         * @implements ICMsgKickFromParty
         * @constructor
         * @param {ICMsgKickFromParty=} [properties] Properties to set
         */
        function CMsgKickFromParty(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgKickFromParty steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgKickFromParty
         * @instance
         */
        CMsgKickFromParty.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgKickFromParty instance using the specified properties.
         * @function create
         * @memberof CMsgKickFromParty
         * @static
         * @param {ICMsgKickFromParty=} [properties] Properties to set
         * @returns {CMsgKickFromParty} CMsgKickFromParty instance
         */
        CMsgKickFromParty.create = function create(properties) {
            return new CMsgKickFromParty(properties);
        };
    
        /**
         * Encodes the specified CMsgKickFromParty message. Does not implicitly {@link CMsgKickFromParty.verify|verify} messages.
         * @function encode
         * @memberof CMsgKickFromParty
         * @static
         * @param {ICMsgKickFromParty} message CMsgKickFromParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgKickFromParty.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgKickFromParty message, length delimited. Does not implicitly {@link CMsgKickFromParty.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgKickFromParty
         * @static
         * @param {ICMsgKickFromParty} message CMsgKickFromParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgKickFromParty.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgKickFromParty message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgKickFromParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgKickFromParty} CMsgKickFromParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgKickFromParty.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgKickFromParty();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.steam_id = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgKickFromParty message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgKickFromParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgKickFromParty} CMsgKickFromParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgKickFromParty.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgKickFromParty message.
         * @function verify
         * @memberof CMsgKickFromParty
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgKickFromParty.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgKickFromParty message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgKickFromParty
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgKickFromParty} CMsgKickFromParty
         */
        CMsgKickFromParty.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgKickFromParty)
                return object;
            var message = new $root.CMsgKickFromParty();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgKickFromParty message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgKickFromParty
         * @static
         * @param {CMsgKickFromParty} message CMsgKickFromParty
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgKickFromParty.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgKickFromParty to JSON.
         * @function toJSON
         * @memberof CMsgKickFromParty
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgKickFromParty.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgKickFromParty
         * @function getTypeUrl
         * @memberof CMsgKickFromParty
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgKickFromParty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgKickFromParty";
        };
    
        return CMsgKickFromParty;
    })();
    
    $root.CMsgLeaveParty = (function() {
    
        /**
         * Properties of a CMsgLeaveParty.
         * @exports ICMsgLeaveParty
         * @interface ICMsgLeaveParty
         */
    
        /**
         * Constructs a new CMsgLeaveParty.
         * @exports CMsgLeaveParty
         * @classdesc Represents a CMsgLeaveParty.
         * @implements ICMsgLeaveParty
         * @constructor
         * @param {ICMsgLeaveParty=} [properties] Properties to set
         */
        function CMsgLeaveParty(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgLeaveParty instance using the specified properties.
         * @function create
         * @memberof CMsgLeaveParty
         * @static
         * @param {ICMsgLeaveParty=} [properties] Properties to set
         * @returns {CMsgLeaveParty} CMsgLeaveParty instance
         */
        CMsgLeaveParty.create = function create(properties) {
            return new CMsgLeaveParty(properties);
        };
    
        /**
         * Encodes the specified CMsgLeaveParty message. Does not implicitly {@link CMsgLeaveParty.verify|verify} messages.
         * @function encode
         * @memberof CMsgLeaveParty
         * @static
         * @param {ICMsgLeaveParty} message CMsgLeaveParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgLeaveParty.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgLeaveParty message, length delimited. Does not implicitly {@link CMsgLeaveParty.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgLeaveParty
         * @static
         * @param {ICMsgLeaveParty} message CMsgLeaveParty message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgLeaveParty.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgLeaveParty message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgLeaveParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgLeaveParty} CMsgLeaveParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgLeaveParty.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgLeaveParty();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgLeaveParty message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgLeaveParty
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgLeaveParty} CMsgLeaveParty
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgLeaveParty.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgLeaveParty message.
         * @function verify
         * @memberof CMsgLeaveParty
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgLeaveParty.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgLeaveParty message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgLeaveParty
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgLeaveParty} CMsgLeaveParty
         */
        CMsgLeaveParty.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgLeaveParty)
                return object;
            return new $root.CMsgLeaveParty();
        };
    
        /**
         * Creates a plain object from a CMsgLeaveParty message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgLeaveParty
         * @static
         * @param {CMsgLeaveParty} message CMsgLeaveParty
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgLeaveParty.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgLeaveParty to JSON.
         * @function toJSON
         * @memberof CMsgLeaveParty
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgLeaveParty.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgLeaveParty
         * @function getTypeUrl
         * @memberof CMsgLeaveParty
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgLeaveParty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgLeaveParty";
        };
    
        return CMsgLeaveParty;
    })();
    
    $root.CMsgServerAvailable = (function() {
    
        /**
         * Properties of a CMsgServerAvailable.
         * @exports ICMsgServerAvailable
         * @interface ICMsgServerAvailable
         */
    
        /**
         * Constructs a new CMsgServerAvailable.
         * @exports CMsgServerAvailable
         * @classdesc Represents a CMsgServerAvailable.
         * @implements ICMsgServerAvailable
         * @constructor
         * @param {ICMsgServerAvailable=} [properties] Properties to set
         */
        function CMsgServerAvailable(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgServerAvailable instance using the specified properties.
         * @function create
         * @memberof CMsgServerAvailable
         * @static
         * @param {ICMsgServerAvailable=} [properties] Properties to set
         * @returns {CMsgServerAvailable} CMsgServerAvailable instance
         */
        CMsgServerAvailable.create = function create(properties) {
            return new CMsgServerAvailable(properties);
        };
    
        /**
         * Encodes the specified CMsgServerAvailable message. Does not implicitly {@link CMsgServerAvailable.verify|verify} messages.
         * @function encode
         * @memberof CMsgServerAvailable
         * @static
         * @param {ICMsgServerAvailable} message CMsgServerAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgServerAvailable.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgServerAvailable message, length delimited. Does not implicitly {@link CMsgServerAvailable.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgServerAvailable
         * @static
         * @param {ICMsgServerAvailable} message CMsgServerAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgServerAvailable.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgServerAvailable message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgServerAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgServerAvailable} CMsgServerAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgServerAvailable.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgServerAvailable();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgServerAvailable message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgServerAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgServerAvailable} CMsgServerAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgServerAvailable.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgServerAvailable message.
         * @function verify
         * @memberof CMsgServerAvailable
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgServerAvailable.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgServerAvailable message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgServerAvailable
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgServerAvailable} CMsgServerAvailable
         */
        CMsgServerAvailable.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgServerAvailable)
                return object;
            return new $root.CMsgServerAvailable();
        };
    
        /**
         * Creates a plain object from a CMsgServerAvailable message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgServerAvailable
         * @static
         * @param {CMsgServerAvailable} message CMsgServerAvailable
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgServerAvailable.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgServerAvailable to JSON.
         * @function toJSON
         * @memberof CMsgServerAvailable
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgServerAvailable.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgServerAvailable
         * @function getTypeUrl
         * @memberof CMsgServerAvailable
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgServerAvailable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgServerAvailable";
        };
    
        return CMsgServerAvailable;
    })();
    
    $root.CMsgLANServerAvailable = (function() {
    
        /**
         * Properties of a CMsgLANServerAvailable.
         * @exports ICMsgLANServerAvailable
         * @interface ICMsgLANServerAvailable
         * @property {number|Long|null} [lobby_id] CMsgLANServerAvailable lobby_id
         */
    
        /**
         * Constructs a new CMsgLANServerAvailable.
         * @exports CMsgLANServerAvailable
         * @classdesc Represents a CMsgLANServerAvailable.
         * @implements ICMsgLANServerAvailable
         * @constructor
         * @param {ICMsgLANServerAvailable=} [properties] Properties to set
         */
        function CMsgLANServerAvailable(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgLANServerAvailable lobby_id.
         * @member {number|Long} lobby_id
         * @memberof CMsgLANServerAvailable
         * @instance
         */
        CMsgLANServerAvailable.prototype.lobby_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgLANServerAvailable instance using the specified properties.
         * @function create
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {ICMsgLANServerAvailable=} [properties] Properties to set
         * @returns {CMsgLANServerAvailable} CMsgLANServerAvailable instance
         */
        CMsgLANServerAvailable.create = function create(properties) {
            return new CMsgLANServerAvailable(properties);
        };
    
        /**
         * Encodes the specified CMsgLANServerAvailable message. Does not implicitly {@link CMsgLANServerAvailable.verify|verify} messages.
         * @function encode
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {ICMsgLANServerAvailable} message CMsgLANServerAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgLANServerAvailable.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.lobby_id != null && Object.hasOwnProperty.call(message, "lobby_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.lobby_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgLANServerAvailable message, length delimited. Does not implicitly {@link CMsgLANServerAvailable.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {ICMsgLANServerAvailable} message CMsgLANServerAvailable message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgLANServerAvailable.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgLANServerAvailable message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgLANServerAvailable} CMsgLANServerAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgLANServerAvailable.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgLANServerAvailable();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.lobby_id = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgLANServerAvailable message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgLANServerAvailable} CMsgLANServerAvailable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgLANServerAvailable.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgLANServerAvailable message.
         * @function verify
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgLANServerAvailable.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.lobby_id != null && message.hasOwnProperty("lobby_id"))
                if (!$util.isInteger(message.lobby_id) && !(message.lobby_id && $util.isInteger(message.lobby_id.low) && $util.isInteger(message.lobby_id.high)))
                    return "lobby_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgLANServerAvailable message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgLANServerAvailable} CMsgLANServerAvailable
         */
        CMsgLANServerAvailable.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgLANServerAvailable)
                return object;
            var message = new $root.CMsgLANServerAvailable();
            if (object.lobby_id != null)
                if ($util.Long)
                    (message.lobby_id = $util.Long.fromValue(object.lobby_id)).unsigned = false;
                else if (typeof object.lobby_id === "string")
                    message.lobby_id = parseInt(object.lobby_id, 10);
                else if (typeof object.lobby_id === "number")
                    message.lobby_id = object.lobby_id;
                else if (typeof object.lobby_id === "object")
                    message.lobby_id = new $util.LongBits(object.lobby_id.low >>> 0, object.lobby_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgLANServerAvailable message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {CMsgLANServerAvailable} message CMsgLANServerAvailable
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgLANServerAvailable.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.lobby_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.lobby_id = options.longs === String ? "0" : 0;
            if (message.lobby_id != null && message.hasOwnProperty("lobby_id"))
                if (typeof message.lobby_id === "number")
                    object.lobby_id = options.longs === String ? String(message.lobby_id) : message.lobby_id;
                else
                    object.lobby_id = options.longs === String ? $util.Long.prototype.toString.call(message.lobby_id) : options.longs === Number ? new $util.LongBits(message.lobby_id.low >>> 0, message.lobby_id.high >>> 0).toNumber() : message.lobby_id;
            return object;
        };
    
        /**
         * Converts this CMsgLANServerAvailable to JSON.
         * @function toJSON
         * @memberof CMsgLANServerAvailable
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgLANServerAvailable.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgLANServerAvailable
         * @function getTypeUrl
         * @memberof CMsgLANServerAvailable
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgLANServerAvailable.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgLANServerAvailable";
        };
    
        return CMsgLANServerAvailable;
    })();
    
    $root.CSOEconGameAccountClient = (function() {
    
        /**
         * Properties of a CSOEconGameAccountClient.
         * @exports ICSOEconGameAccountClient
         * @interface ICSOEconGameAccountClient
         * @property {number|null} [additional_backpack_slots] CSOEconGameAccountClient additional_backpack_slots
         * @property {number|null} [trade_ban_expiration] CSOEconGameAccountClient trade_ban_expiration
         * @property {number|null} [bonus_xp_timestamp_refresh] CSOEconGameAccountClient bonus_xp_timestamp_refresh
         * @property {number|null} [bonus_xp_usedflags] CSOEconGameAccountClient bonus_xp_usedflags
         * @property {number|null} [elevated_state] CSOEconGameAccountClient elevated_state
         * @property {number|null} [elevated_timestamp] CSOEconGameAccountClient elevated_timestamp
         */
    
        /**
         * Constructs a new CSOEconGameAccountClient.
         * @exports CSOEconGameAccountClient
         * @classdesc Represents a CSOEconGameAccountClient.
         * @implements ICSOEconGameAccountClient
         * @constructor
         * @param {ICSOEconGameAccountClient=} [properties] Properties to set
         */
        function CSOEconGameAccountClient(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconGameAccountClient additional_backpack_slots.
         * @member {number} additional_backpack_slots
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.additional_backpack_slots = 0;
    
        /**
         * CSOEconGameAccountClient trade_ban_expiration.
         * @member {number} trade_ban_expiration
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.trade_ban_expiration = 0;
    
        /**
         * CSOEconGameAccountClient bonus_xp_timestamp_refresh.
         * @member {number} bonus_xp_timestamp_refresh
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.bonus_xp_timestamp_refresh = 0;
    
        /**
         * CSOEconGameAccountClient bonus_xp_usedflags.
         * @member {number} bonus_xp_usedflags
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.bonus_xp_usedflags = 0;
    
        /**
         * CSOEconGameAccountClient elevated_state.
         * @member {number} elevated_state
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.elevated_state = 0;
    
        /**
         * CSOEconGameAccountClient elevated_timestamp.
         * @member {number} elevated_timestamp
         * @memberof CSOEconGameAccountClient
         * @instance
         */
        CSOEconGameAccountClient.prototype.elevated_timestamp = 0;
    
        /**
         * Creates a new CSOEconGameAccountClient instance using the specified properties.
         * @function create
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {ICSOEconGameAccountClient=} [properties] Properties to set
         * @returns {CSOEconGameAccountClient} CSOEconGameAccountClient instance
         */
        CSOEconGameAccountClient.create = function create(properties) {
            return new CSOEconGameAccountClient(properties);
        };
    
        /**
         * Encodes the specified CSOEconGameAccountClient message. Does not implicitly {@link CSOEconGameAccountClient.verify|verify} messages.
         * @function encode
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {ICSOEconGameAccountClient} message CSOEconGameAccountClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconGameAccountClient.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.additional_backpack_slots != null && Object.hasOwnProperty.call(message, "additional_backpack_slots"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.additional_backpack_slots);
            if (message.trade_ban_expiration != null && Object.hasOwnProperty.call(message, "trade_ban_expiration"))
                writer.uint32(/* id 6, wireType 5 =*/53).fixed32(message.trade_ban_expiration);
            if (message.bonus_xp_timestamp_refresh != null && Object.hasOwnProperty.call(message, "bonus_xp_timestamp_refresh"))
                writer.uint32(/* id 12, wireType 5 =*/101).fixed32(message.bonus_xp_timestamp_refresh);
            if (message.bonus_xp_usedflags != null && Object.hasOwnProperty.call(message, "bonus_xp_usedflags"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.bonus_xp_usedflags);
            if (message.elevated_state != null && Object.hasOwnProperty.call(message, "elevated_state"))
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.elevated_state);
            if (message.elevated_timestamp != null && Object.hasOwnProperty.call(message, "elevated_timestamp"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.elevated_timestamp);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconGameAccountClient message, length delimited. Does not implicitly {@link CSOEconGameAccountClient.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {ICSOEconGameAccountClient} message CSOEconGameAccountClient message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconGameAccountClient.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconGameAccountClient message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconGameAccountClient} CSOEconGameAccountClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconGameAccountClient.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconGameAccountClient();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.additional_backpack_slots = reader.uint32();
                        break;
                    }
                case 6: {
                        message.trade_ban_expiration = reader.fixed32();
                        break;
                    }
                case 12: {
                        message.bonus_xp_timestamp_refresh = reader.fixed32();
                        break;
                    }
                case 13: {
                        message.bonus_xp_usedflags = reader.uint32();
                        break;
                    }
                case 14: {
                        message.elevated_state = reader.uint32();
                        break;
                    }
                case 15: {
                        message.elevated_timestamp = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconGameAccountClient message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconGameAccountClient} CSOEconGameAccountClient
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconGameAccountClient.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconGameAccountClient message.
         * @function verify
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconGameAccountClient.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.additional_backpack_slots != null && message.hasOwnProperty("additional_backpack_slots"))
                if (!$util.isInteger(message.additional_backpack_slots))
                    return "additional_backpack_slots: integer expected";
            if (message.trade_ban_expiration != null && message.hasOwnProperty("trade_ban_expiration"))
                if (!$util.isInteger(message.trade_ban_expiration))
                    return "trade_ban_expiration: integer expected";
            if (message.bonus_xp_timestamp_refresh != null && message.hasOwnProperty("bonus_xp_timestamp_refresh"))
                if (!$util.isInteger(message.bonus_xp_timestamp_refresh))
                    return "bonus_xp_timestamp_refresh: integer expected";
            if (message.bonus_xp_usedflags != null && message.hasOwnProperty("bonus_xp_usedflags"))
                if (!$util.isInteger(message.bonus_xp_usedflags))
                    return "bonus_xp_usedflags: integer expected";
            if (message.elevated_state != null && message.hasOwnProperty("elevated_state"))
                if (!$util.isInteger(message.elevated_state))
                    return "elevated_state: integer expected";
            if (message.elevated_timestamp != null && message.hasOwnProperty("elevated_timestamp"))
                if (!$util.isInteger(message.elevated_timestamp))
                    return "elevated_timestamp: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconGameAccountClient message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconGameAccountClient} CSOEconGameAccountClient
         */
        CSOEconGameAccountClient.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconGameAccountClient)
                return object;
            var message = new $root.CSOEconGameAccountClient();
            if (object.additional_backpack_slots != null)
                message.additional_backpack_slots = object.additional_backpack_slots >>> 0;
            if (object.trade_ban_expiration != null)
                message.trade_ban_expiration = object.trade_ban_expiration >>> 0;
            if (object.bonus_xp_timestamp_refresh != null)
                message.bonus_xp_timestamp_refresh = object.bonus_xp_timestamp_refresh >>> 0;
            if (object.bonus_xp_usedflags != null)
                message.bonus_xp_usedflags = object.bonus_xp_usedflags >>> 0;
            if (object.elevated_state != null)
                message.elevated_state = object.elevated_state >>> 0;
            if (object.elevated_timestamp != null)
                message.elevated_timestamp = object.elevated_timestamp >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconGameAccountClient message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {CSOEconGameAccountClient} message CSOEconGameAccountClient
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconGameAccountClient.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.additional_backpack_slots = 0;
                object.trade_ban_expiration = 0;
                object.bonus_xp_timestamp_refresh = 0;
                object.bonus_xp_usedflags = 0;
                object.elevated_state = 0;
                object.elevated_timestamp = 0;
            }
            if (message.additional_backpack_slots != null && message.hasOwnProperty("additional_backpack_slots"))
                object.additional_backpack_slots = message.additional_backpack_slots;
            if (message.trade_ban_expiration != null && message.hasOwnProperty("trade_ban_expiration"))
                object.trade_ban_expiration = message.trade_ban_expiration;
            if (message.bonus_xp_timestamp_refresh != null && message.hasOwnProperty("bonus_xp_timestamp_refresh"))
                object.bonus_xp_timestamp_refresh = message.bonus_xp_timestamp_refresh;
            if (message.bonus_xp_usedflags != null && message.hasOwnProperty("bonus_xp_usedflags"))
                object.bonus_xp_usedflags = message.bonus_xp_usedflags;
            if (message.elevated_state != null && message.hasOwnProperty("elevated_state"))
                object.elevated_state = message.elevated_state;
            if (message.elevated_timestamp != null && message.hasOwnProperty("elevated_timestamp"))
                object.elevated_timestamp = message.elevated_timestamp;
            return object;
        };
    
        /**
         * Converts this CSOEconGameAccountClient to JSON.
         * @function toJSON
         * @memberof CSOEconGameAccountClient
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconGameAccountClient.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconGameAccountClient
         * @function getTypeUrl
         * @memberof CSOEconGameAccountClient
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconGameAccountClient.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconGameAccountClient";
        };
    
        return CSOEconGameAccountClient;
    })();
    
    $root.CSOItemCriteriaCondition = (function() {
    
        /**
         * Properties of a CSOItemCriteriaCondition.
         * @exports ICSOItemCriteriaCondition
         * @interface ICSOItemCriteriaCondition
         * @property {number|null} [op] CSOItemCriteriaCondition op
         * @property {string|null} [field] CSOItemCriteriaCondition field
         * @property {boolean|null} [required] CSOItemCriteriaCondition required
         * @property {number|null} [float_value] CSOItemCriteriaCondition float_value
         * @property {string|null} [string_value] CSOItemCriteriaCondition string_value
         */
    
        /**
         * Constructs a new CSOItemCriteriaCondition.
         * @exports CSOItemCriteriaCondition
         * @classdesc Represents a CSOItemCriteriaCondition.
         * @implements ICSOItemCriteriaCondition
         * @constructor
         * @param {ICSOItemCriteriaCondition=} [properties] Properties to set
         */
        function CSOItemCriteriaCondition(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOItemCriteriaCondition op.
         * @member {number} op
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.op = 0;
    
        /**
         * CSOItemCriteriaCondition field.
         * @member {string} field
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.field = "";
    
        /**
         * CSOItemCriteriaCondition required.
         * @member {boolean} required
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.required = false;
    
        /**
         * CSOItemCriteriaCondition float_value.
         * @member {number} float_value
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.float_value = 0;
    
        /**
         * CSOItemCriteriaCondition string_value.
         * @member {string} string_value
         * @memberof CSOItemCriteriaCondition
         * @instance
         */
        CSOItemCriteriaCondition.prototype.string_value = "";
    
        /**
         * Creates a new CSOItemCriteriaCondition instance using the specified properties.
         * @function create
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {ICSOItemCriteriaCondition=} [properties] Properties to set
         * @returns {CSOItemCriteriaCondition} CSOItemCriteriaCondition instance
         */
        CSOItemCriteriaCondition.create = function create(properties) {
            return new CSOItemCriteriaCondition(properties);
        };
    
        /**
         * Encodes the specified CSOItemCriteriaCondition message. Does not implicitly {@link CSOItemCriteriaCondition.verify|verify} messages.
         * @function encode
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {ICSOItemCriteriaCondition} message CSOItemCriteriaCondition message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemCriteriaCondition.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.op != null && Object.hasOwnProperty.call(message, "op"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.op);
            if (message.field != null && Object.hasOwnProperty.call(message, "field"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.field);
            if (message.required != null && Object.hasOwnProperty.call(message, "required"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.required);
            if (message.float_value != null && Object.hasOwnProperty.call(message, "float_value"))
                writer.uint32(/* id 4, wireType 5 =*/37).float(message.float_value);
            if (message.string_value != null && Object.hasOwnProperty.call(message, "string_value"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.string_value);
            return writer;
        };
    
        /**
         * Encodes the specified CSOItemCriteriaCondition message, length delimited. Does not implicitly {@link CSOItemCriteriaCondition.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {ICSOItemCriteriaCondition} message CSOItemCriteriaCondition message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemCriteriaCondition.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOItemCriteriaCondition message from the specified reader or buffer.
         * @function decode
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOItemCriteriaCondition} CSOItemCriteriaCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemCriteriaCondition.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOItemCriteriaCondition();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.op = reader.int32();
                        break;
                    }
                case 2: {
                        message.field = reader.string();
                        break;
                    }
                case 3: {
                        message.required = reader.bool();
                        break;
                    }
                case 4: {
                        message.float_value = reader.float();
                        break;
                    }
                case 5: {
                        message.string_value = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOItemCriteriaCondition message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOItemCriteriaCondition} CSOItemCriteriaCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemCriteriaCondition.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOItemCriteriaCondition message.
         * @function verify
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOItemCriteriaCondition.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.op != null && message.hasOwnProperty("op"))
                if (!$util.isInteger(message.op))
                    return "op: integer expected";
            if (message.field != null && message.hasOwnProperty("field"))
                if (!$util.isString(message.field))
                    return "field: string expected";
            if (message.required != null && message.hasOwnProperty("required"))
                if (typeof message.required !== "boolean")
                    return "required: boolean expected";
            if (message.float_value != null && message.hasOwnProperty("float_value"))
                if (typeof message.float_value !== "number")
                    return "float_value: number expected";
            if (message.string_value != null && message.hasOwnProperty("string_value"))
                if (!$util.isString(message.string_value))
                    return "string_value: string expected";
            return null;
        };
    
        /**
         * Creates a CSOItemCriteriaCondition message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOItemCriteriaCondition} CSOItemCriteriaCondition
         */
        CSOItemCriteriaCondition.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOItemCriteriaCondition)
                return object;
            var message = new $root.CSOItemCriteriaCondition();
            if (object.op != null)
                message.op = object.op | 0;
            if (object.field != null)
                message.field = String(object.field);
            if (object.required != null)
                message.required = Boolean(object.required);
            if (object.float_value != null)
                message.float_value = Number(object.float_value);
            if (object.string_value != null)
                message.string_value = String(object.string_value);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOItemCriteriaCondition message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {CSOItemCriteriaCondition} message CSOItemCriteriaCondition
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOItemCriteriaCondition.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.op = 0;
                object.field = "";
                object.required = false;
                object.float_value = 0;
                object.string_value = "";
            }
            if (message.op != null && message.hasOwnProperty("op"))
                object.op = message.op;
            if (message.field != null && message.hasOwnProperty("field"))
                object.field = message.field;
            if (message.required != null && message.hasOwnProperty("required"))
                object.required = message.required;
            if (message.float_value != null && message.hasOwnProperty("float_value"))
                object.float_value = options.json && !isFinite(message.float_value) ? String(message.float_value) : message.float_value;
            if (message.string_value != null && message.hasOwnProperty("string_value"))
                object.string_value = message.string_value;
            return object;
        };
    
        /**
         * Converts this CSOItemCriteriaCondition to JSON.
         * @function toJSON
         * @memberof CSOItemCriteriaCondition
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOItemCriteriaCondition.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOItemCriteriaCondition
         * @function getTypeUrl
         * @memberof CSOItemCriteriaCondition
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOItemCriteriaCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOItemCriteriaCondition";
        };
    
        return CSOItemCriteriaCondition;
    })();
    
    $root.CSOItemCriteria = (function() {
    
        /**
         * Properties of a CSOItemCriteria.
         * @exports ICSOItemCriteria
         * @interface ICSOItemCriteria
         * @property {number|null} [item_level] CSOItemCriteria item_level
         * @property {number|null} [item_quality] CSOItemCriteria item_quality
         * @property {boolean|null} [item_level_set] CSOItemCriteria item_level_set
         * @property {boolean|null} [item_quality_set] CSOItemCriteria item_quality_set
         * @property {number|null} [initial_inventory] CSOItemCriteria initial_inventory
         * @property {number|null} [initial_quantity] CSOItemCriteria initial_quantity
         * @property {boolean|null} [ignore_enabled_flag] CSOItemCriteria ignore_enabled_flag
         * @property {Array.<ICSOItemCriteriaCondition>|null} [conditions] CSOItemCriteria conditions
         * @property {number|null} [item_rarity] CSOItemCriteria item_rarity
         * @property {boolean|null} [item_rarity_set] CSOItemCriteria item_rarity_set
         * @property {boolean|null} [recent_only] CSOItemCriteria recent_only
         */
    
        /**
         * Constructs a new CSOItemCriteria.
         * @exports CSOItemCriteria
         * @classdesc Represents a CSOItemCriteria.
         * @implements ICSOItemCriteria
         * @constructor
         * @param {ICSOItemCriteria=} [properties] Properties to set
         */
        function CSOItemCriteria(properties) {
            this.conditions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOItemCriteria item_level.
         * @member {number} item_level
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.item_level = 0;
    
        /**
         * CSOItemCriteria item_quality.
         * @member {number} item_quality
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.item_quality = 0;
    
        /**
         * CSOItemCriteria item_level_set.
         * @member {boolean} item_level_set
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.item_level_set = false;
    
        /**
         * CSOItemCriteria item_quality_set.
         * @member {boolean} item_quality_set
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.item_quality_set = false;
    
        /**
         * CSOItemCriteria initial_inventory.
         * @member {number} initial_inventory
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.initial_inventory = 0;
    
        /**
         * CSOItemCriteria initial_quantity.
         * @member {number} initial_quantity
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.initial_quantity = 0;
    
        /**
         * CSOItemCriteria ignore_enabled_flag.
         * @member {boolean} ignore_enabled_flag
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.ignore_enabled_flag = false;
    
        /**
         * CSOItemCriteria conditions.
         * @member {Array.<ICSOItemCriteriaCondition>} conditions
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.conditions = $util.emptyArray;
    
        /**
         * CSOItemCriteria item_rarity.
         * @member {number} item_rarity
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.item_rarity = 0;
    
        /**
         * CSOItemCriteria item_rarity_set.
         * @member {boolean} item_rarity_set
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.item_rarity_set = false;
    
        /**
         * CSOItemCriteria recent_only.
         * @member {boolean} recent_only
         * @memberof CSOItemCriteria
         * @instance
         */
        CSOItemCriteria.prototype.recent_only = false;
    
        /**
         * Creates a new CSOItemCriteria instance using the specified properties.
         * @function create
         * @memberof CSOItemCriteria
         * @static
         * @param {ICSOItemCriteria=} [properties] Properties to set
         * @returns {CSOItemCriteria} CSOItemCriteria instance
         */
        CSOItemCriteria.create = function create(properties) {
            return new CSOItemCriteria(properties);
        };
    
        /**
         * Encodes the specified CSOItemCriteria message. Does not implicitly {@link CSOItemCriteria.verify|verify} messages.
         * @function encode
         * @memberof CSOItemCriteria
         * @static
         * @param {ICSOItemCriteria} message CSOItemCriteria message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemCriteria.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_level != null && Object.hasOwnProperty.call(message, "item_level"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.item_level);
            if (message.item_quality != null && Object.hasOwnProperty.call(message, "item_quality"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.item_quality);
            if (message.item_level_set != null && Object.hasOwnProperty.call(message, "item_level_set"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.item_level_set);
            if (message.item_quality_set != null && Object.hasOwnProperty.call(message, "item_quality_set"))
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.item_quality_set);
            if (message.initial_inventory != null && Object.hasOwnProperty.call(message, "initial_inventory"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.initial_inventory);
            if (message.initial_quantity != null && Object.hasOwnProperty.call(message, "initial_quantity"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.initial_quantity);
            if (message.ignore_enabled_flag != null && Object.hasOwnProperty.call(message, "ignore_enabled_flag"))
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.ignore_enabled_flag);
            if (message.conditions != null && message.conditions.length)
                for (var i = 0; i < message.conditions.length; ++i)
                    $root.CSOItemCriteriaCondition.encode(message.conditions[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
            if (message.item_rarity != null && Object.hasOwnProperty.call(message, "item_rarity"))
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.item_rarity);
            if (message.item_rarity_set != null && Object.hasOwnProperty.call(message, "item_rarity_set"))
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.item_rarity_set);
            if (message.recent_only != null && Object.hasOwnProperty.call(message, "recent_only"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.recent_only);
            return writer;
        };
    
        /**
         * Encodes the specified CSOItemCriteria message, length delimited. Does not implicitly {@link CSOItemCriteria.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOItemCriteria
         * @static
         * @param {ICSOItemCriteria} message CSOItemCriteria message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemCriteria.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOItemCriteria message from the specified reader or buffer.
         * @function decode
         * @memberof CSOItemCriteria
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOItemCriteria} CSOItemCriteria
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemCriteria.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOItemCriteria();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.item_level = reader.uint32();
                        break;
                    }
                case 2: {
                        message.item_quality = reader.int32();
                        break;
                    }
                case 3: {
                        message.item_level_set = reader.bool();
                        break;
                    }
                case 4: {
                        message.item_quality_set = reader.bool();
                        break;
                    }
                case 5: {
                        message.initial_inventory = reader.uint32();
                        break;
                    }
                case 6: {
                        message.initial_quantity = reader.uint32();
                        break;
                    }
                case 8: {
                        message.ignore_enabled_flag = reader.bool();
                        break;
                    }
                case 9: {
                        if (!(message.conditions && message.conditions.length))
                            message.conditions = [];
                        message.conditions.push($root.CSOItemCriteriaCondition.decode(reader, reader.uint32()));
                        break;
                    }
                case 10: {
                        message.item_rarity = reader.int32();
                        break;
                    }
                case 11: {
                        message.item_rarity_set = reader.bool();
                        break;
                    }
                case 12: {
                        message.recent_only = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOItemCriteria message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOItemCriteria
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOItemCriteria} CSOItemCriteria
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemCriteria.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOItemCriteria message.
         * @function verify
         * @memberof CSOItemCriteria
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOItemCriteria.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_level != null && message.hasOwnProperty("item_level"))
                if (!$util.isInteger(message.item_level))
                    return "item_level: integer expected";
            if (message.item_quality != null && message.hasOwnProperty("item_quality"))
                if (!$util.isInteger(message.item_quality))
                    return "item_quality: integer expected";
            if (message.item_level_set != null && message.hasOwnProperty("item_level_set"))
                if (typeof message.item_level_set !== "boolean")
                    return "item_level_set: boolean expected";
            if (message.item_quality_set != null && message.hasOwnProperty("item_quality_set"))
                if (typeof message.item_quality_set !== "boolean")
                    return "item_quality_set: boolean expected";
            if (message.initial_inventory != null && message.hasOwnProperty("initial_inventory"))
                if (!$util.isInteger(message.initial_inventory))
                    return "initial_inventory: integer expected";
            if (message.initial_quantity != null && message.hasOwnProperty("initial_quantity"))
                if (!$util.isInteger(message.initial_quantity))
                    return "initial_quantity: integer expected";
            if (message.ignore_enabled_flag != null && message.hasOwnProperty("ignore_enabled_flag"))
                if (typeof message.ignore_enabled_flag !== "boolean")
                    return "ignore_enabled_flag: boolean expected";
            if (message.conditions != null && message.hasOwnProperty("conditions")) {
                if (!Array.isArray(message.conditions))
                    return "conditions: array expected";
                for (var i = 0; i < message.conditions.length; ++i) {
                    var error = $root.CSOItemCriteriaCondition.verify(message.conditions[i]);
                    if (error)
                        return "conditions." + error;
                }
            }
            if (message.item_rarity != null && message.hasOwnProperty("item_rarity"))
                if (!$util.isInteger(message.item_rarity))
                    return "item_rarity: integer expected";
            if (message.item_rarity_set != null && message.hasOwnProperty("item_rarity_set"))
                if (typeof message.item_rarity_set !== "boolean")
                    return "item_rarity_set: boolean expected";
            if (message.recent_only != null && message.hasOwnProperty("recent_only"))
                if (typeof message.recent_only !== "boolean")
                    return "recent_only: boolean expected";
            return null;
        };
    
        /**
         * Creates a CSOItemCriteria message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOItemCriteria
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOItemCriteria} CSOItemCriteria
         */
        CSOItemCriteria.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOItemCriteria)
                return object;
            var message = new $root.CSOItemCriteria();
            if (object.item_level != null)
                message.item_level = object.item_level >>> 0;
            if (object.item_quality != null)
                message.item_quality = object.item_quality | 0;
            if (object.item_level_set != null)
                message.item_level_set = Boolean(object.item_level_set);
            if (object.item_quality_set != null)
                message.item_quality_set = Boolean(object.item_quality_set);
            if (object.initial_inventory != null)
                message.initial_inventory = object.initial_inventory >>> 0;
            if (object.initial_quantity != null)
                message.initial_quantity = object.initial_quantity >>> 0;
            if (object.ignore_enabled_flag != null)
                message.ignore_enabled_flag = Boolean(object.ignore_enabled_flag);
            if (object.conditions) {
                if (!Array.isArray(object.conditions))
                    throw TypeError(".CSOItemCriteria.conditions: array expected");
                message.conditions = [];
                for (var i = 0; i < object.conditions.length; ++i) {
                    if (typeof object.conditions[i] !== "object")
                        throw TypeError(".CSOItemCriteria.conditions: object expected");
                    message.conditions[i] = $root.CSOItemCriteriaCondition.fromObject(object.conditions[i]);
                }
            }
            if (object.item_rarity != null)
                message.item_rarity = object.item_rarity | 0;
            if (object.item_rarity_set != null)
                message.item_rarity_set = Boolean(object.item_rarity_set);
            if (object.recent_only != null)
                message.recent_only = Boolean(object.recent_only);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOItemCriteria message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOItemCriteria
         * @static
         * @param {CSOItemCriteria} message CSOItemCriteria
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOItemCriteria.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.conditions = [];
            if (options.defaults) {
                object.item_level = 0;
                object.item_quality = 0;
                object.item_level_set = false;
                object.item_quality_set = false;
                object.initial_inventory = 0;
                object.initial_quantity = 0;
                object.ignore_enabled_flag = false;
                object.item_rarity = 0;
                object.item_rarity_set = false;
                object.recent_only = false;
            }
            if (message.item_level != null && message.hasOwnProperty("item_level"))
                object.item_level = message.item_level;
            if (message.item_quality != null && message.hasOwnProperty("item_quality"))
                object.item_quality = message.item_quality;
            if (message.item_level_set != null && message.hasOwnProperty("item_level_set"))
                object.item_level_set = message.item_level_set;
            if (message.item_quality_set != null && message.hasOwnProperty("item_quality_set"))
                object.item_quality_set = message.item_quality_set;
            if (message.initial_inventory != null && message.hasOwnProperty("initial_inventory"))
                object.initial_inventory = message.initial_inventory;
            if (message.initial_quantity != null && message.hasOwnProperty("initial_quantity"))
                object.initial_quantity = message.initial_quantity;
            if (message.ignore_enabled_flag != null && message.hasOwnProperty("ignore_enabled_flag"))
                object.ignore_enabled_flag = message.ignore_enabled_flag;
            if (message.conditions && message.conditions.length) {
                object.conditions = [];
                for (var j = 0; j < message.conditions.length; ++j)
                    object.conditions[j] = $root.CSOItemCriteriaCondition.toObject(message.conditions[j], options);
            }
            if (message.item_rarity != null && message.hasOwnProperty("item_rarity"))
                object.item_rarity = message.item_rarity;
            if (message.item_rarity_set != null && message.hasOwnProperty("item_rarity_set"))
                object.item_rarity_set = message.item_rarity_set;
            if (message.recent_only != null && message.hasOwnProperty("recent_only"))
                object.recent_only = message.recent_only;
            return object;
        };
    
        /**
         * Converts this CSOItemCriteria to JSON.
         * @function toJSON
         * @memberof CSOItemCriteria
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOItemCriteria.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOItemCriteria
         * @function getTypeUrl
         * @memberof CSOItemCriteria
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOItemCriteria.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOItemCriteria";
        };
    
        return CSOItemCriteria;
    })();
    
    $root.CSOItemRecipe = (function() {
    
        /**
         * Properties of a CSOItemRecipe.
         * @exports ICSOItemRecipe
         * @interface ICSOItemRecipe
         * @property {number|null} [def_index] CSOItemRecipe def_index
         * @property {string|null} [name] CSOItemRecipe name
         * @property {string|null} [n_a] CSOItemRecipe n_a
         * @property {string|null} [desc_inputs] CSOItemRecipe desc_inputs
         * @property {string|null} [desc_outputs] CSOItemRecipe desc_outputs
         * @property {string|null} [di_a] CSOItemRecipe di_a
         * @property {string|null} [di_b] CSOItemRecipe di_b
         * @property {string|null} [di_c] CSOItemRecipe di_c
         * @property {string|null} [do_a] CSOItemRecipe do_a
         * @property {string|null} [do_b] CSOItemRecipe do_b
         * @property {string|null} [do_c] CSOItemRecipe do_c
         * @property {boolean|null} [requires_all_same_class] CSOItemRecipe requires_all_same_class
         * @property {boolean|null} [requires_all_same_slot] CSOItemRecipe requires_all_same_slot
         * @property {number|null} [class_usage_for_output] CSOItemRecipe class_usage_for_output
         * @property {number|null} [slot_usage_for_output] CSOItemRecipe slot_usage_for_output
         * @property {number|null} [set_for_output] CSOItemRecipe set_for_output
         * @property {Array.<ICSOItemCriteria>|null} [input_items_criteria] CSOItemRecipe input_items_criteria
         * @property {Array.<ICSOItemCriteria>|null} [output_items_criteria] CSOItemRecipe output_items_criteria
         * @property {Array.<number>|null} [input_item_dupe_counts] CSOItemRecipe input_item_dupe_counts
         */
    
        /**
         * Constructs a new CSOItemRecipe.
         * @exports CSOItemRecipe
         * @classdesc Represents a CSOItemRecipe.
         * @implements ICSOItemRecipe
         * @constructor
         * @param {ICSOItemRecipe=} [properties] Properties to set
         */
        function CSOItemRecipe(properties) {
            this.input_items_criteria = [];
            this.output_items_criteria = [];
            this.input_item_dupe_counts = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOItemRecipe def_index.
         * @member {number} def_index
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.def_index = 0;
    
        /**
         * CSOItemRecipe name.
         * @member {string} name
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.name = "";
    
        /**
         * CSOItemRecipe n_a.
         * @member {string} n_a
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.n_a = "";
    
        /**
         * CSOItemRecipe desc_inputs.
         * @member {string} desc_inputs
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.desc_inputs = "";
    
        /**
         * CSOItemRecipe desc_outputs.
         * @member {string} desc_outputs
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.desc_outputs = "";
    
        /**
         * CSOItemRecipe di_a.
         * @member {string} di_a
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.di_a = "";
    
        /**
         * CSOItemRecipe di_b.
         * @member {string} di_b
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.di_b = "";
    
        /**
         * CSOItemRecipe di_c.
         * @member {string} di_c
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.di_c = "";
    
        /**
         * CSOItemRecipe do_a.
         * @member {string} do_a
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.do_a = "";
    
        /**
         * CSOItemRecipe do_b.
         * @member {string} do_b
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.do_b = "";
    
        /**
         * CSOItemRecipe do_c.
         * @member {string} do_c
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.do_c = "";
    
        /**
         * CSOItemRecipe requires_all_same_class.
         * @member {boolean} requires_all_same_class
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.requires_all_same_class = false;
    
        /**
         * CSOItemRecipe requires_all_same_slot.
         * @member {boolean} requires_all_same_slot
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.requires_all_same_slot = false;
    
        /**
         * CSOItemRecipe class_usage_for_output.
         * @member {number} class_usage_for_output
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.class_usage_for_output = 0;
    
        /**
         * CSOItemRecipe slot_usage_for_output.
         * @member {number} slot_usage_for_output
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.slot_usage_for_output = 0;
    
        /**
         * CSOItemRecipe set_for_output.
         * @member {number} set_for_output
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.set_for_output = 0;
    
        /**
         * CSOItemRecipe input_items_criteria.
         * @member {Array.<ICSOItemCriteria>} input_items_criteria
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.input_items_criteria = $util.emptyArray;
    
        /**
         * CSOItemRecipe output_items_criteria.
         * @member {Array.<ICSOItemCriteria>} output_items_criteria
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.output_items_criteria = $util.emptyArray;
    
        /**
         * CSOItemRecipe input_item_dupe_counts.
         * @member {Array.<number>} input_item_dupe_counts
         * @memberof CSOItemRecipe
         * @instance
         */
        CSOItemRecipe.prototype.input_item_dupe_counts = $util.emptyArray;
    
        /**
         * Creates a new CSOItemRecipe instance using the specified properties.
         * @function create
         * @memberof CSOItemRecipe
         * @static
         * @param {ICSOItemRecipe=} [properties] Properties to set
         * @returns {CSOItemRecipe} CSOItemRecipe instance
         */
        CSOItemRecipe.create = function create(properties) {
            return new CSOItemRecipe(properties);
        };
    
        /**
         * Encodes the specified CSOItemRecipe message. Does not implicitly {@link CSOItemRecipe.verify|verify} messages.
         * @function encode
         * @memberof CSOItemRecipe
         * @static
         * @param {ICSOItemRecipe} message CSOItemRecipe message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemRecipe.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.def_index != null && Object.hasOwnProperty.call(message, "def_index"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.def_index);
            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
            if (message.n_a != null && Object.hasOwnProperty.call(message, "n_a"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.n_a);
            if (message.desc_inputs != null && Object.hasOwnProperty.call(message, "desc_inputs"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.desc_inputs);
            if (message.desc_outputs != null && Object.hasOwnProperty.call(message, "desc_outputs"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.desc_outputs);
            if (message.di_a != null && Object.hasOwnProperty.call(message, "di_a"))
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.di_a);
            if (message.di_b != null && Object.hasOwnProperty.call(message, "di_b"))
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.di_b);
            if (message.di_c != null && Object.hasOwnProperty.call(message, "di_c"))
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.di_c);
            if (message.do_a != null && Object.hasOwnProperty.call(message, "do_a"))
                writer.uint32(/* id 9, wireType 2 =*/74).string(message.do_a);
            if (message.do_b != null && Object.hasOwnProperty.call(message, "do_b"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.do_b);
            if (message.do_c != null && Object.hasOwnProperty.call(message, "do_c"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.do_c);
            if (message.requires_all_same_class != null && Object.hasOwnProperty.call(message, "requires_all_same_class"))
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.requires_all_same_class);
            if (message.requires_all_same_slot != null && Object.hasOwnProperty.call(message, "requires_all_same_slot"))
                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.requires_all_same_slot);
            if (message.class_usage_for_output != null && Object.hasOwnProperty.call(message, "class_usage_for_output"))
                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.class_usage_for_output);
            if (message.slot_usage_for_output != null && Object.hasOwnProperty.call(message, "slot_usage_for_output"))
                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.slot_usage_for_output);
            if (message.set_for_output != null && Object.hasOwnProperty.call(message, "set_for_output"))
                writer.uint32(/* id 16, wireType 0 =*/128).int32(message.set_for_output);
            if (message.input_items_criteria != null && message.input_items_criteria.length)
                for (var i = 0; i < message.input_items_criteria.length; ++i)
                    $root.CSOItemCriteria.encode(message.input_items_criteria[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
            if (message.output_items_criteria != null && message.output_items_criteria.length)
                for (var i = 0; i < message.output_items_criteria.length; ++i)
                    $root.CSOItemCriteria.encode(message.output_items_criteria[i], writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
            if (message.input_item_dupe_counts != null && message.input_item_dupe_counts.length)
                for (var i = 0; i < message.input_item_dupe_counts.length; ++i)
                    writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.input_item_dupe_counts[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CSOItemRecipe message, length delimited. Does not implicitly {@link CSOItemRecipe.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOItemRecipe
         * @static
         * @param {ICSOItemRecipe} message CSOItemRecipe message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOItemRecipe.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOItemRecipe message from the specified reader or buffer.
         * @function decode
         * @memberof CSOItemRecipe
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOItemRecipe} CSOItemRecipe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemRecipe.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOItemRecipe();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.def_index = reader.uint32();
                        break;
                    }
                case 2: {
                        message.name = reader.string();
                        break;
                    }
                case 3: {
                        message.n_a = reader.string();
                        break;
                    }
                case 4: {
                        message.desc_inputs = reader.string();
                        break;
                    }
                case 5: {
                        message.desc_outputs = reader.string();
                        break;
                    }
                case 6: {
                        message.di_a = reader.string();
                        break;
                    }
                case 7: {
                        message.di_b = reader.string();
                        break;
                    }
                case 8: {
                        message.di_c = reader.string();
                        break;
                    }
                case 9: {
                        message.do_a = reader.string();
                        break;
                    }
                case 10: {
                        message.do_b = reader.string();
                        break;
                    }
                case 11: {
                        message.do_c = reader.string();
                        break;
                    }
                case 12: {
                        message.requires_all_same_class = reader.bool();
                        break;
                    }
                case 13: {
                        message.requires_all_same_slot = reader.bool();
                        break;
                    }
                case 14: {
                        message.class_usage_for_output = reader.int32();
                        break;
                    }
                case 15: {
                        message.slot_usage_for_output = reader.int32();
                        break;
                    }
                case 16: {
                        message.set_for_output = reader.int32();
                        break;
                    }
                case 20: {
                        if (!(message.input_items_criteria && message.input_items_criteria.length))
                            message.input_items_criteria = [];
                        message.input_items_criteria.push($root.CSOItemCriteria.decode(reader, reader.uint32()));
                        break;
                    }
                case 21: {
                        if (!(message.output_items_criteria && message.output_items_criteria.length))
                            message.output_items_criteria = [];
                        message.output_items_criteria.push($root.CSOItemCriteria.decode(reader, reader.uint32()));
                        break;
                    }
                case 22: {
                        if (!(message.input_item_dupe_counts && message.input_item_dupe_counts.length))
                            message.input_item_dupe_counts = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.input_item_dupe_counts.push(reader.uint32());
                        } else
                            message.input_item_dupe_counts.push(reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOItemRecipe message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOItemRecipe
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOItemRecipe} CSOItemRecipe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOItemRecipe.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOItemRecipe message.
         * @function verify
         * @memberof CSOItemRecipe
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOItemRecipe.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                if (!$util.isInteger(message.def_index))
                    return "def_index: integer expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.n_a != null && message.hasOwnProperty("n_a"))
                if (!$util.isString(message.n_a))
                    return "n_a: string expected";
            if (message.desc_inputs != null && message.hasOwnProperty("desc_inputs"))
                if (!$util.isString(message.desc_inputs))
                    return "desc_inputs: string expected";
            if (message.desc_outputs != null && message.hasOwnProperty("desc_outputs"))
                if (!$util.isString(message.desc_outputs))
                    return "desc_outputs: string expected";
            if (message.di_a != null && message.hasOwnProperty("di_a"))
                if (!$util.isString(message.di_a))
                    return "di_a: string expected";
            if (message.di_b != null && message.hasOwnProperty("di_b"))
                if (!$util.isString(message.di_b))
                    return "di_b: string expected";
            if (message.di_c != null && message.hasOwnProperty("di_c"))
                if (!$util.isString(message.di_c))
                    return "di_c: string expected";
            if (message.do_a != null && message.hasOwnProperty("do_a"))
                if (!$util.isString(message.do_a))
                    return "do_a: string expected";
            if (message.do_b != null && message.hasOwnProperty("do_b"))
                if (!$util.isString(message.do_b))
                    return "do_b: string expected";
            if (message.do_c != null && message.hasOwnProperty("do_c"))
                if (!$util.isString(message.do_c))
                    return "do_c: string expected";
            if (message.requires_all_same_class != null && message.hasOwnProperty("requires_all_same_class"))
                if (typeof message.requires_all_same_class !== "boolean")
                    return "requires_all_same_class: boolean expected";
            if (message.requires_all_same_slot != null && message.hasOwnProperty("requires_all_same_slot"))
                if (typeof message.requires_all_same_slot !== "boolean")
                    return "requires_all_same_slot: boolean expected";
            if (message.class_usage_for_output != null && message.hasOwnProperty("class_usage_for_output"))
                if (!$util.isInteger(message.class_usage_for_output))
                    return "class_usage_for_output: integer expected";
            if (message.slot_usage_for_output != null && message.hasOwnProperty("slot_usage_for_output"))
                if (!$util.isInteger(message.slot_usage_for_output))
                    return "slot_usage_for_output: integer expected";
            if (message.set_for_output != null && message.hasOwnProperty("set_for_output"))
                if (!$util.isInteger(message.set_for_output))
                    return "set_for_output: integer expected";
            if (message.input_items_criteria != null && message.hasOwnProperty("input_items_criteria")) {
                if (!Array.isArray(message.input_items_criteria))
                    return "input_items_criteria: array expected";
                for (var i = 0; i < message.input_items_criteria.length; ++i) {
                    var error = $root.CSOItemCriteria.verify(message.input_items_criteria[i]);
                    if (error)
                        return "input_items_criteria." + error;
                }
            }
            if (message.output_items_criteria != null && message.hasOwnProperty("output_items_criteria")) {
                if (!Array.isArray(message.output_items_criteria))
                    return "output_items_criteria: array expected";
                for (var i = 0; i < message.output_items_criteria.length; ++i) {
                    var error = $root.CSOItemCriteria.verify(message.output_items_criteria[i]);
                    if (error)
                        return "output_items_criteria." + error;
                }
            }
            if (message.input_item_dupe_counts != null && message.hasOwnProperty("input_item_dupe_counts")) {
                if (!Array.isArray(message.input_item_dupe_counts))
                    return "input_item_dupe_counts: array expected";
                for (var i = 0; i < message.input_item_dupe_counts.length; ++i)
                    if (!$util.isInteger(message.input_item_dupe_counts[i]))
                        return "input_item_dupe_counts: integer[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CSOItemRecipe message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOItemRecipe
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOItemRecipe} CSOItemRecipe
         */
        CSOItemRecipe.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOItemRecipe)
                return object;
            var message = new $root.CSOItemRecipe();
            if (object.def_index != null)
                message.def_index = object.def_index >>> 0;
            if (object.name != null)
                message.name = String(object.name);
            if (object.n_a != null)
                message.n_a = String(object.n_a);
            if (object.desc_inputs != null)
                message.desc_inputs = String(object.desc_inputs);
            if (object.desc_outputs != null)
                message.desc_outputs = String(object.desc_outputs);
            if (object.di_a != null)
                message.di_a = String(object.di_a);
            if (object.di_b != null)
                message.di_b = String(object.di_b);
            if (object.di_c != null)
                message.di_c = String(object.di_c);
            if (object.do_a != null)
                message.do_a = String(object.do_a);
            if (object.do_b != null)
                message.do_b = String(object.do_b);
            if (object.do_c != null)
                message.do_c = String(object.do_c);
            if (object.requires_all_same_class != null)
                message.requires_all_same_class = Boolean(object.requires_all_same_class);
            if (object.requires_all_same_slot != null)
                message.requires_all_same_slot = Boolean(object.requires_all_same_slot);
            if (object.class_usage_for_output != null)
                message.class_usage_for_output = object.class_usage_for_output | 0;
            if (object.slot_usage_for_output != null)
                message.slot_usage_for_output = object.slot_usage_for_output | 0;
            if (object.set_for_output != null)
                message.set_for_output = object.set_for_output | 0;
            if (object.input_items_criteria) {
                if (!Array.isArray(object.input_items_criteria))
                    throw TypeError(".CSOItemRecipe.input_items_criteria: array expected");
                message.input_items_criteria = [];
                for (var i = 0; i < object.input_items_criteria.length; ++i) {
                    if (typeof object.input_items_criteria[i] !== "object")
                        throw TypeError(".CSOItemRecipe.input_items_criteria: object expected");
                    message.input_items_criteria[i] = $root.CSOItemCriteria.fromObject(object.input_items_criteria[i]);
                }
            }
            if (object.output_items_criteria) {
                if (!Array.isArray(object.output_items_criteria))
                    throw TypeError(".CSOItemRecipe.output_items_criteria: array expected");
                message.output_items_criteria = [];
                for (var i = 0; i < object.output_items_criteria.length; ++i) {
                    if (typeof object.output_items_criteria[i] !== "object")
                        throw TypeError(".CSOItemRecipe.output_items_criteria: object expected");
                    message.output_items_criteria[i] = $root.CSOItemCriteria.fromObject(object.output_items_criteria[i]);
                }
            }
            if (object.input_item_dupe_counts) {
                if (!Array.isArray(object.input_item_dupe_counts))
                    throw TypeError(".CSOItemRecipe.input_item_dupe_counts: array expected");
                message.input_item_dupe_counts = [];
                for (var i = 0; i < object.input_item_dupe_counts.length; ++i)
                    message.input_item_dupe_counts[i] = object.input_item_dupe_counts[i] >>> 0;
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CSOItemRecipe message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOItemRecipe
         * @static
         * @param {CSOItemRecipe} message CSOItemRecipe
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOItemRecipe.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.input_items_criteria = [];
                object.output_items_criteria = [];
                object.input_item_dupe_counts = [];
            }
            if (options.defaults) {
                object.def_index = 0;
                object.name = "";
                object.n_a = "";
                object.desc_inputs = "";
                object.desc_outputs = "";
                object.di_a = "";
                object.di_b = "";
                object.di_c = "";
                object.do_a = "";
                object.do_b = "";
                object.do_c = "";
                object.requires_all_same_class = false;
                object.requires_all_same_slot = false;
                object.class_usage_for_output = 0;
                object.slot_usage_for_output = 0;
                object.set_for_output = 0;
            }
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                object.def_index = message.def_index;
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.n_a != null && message.hasOwnProperty("n_a"))
                object.n_a = message.n_a;
            if (message.desc_inputs != null && message.hasOwnProperty("desc_inputs"))
                object.desc_inputs = message.desc_inputs;
            if (message.desc_outputs != null && message.hasOwnProperty("desc_outputs"))
                object.desc_outputs = message.desc_outputs;
            if (message.di_a != null && message.hasOwnProperty("di_a"))
                object.di_a = message.di_a;
            if (message.di_b != null && message.hasOwnProperty("di_b"))
                object.di_b = message.di_b;
            if (message.di_c != null && message.hasOwnProperty("di_c"))
                object.di_c = message.di_c;
            if (message.do_a != null && message.hasOwnProperty("do_a"))
                object.do_a = message.do_a;
            if (message.do_b != null && message.hasOwnProperty("do_b"))
                object.do_b = message.do_b;
            if (message.do_c != null && message.hasOwnProperty("do_c"))
                object.do_c = message.do_c;
            if (message.requires_all_same_class != null && message.hasOwnProperty("requires_all_same_class"))
                object.requires_all_same_class = message.requires_all_same_class;
            if (message.requires_all_same_slot != null && message.hasOwnProperty("requires_all_same_slot"))
                object.requires_all_same_slot = message.requires_all_same_slot;
            if (message.class_usage_for_output != null && message.hasOwnProperty("class_usage_for_output"))
                object.class_usage_for_output = message.class_usage_for_output;
            if (message.slot_usage_for_output != null && message.hasOwnProperty("slot_usage_for_output"))
                object.slot_usage_for_output = message.slot_usage_for_output;
            if (message.set_for_output != null && message.hasOwnProperty("set_for_output"))
                object.set_for_output = message.set_for_output;
            if (message.input_items_criteria && message.input_items_criteria.length) {
                object.input_items_criteria = [];
                for (var j = 0; j < message.input_items_criteria.length; ++j)
                    object.input_items_criteria[j] = $root.CSOItemCriteria.toObject(message.input_items_criteria[j], options);
            }
            if (message.output_items_criteria && message.output_items_criteria.length) {
                object.output_items_criteria = [];
                for (var j = 0; j < message.output_items_criteria.length; ++j)
                    object.output_items_criteria[j] = $root.CSOItemCriteria.toObject(message.output_items_criteria[j], options);
            }
            if (message.input_item_dupe_counts && message.input_item_dupe_counts.length) {
                object.input_item_dupe_counts = [];
                for (var j = 0; j < message.input_item_dupe_counts.length; ++j)
                    object.input_item_dupe_counts[j] = message.input_item_dupe_counts[j];
            }
            return object;
        };
    
        /**
         * Converts this CSOItemRecipe to JSON.
         * @function toJSON
         * @memberof CSOItemRecipe
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOItemRecipe.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOItemRecipe
         * @function getTypeUrl
         * @memberof CSOItemRecipe
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOItemRecipe.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOItemRecipe";
        };
    
        return CSOItemRecipe;
    })();
    
    $root.CMsgDevNewItemRequest = (function() {
    
        /**
         * Properties of a CMsgDevNewItemRequest.
         * @exports ICMsgDevNewItemRequest
         * @interface ICMsgDevNewItemRequest
         * @property {number|Long|null} [receiver] CMsgDevNewItemRequest receiver
         * @property {ICSOItemCriteria|null} [criteria] CMsgDevNewItemRequest criteria
         */
    
        /**
         * Constructs a new CMsgDevNewItemRequest.
         * @exports CMsgDevNewItemRequest
         * @classdesc Represents a CMsgDevNewItemRequest.
         * @implements ICMsgDevNewItemRequest
         * @constructor
         * @param {ICMsgDevNewItemRequest=} [properties] Properties to set
         */
        function CMsgDevNewItemRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgDevNewItemRequest receiver.
         * @member {number|Long} receiver
         * @memberof CMsgDevNewItemRequest
         * @instance
         */
        CMsgDevNewItemRequest.prototype.receiver = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgDevNewItemRequest criteria.
         * @member {ICSOItemCriteria|null|undefined} criteria
         * @memberof CMsgDevNewItemRequest
         * @instance
         */
        CMsgDevNewItemRequest.prototype.criteria = null;
    
        /**
         * Creates a new CMsgDevNewItemRequest instance using the specified properties.
         * @function create
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {ICMsgDevNewItemRequest=} [properties] Properties to set
         * @returns {CMsgDevNewItemRequest} CMsgDevNewItemRequest instance
         */
        CMsgDevNewItemRequest.create = function create(properties) {
            return new CMsgDevNewItemRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgDevNewItemRequest message. Does not implicitly {@link CMsgDevNewItemRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {ICMsgDevNewItemRequest} message CMsgDevNewItemRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDevNewItemRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.receiver != null && Object.hasOwnProperty.call(message, "receiver"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.receiver);
            if (message.criteria != null && Object.hasOwnProperty.call(message, "criteria"))
                $root.CSOItemCriteria.encode(message.criteria, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgDevNewItemRequest message, length delimited. Does not implicitly {@link CMsgDevNewItemRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {ICMsgDevNewItemRequest} message CMsgDevNewItemRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgDevNewItemRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgDevNewItemRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgDevNewItemRequest} CMsgDevNewItemRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDevNewItemRequest.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgDevNewItemRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.receiver = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.criteria = $root.CSOItemCriteria.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgDevNewItemRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgDevNewItemRequest} CMsgDevNewItemRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgDevNewItemRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgDevNewItemRequest message.
         * @function verify
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgDevNewItemRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.receiver != null && message.hasOwnProperty("receiver"))
                if (!$util.isInteger(message.receiver) && !(message.receiver && $util.isInteger(message.receiver.low) && $util.isInteger(message.receiver.high)))
                    return "receiver: integer|Long expected";
            if (message.criteria != null && message.hasOwnProperty("criteria")) {
                var error = $root.CSOItemCriteria.verify(message.criteria);
                if (error)
                    return "criteria." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgDevNewItemRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgDevNewItemRequest} CMsgDevNewItemRequest
         */
        CMsgDevNewItemRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgDevNewItemRequest)
                return object;
            var message = new $root.CMsgDevNewItemRequest();
            if (object.receiver != null)
                if ($util.Long)
                    (message.receiver = $util.Long.fromValue(object.receiver)).unsigned = false;
                else if (typeof object.receiver === "string")
                    message.receiver = parseInt(object.receiver, 10);
                else if (typeof object.receiver === "number")
                    message.receiver = object.receiver;
                else if (typeof object.receiver === "object")
                    message.receiver = new $util.LongBits(object.receiver.low >>> 0, object.receiver.high >>> 0).toNumber();
            if (object.criteria != null) {
                if (typeof object.criteria !== "object")
                    throw TypeError(".CMsgDevNewItemRequest.criteria: object expected");
                message.criteria = $root.CSOItemCriteria.fromObject(object.criteria);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgDevNewItemRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {CMsgDevNewItemRequest} message CMsgDevNewItemRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgDevNewItemRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.receiver = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.receiver = options.longs === String ? "0" : 0;
                object.criteria = null;
            }
            if (message.receiver != null && message.hasOwnProperty("receiver"))
                if (typeof message.receiver === "number")
                    object.receiver = options.longs === String ? String(message.receiver) : message.receiver;
                else
                    object.receiver = options.longs === String ? $util.Long.prototype.toString.call(message.receiver) : options.longs === Number ? new $util.LongBits(message.receiver.low >>> 0, message.receiver.high >>> 0).toNumber() : message.receiver;
            if (message.criteria != null && message.hasOwnProperty("criteria"))
                object.criteria = $root.CSOItemCriteria.toObject(message.criteria, options);
            return object;
        };
    
        /**
         * Converts this CMsgDevNewItemRequest to JSON.
         * @function toJSON
         * @memberof CMsgDevNewItemRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgDevNewItemRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgDevNewItemRequest
         * @function getTypeUrl
         * @memberof CMsgDevNewItemRequest
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgDevNewItemRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgDevNewItemRequest";
        };
    
        return CMsgDevNewItemRequest;
    })();
    
    $root.CMsgIncrementKillCountAttribute = (function() {
    
        /**
         * Properties of a CMsgIncrementKillCountAttribute.
         * @exports ICMsgIncrementKillCountAttribute
         * @interface ICMsgIncrementKillCountAttribute
         * @property {number|null} [killer_account_id] CMsgIncrementKillCountAttribute killer_account_id
         * @property {number|null} [victim_account_id] CMsgIncrementKillCountAttribute victim_account_id
         * @property {number|Long|null} [item_id] CMsgIncrementKillCountAttribute item_id
         * @property {number|null} [event_type] CMsgIncrementKillCountAttribute event_type
         * @property {number|null} [amount] CMsgIncrementKillCountAttribute amount
         */
    
        /**
         * Constructs a new CMsgIncrementKillCountAttribute.
         * @exports CMsgIncrementKillCountAttribute
         * @classdesc Represents a CMsgIncrementKillCountAttribute.
         * @implements ICMsgIncrementKillCountAttribute
         * @constructor
         * @param {ICMsgIncrementKillCountAttribute=} [properties] Properties to set
         */
        function CMsgIncrementKillCountAttribute(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgIncrementKillCountAttribute killer_account_id.
         * @member {number} killer_account_id
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.killer_account_id = 0;
    
        /**
         * CMsgIncrementKillCountAttribute victim_account_id.
         * @member {number} victim_account_id
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.victim_account_id = 0;
    
        /**
         * CMsgIncrementKillCountAttribute item_id.
         * @member {number|Long} item_id
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgIncrementKillCountAttribute event_type.
         * @member {number} event_type
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.event_type = 0;
    
        /**
         * CMsgIncrementKillCountAttribute amount.
         * @member {number} amount
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         */
        CMsgIncrementKillCountAttribute.prototype.amount = 0;
    
        /**
         * Creates a new CMsgIncrementKillCountAttribute instance using the specified properties.
         * @function create
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {ICMsgIncrementKillCountAttribute=} [properties] Properties to set
         * @returns {CMsgIncrementKillCountAttribute} CMsgIncrementKillCountAttribute instance
         */
        CMsgIncrementKillCountAttribute.create = function create(properties) {
            return new CMsgIncrementKillCountAttribute(properties);
        };
    
        /**
         * Encodes the specified CMsgIncrementKillCountAttribute message. Does not implicitly {@link CMsgIncrementKillCountAttribute.verify|verify} messages.
         * @function encode
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {ICMsgIncrementKillCountAttribute} message CMsgIncrementKillCountAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIncrementKillCountAttribute.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.killer_account_id != null && Object.hasOwnProperty.call(message, "killer_account_id"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.killer_account_id);
            if (message.victim_account_id != null && Object.hasOwnProperty.call(message, "victim_account_id"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.victim_account_id);
            if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.item_id);
            if (message.event_type != null && Object.hasOwnProperty.call(message, "event_type"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.event_type);
            if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.amount);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgIncrementKillCountAttribute message, length delimited. Does not implicitly {@link CMsgIncrementKillCountAttribute.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {ICMsgIncrementKillCountAttribute} message CMsgIncrementKillCountAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgIncrementKillCountAttribute.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgIncrementKillCountAttribute message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgIncrementKillCountAttribute} CMsgIncrementKillCountAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIncrementKillCountAttribute.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgIncrementKillCountAttribute();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.killer_account_id = reader.fixed32();
                        break;
                    }
                case 2: {
                        message.victim_account_id = reader.fixed32();
                        break;
                    }
                case 3: {
                        message.item_id = reader.uint64();
                        break;
                    }
                case 4: {
                        message.event_type = reader.uint32();
                        break;
                    }
                case 5: {
                        message.amount = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgIncrementKillCountAttribute message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgIncrementKillCountAttribute} CMsgIncrementKillCountAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgIncrementKillCountAttribute.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgIncrementKillCountAttribute message.
         * @function verify
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgIncrementKillCountAttribute.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.killer_account_id != null && message.hasOwnProperty("killer_account_id"))
                if (!$util.isInteger(message.killer_account_id))
                    return "killer_account_id: integer expected";
            if (message.victim_account_id != null && message.hasOwnProperty("victim_account_id"))
                if (!$util.isInteger(message.victim_account_id))
                    return "victim_account_id: integer expected";
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                    return "item_id: integer|Long expected";
            if (message.event_type != null && message.hasOwnProperty("event_type"))
                if (!$util.isInteger(message.event_type))
                    return "event_type: integer expected";
            if (message.amount != null && message.hasOwnProperty("amount"))
                if (!$util.isInteger(message.amount))
                    return "amount: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgIncrementKillCountAttribute message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgIncrementKillCountAttribute} CMsgIncrementKillCountAttribute
         */
        CMsgIncrementKillCountAttribute.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgIncrementKillCountAttribute)
                return object;
            var message = new $root.CMsgIncrementKillCountAttribute();
            if (object.killer_account_id != null)
                message.killer_account_id = object.killer_account_id >>> 0;
            if (object.victim_account_id != null)
                message.victim_account_id = object.victim_account_id >>> 0;
            if (object.item_id != null)
                if ($util.Long)
                    (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                else if (typeof object.item_id === "string")
                    message.item_id = parseInt(object.item_id, 10);
                else if (typeof object.item_id === "number")
                    message.item_id = object.item_id;
                else if (typeof object.item_id === "object")
                    message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
            if (object.event_type != null)
                message.event_type = object.event_type >>> 0;
            if (object.amount != null)
                message.amount = object.amount >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgIncrementKillCountAttribute message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {CMsgIncrementKillCountAttribute} message CMsgIncrementKillCountAttribute
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgIncrementKillCountAttribute.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.killer_account_id = 0;
                object.victim_account_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_id = options.longs === String ? "0" : 0;
                object.event_type = 0;
                object.amount = 0;
            }
            if (message.killer_account_id != null && message.hasOwnProperty("killer_account_id"))
                object.killer_account_id = message.killer_account_id;
            if (message.victim_account_id != null && message.hasOwnProperty("victim_account_id"))
                object.victim_account_id = message.victim_account_id;
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (typeof message.item_id === "number")
                    object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                else
                    object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
            if (message.event_type != null && message.hasOwnProperty("event_type"))
                object.event_type = message.event_type;
            if (message.amount != null && message.hasOwnProperty("amount"))
                object.amount = message.amount;
            return object;
        };
    
        /**
         * Converts this CMsgIncrementKillCountAttribute to JSON.
         * @function toJSON
         * @memberof CMsgIncrementKillCountAttribute
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgIncrementKillCountAttribute.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgIncrementKillCountAttribute
         * @function getTypeUrl
         * @memberof CMsgIncrementKillCountAttribute
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgIncrementKillCountAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgIncrementKillCountAttribute";
        };
    
        return CMsgIncrementKillCountAttribute;
    })();
    
    $root.CMsgApplySticker = (function() {
    
        /**
         * Properties of a CMsgApplySticker.
         * @exports ICMsgApplySticker
         * @interface ICMsgApplySticker
         * @property {number|Long|null} [sticker_item_id] CMsgApplySticker sticker_item_id
         * @property {number|Long|null} [item_item_id] CMsgApplySticker item_item_id
         * @property {number|null} [sticker_slot] CMsgApplySticker sticker_slot
         * @property {number|null} [baseitem_defidx] CMsgApplySticker baseitem_defidx
         * @property {number|null} [sticker_wear] CMsgApplySticker sticker_wear
         * @property {number|null} [sticker_rotation] CMsgApplySticker sticker_rotation
         * @property {number|null} [sticker_scale] CMsgApplySticker sticker_scale
         * @property {number|null} [sticker_offset_x] CMsgApplySticker sticker_offset_x
         * @property {number|null} [sticker_offset_y] CMsgApplySticker sticker_offset_y
         * @property {number|null} [sticker_offset_z] CMsgApplySticker sticker_offset_z
         * @property {number|null} [sticker_wear_target] CMsgApplySticker sticker_wear_target
         */
    
        /**
         * Constructs a new CMsgApplySticker.
         * @exports CMsgApplySticker
         * @classdesc Represents a CMsgApplySticker.
         * @implements ICMsgApplySticker
         * @constructor
         * @param {ICMsgApplySticker=} [properties] Properties to set
         */
        function CMsgApplySticker(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplySticker sticker_item_id.
         * @member {number|Long} sticker_item_id
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplySticker item_item_id.
         * @member {number|Long} item_item_id
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.item_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplySticker sticker_slot.
         * @member {number} sticker_slot
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_slot = 0;
    
        /**
         * CMsgApplySticker baseitem_defidx.
         * @member {number} baseitem_defidx
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.baseitem_defidx = 0;
    
        /**
         * CMsgApplySticker sticker_wear.
         * @member {number} sticker_wear
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_wear = 0;
    
        /**
         * CMsgApplySticker sticker_rotation.
         * @member {number} sticker_rotation
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_rotation = 0;
    
        /**
         * CMsgApplySticker sticker_scale.
         * @member {number} sticker_scale
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_scale = 0;
    
        /**
         * CMsgApplySticker sticker_offset_x.
         * @member {number} sticker_offset_x
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_offset_x = 0;
    
        /**
         * CMsgApplySticker sticker_offset_y.
         * @member {number} sticker_offset_y
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_offset_y = 0;
    
        /**
         * CMsgApplySticker sticker_offset_z.
         * @member {number} sticker_offset_z
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_offset_z = 0;
    
        /**
         * CMsgApplySticker sticker_wear_target.
         * @member {number} sticker_wear_target
         * @memberof CMsgApplySticker
         * @instance
         */
        CMsgApplySticker.prototype.sticker_wear_target = 0;
    
        /**
         * Creates a new CMsgApplySticker instance using the specified properties.
         * @function create
         * @memberof CMsgApplySticker
         * @static
         * @param {ICMsgApplySticker=} [properties] Properties to set
         * @returns {CMsgApplySticker} CMsgApplySticker instance
         */
        CMsgApplySticker.create = function create(properties) {
            return new CMsgApplySticker(properties);
        };
    
        /**
         * Encodes the specified CMsgApplySticker message. Does not implicitly {@link CMsgApplySticker.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplySticker
         * @static
         * @param {ICMsgApplySticker} message CMsgApplySticker message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplySticker.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sticker_item_id != null && Object.hasOwnProperty.call(message, "sticker_item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.sticker_item_id);
            if (message.item_item_id != null && Object.hasOwnProperty.call(message, "item_item_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.item_item_id);
            if (message.sticker_slot != null && Object.hasOwnProperty.call(message, "sticker_slot"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.sticker_slot);
            if (message.baseitem_defidx != null && Object.hasOwnProperty.call(message, "baseitem_defidx"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.baseitem_defidx);
            if (message.sticker_wear != null && Object.hasOwnProperty.call(message, "sticker_wear"))
                writer.uint32(/* id 5, wireType 5 =*/45).float(message.sticker_wear);
            if (message.sticker_rotation != null && Object.hasOwnProperty.call(message, "sticker_rotation"))
                writer.uint32(/* id 6, wireType 5 =*/53).float(message.sticker_rotation);
            if (message.sticker_scale != null && Object.hasOwnProperty.call(message, "sticker_scale"))
                writer.uint32(/* id 7, wireType 5 =*/61).float(message.sticker_scale);
            if (message.sticker_offset_x != null && Object.hasOwnProperty.call(message, "sticker_offset_x"))
                writer.uint32(/* id 8, wireType 5 =*/69).float(message.sticker_offset_x);
            if (message.sticker_offset_y != null && Object.hasOwnProperty.call(message, "sticker_offset_y"))
                writer.uint32(/* id 9, wireType 5 =*/77).float(message.sticker_offset_y);
            if (message.sticker_offset_z != null && Object.hasOwnProperty.call(message, "sticker_offset_z"))
                writer.uint32(/* id 10, wireType 5 =*/85).float(message.sticker_offset_z);
            if (message.sticker_wear_target != null && Object.hasOwnProperty.call(message, "sticker_wear_target"))
                writer.uint32(/* id 11, wireType 5 =*/93).float(message.sticker_wear_target);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplySticker message, length delimited. Does not implicitly {@link CMsgApplySticker.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplySticker
         * @static
         * @param {ICMsgApplySticker} message CMsgApplySticker message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplySticker.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplySticker message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplySticker
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplySticker} CMsgApplySticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplySticker.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplySticker();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.sticker_item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.item_item_id = reader.uint64();
                        break;
                    }
                case 3: {
                        message.sticker_slot = reader.uint32();
                        break;
                    }
                case 4: {
                        message.baseitem_defidx = reader.uint32();
                        break;
                    }
                case 5: {
                        message.sticker_wear = reader.float();
                        break;
                    }
                case 6: {
                        message.sticker_rotation = reader.float();
                        break;
                    }
                case 7: {
                        message.sticker_scale = reader.float();
                        break;
                    }
                case 8: {
                        message.sticker_offset_x = reader.float();
                        break;
                    }
                case 9: {
                        message.sticker_offset_y = reader.float();
                        break;
                    }
                case 10: {
                        message.sticker_offset_z = reader.float();
                        break;
                    }
                case 11: {
                        message.sticker_wear_target = reader.float();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplySticker message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplySticker
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplySticker} CMsgApplySticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplySticker.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplySticker message.
         * @function verify
         * @memberof CMsgApplySticker
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplySticker.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sticker_item_id != null && message.hasOwnProperty("sticker_item_id"))
                if (!$util.isInteger(message.sticker_item_id) && !(message.sticker_item_id && $util.isInteger(message.sticker_item_id.low) && $util.isInteger(message.sticker_item_id.high)))
                    return "sticker_item_id: integer|Long expected";
            if (message.item_item_id != null && message.hasOwnProperty("item_item_id"))
                if (!$util.isInteger(message.item_item_id) && !(message.item_item_id && $util.isInteger(message.item_item_id.low) && $util.isInteger(message.item_item_id.high)))
                    return "item_item_id: integer|Long expected";
            if (message.sticker_slot != null && message.hasOwnProperty("sticker_slot"))
                if (!$util.isInteger(message.sticker_slot))
                    return "sticker_slot: integer expected";
            if (message.baseitem_defidx != null && message.hasOwnProperty("baseitem_defidx"))
                if (!$util.isInteger(message.baseitem_defidx))
                    return "baseitem_defidx: integer expected";
            if (message.sticker_wear != null && message.hasOwnProperty("sticker_wear"))
                if (typeof message.sticker_wear !== "number")
                    return "sticker_wear: number expected";
            if (message.sticker_rotation != null && message.hasOwnProperty("sticker_rotation"))
                if (typeof message.sticker_rotation !== "number")
                    return "sticker_rotation: number expected";
            if (message.sticker_scale != null && message.hasOwnProperty("sticker_scale"))
                if (typeof message.sticker_scale !== "number")
                    return "sticker_scale: number expected";
            if (message.sticker_offset_x != null && message.hasOwnProperty("sticker_offset_x"))
                if (typeof message.sticker_offset_x !== "number")
                    return "sticker_offset_x: number expected";
            if (message.sticker_offset_y != null && message.hasOwnProperty("sticker_offset_y"))
                if (typeof message.sticker_offset_y !== "number")
                    return "sticker_offset_y: number expected";
            if (message.sticker_offset_z != null && message.hasOwnProperty("sticker_offset_z"))
                if (typeof message.sticker_offset_z !== "number")
                    return "sticker_offset_z: number expected";
            if (message.sticker_wear_target != null && message.hasOwnProperty("sticker_wear_target"))
                if (typeof message.sticker_wear_target !== "number")
                    return "sticker_wear_target: number expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplySticker message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplySticker
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplySticker} CMsgApplySticker
         */
        CMsgApplySticker.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplySticker)
                return object;
            var message = new $root.CMsgApplySticker();
            if (object.sticker_item_id != null)
                if ($util.Long)
                    (message.sticker_item_id = $util.Long.fromValue(object.sticker_item_id)).unsigned = true;
                else if (typeof object.sticker_item_id === "string")
                    message.sticker_item_id = parseInt(object.sticker_item_id, 10);
                else if (typeof object.sticker_item_id === "number")
                    message.sticker_item_id = object.sticker_item_id;
                else if (typeof object.sticker_item_id === "object")
                    message.sticker_item_id = new $util.LongBits(object.sticker_item_id.low >>> 0, object.sticker_item_id.high >>> 0).toNumber(true);
            if (object.item_item_id != null)
                if ($util.Long)
                    (message.item_item_id = $util.Long.fromValue(object.item_item_id)).unsigned = true;
                else if (typeof object.item_item_id === "string")
                    message.item_item_id = parseInt(object.item_item_id, 10);
                else if (typeof object.item_item_id === "number")
                    message.item_item_id = object.item_item_id;
                else if (typeof object.item_item_id === "object")
                    message.item_item_id = new $util.LongBits(object.item_item_id.low >>> 0, object.item_item_id.high >>> 0).toNumber(true);
            if (object.sticker_slot != null)
                message.sticker_slot = object.sticker_slot >>> 0;
            if (object.baseitem_defidx != null)
                message.baseitem_defidx = object.baseitem_defidx >>> 0;
            if (object.sticker_wear != null)
                message.sticker_wear = Number(object.sticker_wear);
            if (object.sticker_rotation != null)
                message.sticker_rotation = Number(object.sticker_rotation);
            if (object.sticker_scale != null)
                message.sticker_scale = Number(object.sticker_scale);
            if (object.sticker_offset_x != null)
                message.sticker_offset_x = Number(object.sticker_offset_x);
            if (object.sticker_offset_y != null)
                message.sticker_offset_y = Number(object.sticker_offset_y);
            if (object.sticker_offset_z != null)
                message.sticker_offset_z = Number(object.sticker_offset_z);
            if (object.sticker_wear_target != null)
                message.sticker_wear_target = Number(object.sticker_wear_target);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplySticker message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplySticker
         * @static
         * @param {CMsgApplySticker} message CMsgApplySticker
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplySticker.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.sticker_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.sticker_item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_item_id = options.longs === String ? "0" : 0;
                object.sticker_slot = 0;
                object.baseitem_defidx = 0;
                object.sticker_wear = 0;
                object.sticker_rotation = 0;
                object.sticker_scale = 0;
                object.sticker_offset_x = 0;
                object.sticker_offset_y = 0;
                object.sticker_offset_z = 0;
                object.sticker_wear_target = 0;
            }
            if (message.sticker_item_id != null && message.hasOwnProperty("sticker_item_id"))
                if (typeof message.sticker_item_id === "number")
                    object.sticker_item_id = options.longs === String ? String(message.sticker_item_id) : message.sticker_item_id;
                else
                    object.sticker_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.sticker_item_id) : options.longs === Number ? new $util.LongBits(message.sticker_item_id.low >>> 0, message.sticker_item_id.high >>> 0).toNumber(true) : message.sticker_item_id;
            if (message.item_item_id != null && message.hasOwnProperty("item_item_id"))
                if (typeof message.item_item_id === "number")
                    object.item_item_id = options.longs === String ? String(message.item_item_id) : message.item_item_id;
                else
                    object.item_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_item_id) : options.longs === Number ? new $util.LongBits(message.item_item_id.low >>> 0, message.item_item_id.high >>> 0).toNumber(true) : message.item_item_id;
            if (message.sticker_slot != null && message.hasOwnProperty("sticker_slot"))
                object.sticker_slot = message.sticker_slot;
            if (message.baseitem_defidx != null && message.hasOwnProperty("baseitem_defidx"))
                object.baseitem_defidx = message.baseitem_defidx;
            if (message.sticker_wear != null && message.hasOwnProperty("sticker_wear"))
                object.sticker_wear = options.json && !isFinite(message.sticker_wear) ? String(message.sticker_wear) : message.sticker_wear;
            if (message.sticker_rotation != null && message.hasOwnProperty("sticker_rotation"))
                object.sticker_rotation = options.json && !isFinite(message.sticker_rotation) ? String(message.sticker_rotation) : message.sticker_rotation;
            if (message.sticker_scale != null && message.hasOwnProperty("sticker_scale"))
                object.sticker_scale = options.json && !isFinite(message.sticker_scale) ? String(message.sticker_scale) : message.sticker_scale;
            if (message.sticker_offset_x != null && message.hasOwnProperty("sticker_offset_x"))
                object.sticker_offset_x = options.json && !isFinite(message.sticker_offset_x) ? String(message.sticker_offset_x) : message.sticker_offset_x;
            if (message.sticker_offset_y != null && message.hasOwnProperty("sticker_offset_y"))
                object.sticker_offset_y = options.json && !isFinite(message.sticker_offset_y) ? String(message.sticker_offset_y) : message.sticker_offset_y;
            if (message.sticker_offset_z != null && message.hasOwnProperty("sticker_offset_z"))
                object.sticker_offset_z = options.json && !isFinite(message.sticker_offset_z) ? String(message.sticker_offset_z) : message.sticker_offset_z;
            if (message.sticker_wear_target != null && message.hasOwnProperty("sticker_wear_target"))
                object.sticker_wear_target = options.json && !isFinite(message.sticker_wear_target) ? String(message.sticker_wear_target) : message.sticker_wear_target;
            return object;
        };
    
        /**
         * Converts this CMsgApplySticker to JSON.
         * @function toJSON
         * @memberof CMsgApplySticker
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplySticker.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplySticker
         * @function getTypeUrl
         * @memberof CMsgApplySticker
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplySticker.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplySticker";
        };
    
        return CMsgApplySticker;
    })();
    
    $root.CMsgModifyItemAttribute = (function() {
    
        /**
         * Properties of a CMsgModifyItemAttribute.
         * @exports ICMsgModifyItemAttribute
         * @interface ICMsgModifyItemAttribute
         * @property {number|Long|null} [item_id] CMsgModifyItemAttribute item_id
         * @property {number|null} [attr_defidx] CMsgModifyItemAttribute attr_defidx
         * @property {number|null} [attr_value] CMsgModifyItemAttribute attr_value
         */
    
        /**
         * Constructs a new CMsgModifyItemAttribute.
         * @exports CMsgModifyItemAttribute
         * @classdesc Represents a CMsgModifyItemAttribute.
         * @implements ICMsgModifyItemAttribute
         * @constructor
         * @param {ICMsgModifyItemAttribute=} [properties] Properties to set
         */
        function CMsgModifyItemAttribute(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgModifyItemAttribute item_id.
         * @member {number|Long} item_id
         * @memberof CMsgModifyItemAttribute
         * @instance
         */
        CMsgModifyItemAttribute.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgModifyItemAttribute attr_defidx.
         * @member {number} attr_defidx
         * @memberof CMsgModifyItemAttribute
         * @instance
         */
        CMsgModifyItemAttribute.prototype.attr_defidx = 0;
    
        /**
         * CMsgModifyItemAttribute attr_value.
         * @member {number} attr_value
         * @memberof CMsgModifyItemAttribute
         * @instance
         */
        CMsgModifyItemAttribute.prototype.attr_value = 0;
    
        /**
         * Creates a new CMsgModifyItemAttribute instance using the specified properties.
         * @function create
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {ICMsgModifyItemAttribute=} [properties] Properties to set
         * @returns {CMsgModifyItemAttribute} CMsgModifyItemAttribute instance
         */
        CMsgModifyItemAttribute.create = function create(properties) {
            return new CMsgModifyItemAttribute(properties);
        };
    
        /**
         * Encodes the specified CMsgModifyItemAttribute message. Does not implicitly {@link CMsgModifyItemAttribute.verify|verify} messages.
         * @function encode
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {ICMsgModifyItemAttribute} message CMsgModifyItemAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgModifyItemAttribute.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.item_id);
            if (message.attr_defidx != null && Object.hasOwnProperty.call(message, "attr_defidx"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.attr_defidx);
            if (message.attr_value != null && Object.hasOwnProperty.call(message, "attr_value"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.attr_value);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgModifyItemAttribute message, length delimited. Does not implicitly {@link CMsgModifyItemAttribute.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {ICMsgModifyItemAttribute} message CMsgModifyItemAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgModifyItemAttribute.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgModifyItemAttribute message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgModifyItemAttribute} CMsgModifyItemAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgModifyItemAttribute.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgModifyItemAttribute();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.attr_defidx = reader.uint32();
                        break;
                    }
                case 3: {
                        message.attr_value = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgModifyItemAttribute message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgModifyItemAttribute} CMsgModifyItemAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgModifyItemAttribute.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgModifyItemAttribute message.
         * @function verify
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgModifyItemAttribute.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                    return "item_id: integer|Long expected";
            if (message.attr_defidx != null && message.hasOwnProperty("attr_defidx"))
                if (!$util.isInteger(message.attr_defidx))
                    return "attr_defidx: integer expected";
            if (message.attr_value != null && message.hasOwnProperty("attr_value"))
                if (!$util.isInteger(message.attr_value))
                    return "attr_value: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgModifyItemAttribute message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgModifyItemAttribute} CMsgModifyItemAttribute
         */
        CMsgModifyItemAttribute.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgModifyItemAttribute)
                return object;
            var message = new $root.CMsgModifyItemAttribute();
            if (object.item_id != null)
                if ($util.Long)
                    (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                else if (typeof object.item_id === "string")
                    message.item_id = parseInt(object.item_id, 10);
                else if (typeof object.item_id === "number")
                    message.item_id = object.item_id;
                else if (typeof object.item_id === "object")
                    message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
            if (object.attr_defidx != null)
                message.attr_defidx = object.attr_defidx >>> 0;
            if (object.attr_value != null)
                message.attr_value = object.attr_value >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgModifyItemAttribute message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {CMsgModifyItemAttribute} message CMsgModifyItemAttribute
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgModifyItemAttribute.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_id = options.longs === String ? "0" : 0;
                object.attr_defidx = 0;
                object.attr_value = 0;
            }
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (typeof message.item_id === "number")
                    object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                else
                    object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
            if (message.attr_defidx != null && message.hasOwnProperty("attr_defidx"))
                object.attr_defidx = message.attr_defidx;
            if (message.attr_value != null && message.hasOwnProperty("attr_value"))
                object.attr_value = message.attr_value;
            return object;
        };
    
        /**
         * Converts this CMsgModifyItemAttribute to JSON.
         * @function toJSON
         * @memberof CMsgModifyItemAttribute
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgModifyItemAttribute.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgModifyItemAttribute
         * @function getTypeUrl
         * @memberof CMsgModifyItemAttribute
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgModifyItemAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgModifyItemAttribute";
        };
    
        return CMsgModifyItemAttribute;
    })();
    
    $root.CMsgApplyStatTrakSwap = (function() {
    
        /**
         * Properties of a CMsgApplyStatTrakSwap.
         * @exports ICMsgApplyStatTrakSwap
         * @interface ICMsgApplyStatTrakSwap
         * @property {number|Long|null} [tool_item_id] CMsgApplyStatTrakSwap tool_item_id
         * @property {number|Long|null} [item_1_item_id] CMsgApplyStatTrakSwap item_1_item_id
         * @property {number|Long|null} [item_2_item_id] CMsgApplyStatTrakSwap item_2_item_id
         */
    
        /**
         * Constructs a new CMsgApplyStatTrakSwap.
         * @exports CMsgApplyStatTrakSwap
         * @classdesc Represents a CMsgApplyStatTrakSwap.
         * @implements ICMsgApplyStatTrakSwap
         * @constructor
         * @param {ICMsgApplyStatTrakSwap=} [properties] Properties to set
         */
        function CMsgApplyStatTrakSwap(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplyStatTrakSwap tool_item_id.
         * @member {number|Long} tool_item_id
         * @memberof CMsgApplyStatTrakSwap
         * @instance
         */
        CMsgApplyStatTrakSwap.prototype.tool_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyStatTrakSwap item_1_item_id.
         * @member {number|Long} item_1_item_id
         * @memberof CMsgApplyStatTrakSwap
         * @instance
         */
        CMsgApplyStatTrakSwap.prototype.item_1_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyStatTrakSwap item_2_item_id.
         * @member {number|Long} item_2_item_id
         * @memberof CMsgApplyStatTrakSwap
         * @instance
         */
        CMsgApplyStatTrakSwap.prototype.item_2_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgApplyStatTrakSwap instance using the specified properties.
         * @function create
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {ICMsgApplyStatTrakSwap=} [properties] Properties to set
         * @returns {CMsgApplyStatTrakSwap} CMsgApplyStatTrakSwap instance
         */
        CMsgApplyStatTrakSwap.create = function create(properties) {
            return new CMsgApplyStatTrakSwap(properties);
        };
    
        /**
         * Encodes the specified CMsgApplyStatTrakSwap message. Does not implicitly {@link CMsgApplyStatTrakSwap.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {ICMsgApplyStatTrakSwap} message CMsgApplyStatTrakSwap message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyStatTrakSwap.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.tool_item_id != null && Object.hasOwnProperty.call(message, "tool_item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.tool_item_id);
            if (message.item_1_item_id != null && Object.hasOwnProperty.call(message, "item_1_item_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.item_1_item_id);
            if (message.item_2_item_id != null && Object.hasOwnProperty.call(message, "item_2_item_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.item_2_item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplyStatTrakSwap message, length delimited. Does not implicitly {@link CMsgApplyStatTrakSwap.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {ICMsgApplyStatTrakSwap} message CMsgApplyStatTrakSwap message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyStatTrakSwap.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplyStatTrakSwap message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplyStatTrakSwap} CMsgApplyStatTrakSwap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyStatTrakSwap.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplyStatTrakSwap();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.tool_item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.item_1_item_id = reader.uint64();
                        break;
                    }
                case 3: {
                        message.item_2_item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplyStatTrakSwap message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplyStatTrakSwap} CMsgApplyStatTrakSwap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyStatTrakSwap.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplyStatTrakSwap message.
         * @function verify
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplyStatTrakSwap.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.tool_item_id != null && message.hasOwnProperty("tool_item_id"))
                if (!$util.isInteger(message.tool_item_id) && !(message.tool_item_id && $util.isInteger(message.tool_item_id.low) && $util.isInteger(message.tool_item_id.high)))
                    return "tool_item_id: integer|Long expected";
            if (message.item_1_item_id != null && message.hasOwnProperty("item_1_item_id"))
                if (!$util.isInteger(message.item_1_item_id) && !(message.item_1_item_id && $util.isInteger(message.item_1_item_id.low) && $util.isInteger(message.item_1_item_id.high)))
                    return "item_1_item_id: integer|Long expected";
            if (message.item_2_item_id != null && message.hasOwnProperty("item_2_item_id"))
                if (!$util.isInteger(message.item_2_item_id) && !(message.item_2_item_id && $util.isInteger(message.item_2_item_id.low) && $util.isInteger(message.item_2_item_id.high)))
                    return "item_2_item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplyStatTrakSwap message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplyStatTrakSwap} CMsgApplyStatTrakSwap
         */
        CMsgApplyStatTrakSwap.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplyStatTrakSwap)
                return object;
            var message = new $root.CMsgApplyStatTrakSwap();
            if (object.tool_item_id != null)
                if ($util.Long)
                    (message.tool_item_id = $util.Long.fromValue(object.tool_item_id)).unsigned = true;
                else if (typeof object.tool_item_id === "string")
                    message.tool_item_id = parseInt(object.tool_item_id, 10);
                else if (typeof object.tool_item_id === "number")
                    message.tool_item_id = object.tool_item_id;
                else if (typeof object.tool_item_id === "object")
                    message.tool_item_id = new $util.LongBits(object.tool_item_id.low >>> 0, object.tool_item_id.high >>> 0).toNumber(true);
            if (object.item_1_item_id != null)
                if ($util.Long)
                    (message.item_1_item_id = $util.Long.fromValue(object.item_1_item_id)).unsigned = true;
                else if (typeof object.item_1_item_id === "string")
                    message.item_1_item_id = parseInt(object.item_1_item_id, 10);
                else if (typeof object.item_1_item_id === "number")
                    message.item_1_item_id = object.item_1_item_id;
                else if (typeof object.item_1_item_id === "object")
                    message.item_1_item_id = new $util.LongBits(object.item_1_item_id.low >>> 0, object.item_1_item_id.high >>> 0).toNumber(true);
            if (object.item_2_item_id != null)
                if ($util.Long)
                    (message.item_2_item_id = $util.Long.fromValue(object.item_2_item_id)).unsigned = true;
                else if (typeof object.item_2_item_id === "string")
                    message.item_2_item_id = parseInt(object.item_2_item_id, 10);
                else if (typeof object.item_2_item_id === "number")
                    message.item_2_item_id = object.item_2_item_id;
                else if (typeof object.item_2_item_id === "object")
                    message.item_2_item_id = new $util.LongBits(object.item_2_item_id.low >>> 0, object.item_2_item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplyStatTrakSwap message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {CMsgApplyStatTrakSwap} message CMsgApplyStatTrakSwap
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplyStatTrakSwap.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.tool_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.tool_item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_1_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_1_item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_2_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_2_item_id = options.longs === String ? "0" : 0;
            }
            if (message.tool_item_id != null && message.hasOwnProperty("tool_item_id"))
                if (typeof message.tool_item_id === "number")
                    object.tool_item_id = options.longs === String ? String(message.tool_item_id) : message.tool_item_id;
                else
                    object.tool_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.tool_item_id) : options.longs === Number ? new $util.LongBits(message.tool_item_id.low >>> 0, message.tool_item_id.high >>> 0).toNumber(true) : message.tool_item_id;
            if (message.item_1_item_id != null && message.hasOwnProperty("item_1_item_id"))
                if (typeof message.item_1_item_id === "number")
                    object.item_1_item_id = options.longs === String ? String(message.item_1_item_id) : message.item_1_item_id;
                else
                    object.item_1_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_1_item_id) : options.longs === Number ? new $util.LongBits(message.item_1_item_id.low >>> 0, message.item_1_item_id.high >>> 0).toNumber(true) : message.item_1_item_id;
            if (message.item_2_item_id != null && message.hasOwnProperty("item_2_item_id"))
                if (typeof message.item_2_item_id === "number")
                    object.item_2_item_id = options.longs === String ? String(message.item_2_item_id) : message.item_2_item_id;
                else
                    object.item_2_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_2_item_id) : options.longs === Number ? new $util.LongBits(message.item_2_item_id.low >>> 0, message.item_2_item_id.high >>> 0).toNumber(true) : message.item_2_item_id;
            return object;
        };
    
        /**
         * Converts this CMsgApplyStatTrakSwap to JSON.
         * @function toJSON
         * @memberof CMsgApplyStatTrakSwap
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplyStatTrakSwap.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplyStatTrakSwap
         * @function getTypeUrl
         * @memberof CMsgApplyStatTrakSwap
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplyStatTrakSwap.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplyStatTrakSwap";
        };
    
        return CMsgApplyStatTrakSwap;
    })();
    
    $root.CMsgApplyStrangePart = (function() {
    
        /**
         * Properties of a CMsgApplyStrangePart.
         * @exports ICMsgApplyStrangePart
         * @interface ICMsgApplyStrangePart
         * @property {number|Long|null} [strange_part_item_id] CMsgApplyStrangePart strange_part_item_id
         * @property {number|Long|null} [item_item_id] CMsgApplyStrangePart item_item_id
         */
    
        /**
         * Constructs a new CMsgApplyStrangePart.
         * @exports CMsgApplyStrangePart
         * @classdesc Represents a CMsgApplyStrangePart.
         * @implements ICMsgApplyStrangePart
         * @constructor
         * @param {ICMsgApplyStrangePart=} [properties] Properties to set
         */
        function CMsgApplyStrangePart(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplyStrangePart strange_part_item_id.
         * @member {number|Long} strange_part_item_id
         * @memberof CMsgApplyStrangePart
         * @instance
         */
        CMsgApplyStrangePart.prototype.strange_part_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyStrangePart item_item_id.
         * @member {number|Long} item_item_id
         * @memberof CMsgApplyStrangePart
         * @instance
         */
        CMsgApplyStrangePart.prototype.item_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgApplyStrangePart instance using the specified properties.
         * @function create
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {ICMsgApplyStrangePart=} [properties] Properties to set
         * @returns {CMsgApplyStrangePart} CMsgApplyStrangePart instance
         */
        CMsgApplyStrangePart.create = function create(properties) {
            return new CMsgApplyStrangePart(properties);
        };
    
        /**
         * Encodes the specified CMsgApplyStrangePart message. Does not implicitly {@link CMsgApplyStrangePart.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {ICMsgApplyStrangePart} message CMsgApplyStrangePart message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyStrangePart.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.strange_part_item_id != null && Object.hasOwnProperty.call(message, "strange_part_item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.strange_part_item_id);
            if (message.item_item_id != null && Object.hasOwnProperty.call(message, "item_item_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.item_item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplyStrangePart message, length delimited. Does not implicitly {@link CMsgApplyStrangePart.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {ICMsgApplyStrangePart} message CMsgApplyStrangePart message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyStrangePart.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplyStrangePart message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplyStrangePart} CMsgApplyStrangePart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyStrangePart.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplyStrangePart();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.strange_part_item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.item_item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplyStrangePart message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplyStrangePart} CMsgApplyStrangePart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyStrangePart.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplyStrangePart message.
         * @function verify
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplyStrangePart.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.strange_part_item_id != null && message.hasOwnProperty("strange_part_item_id"))
                if (!$util.isInteger(message.strange_part_item_id) && !(message.strange_part_item_id && $util.isInteger(message.strange_part_item_id.low) && $util.isInteger(message.strange_part_item_id.high)))
                    return "strange_part_item_id: integer|Long expected";
            if (message.item_item_id != null && message.hasOwnProperty("item_item_id"))
                if (!$util.isInteger(message.item_item_id) && !(message.item_item_id && $util.isInteger(message.item_item_id.low) && $util.isInteger(message.item_item_id.high)))
                    return "item_item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplyStrangePart message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplyStrangePart} CMsgApplyStrangePart
         */
        CMsgApplyStrangePart.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplyStrangePart)
                return object;
            var message = new $root.CMsgApplyStrangePart();
            if (object.strange_part_item_id != null)
                if ($util.Long)
                    (message.strange_part_item_id = $util.Long.fromValue(object.strange_part_item_id)).unsigned = true;
                else if (typeof object.strange_part_item_id === "string")
                    message.strange_part_item_id = parseInt(object.strange_part_item_id, 10);
                else if (typeof object.strange_part_item_id === "number")
                    message.strange_part_item_id = object.strange_part_item_id;
                else if (typeof object.strange_part_item_id === "object")
                    message.strange_part_item_id = new $util.LongBits(object.strange_part_item_id.low >>> 0, object.strange_part_item_id.high >>> 0).toNumber(true);
            if (object.item_item_id != null)
                if ($util.Long)
                    (message.item_item_id = $util.Long.fromValue(object.item_item_id)).unsigned = true;
                else if (typeof object.item_item_id === "string")
                    message.item_item_id = parseInt(object.item_item_id, 10);
                else if (typeof object.item_item_id === "number")
                    message.item_item_id = object.item_item_id;
                else if (typeof object.item_item_id === "object")
                    message.item_item_id = new $util.LongBits(object.item_item_id.low >>> 0, object.item_item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplyStrangePart message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {CMsgApplyStrangePart} message CMsgApplyStrangePart
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplyStrangePart.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.strange_part_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.strange_part_item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_item_id = options.longs === String ? "0" : 0;
            }
            if (message.strange_part_item_id != null && message.hasOwnProperty("strange_part_item_id"))
                if (typeof message.strange_part_item_id === "number")
                    object.strange_part_item_id = options.longs === String ? String(message.strange_part_item_id) : message.strange_part_item_id;
                else
                    object.strange_part_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.strange_part_item_id) : options.longs === Number ? new $util.LongBits(message.strange_part_item_id.low >>> 0, message.strange_part_item_id.high >>> 0).toNumber(true) : message.strange_part_item_id;
            if (message.item_item_id != null && message.hasOwnProperty("item_item_id"))
                if (typeof message.item_item_id === "number")
                    object.item_item_id = options.longs === String ? String(message.item_item_id) : message.item_item_id;
                else
                    object.item_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_item_id) : options.longs === Number ? new $util.LongBits(message.item_item_id.low >>> 0, message.item_item_id.high >>> 0).toNumber(true) : message.item_item_id;
            return object;
        };
    
        /**
         * Converts this CMsgApplyStrangePart to JSON.
         * @function toJSON
         * @memberof CMsgApplyStrangePart
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplyStrangePart.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplyStrangePart
         * @function getTypeUrl
         * @memberof CMsgApplyStrangePart
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplyStrangePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplyStrangePart";
        };
    
        return CMsgApplyStrangePart;
    })();
    
    $root.CMsgApplyPennantUpgrade = (function() {
    
        /**
         * Properties of a CMsgApplyPennantUpgrade.
         * @exports ICMsgApplyPennantUpgrade
         * @interface ICMsgApplyPennantUpgrade
         * @property {number|Long|null} [upgrade_item_id] CMsgApplyPennantUpgrade upgrade_item_id
         * @property {number|Long|null} [pennant_item_id] CMsgApplyPennantUpgrade pennant_item_id
         */
    
        /**
         * Constructs a new CMsgApplyPennantUpgrade.
         * @exports CMsgApplyPennantUpgrade
         * @classdesc Represents a CMsgApplyPennantUpgrade.
         * @implements ICMsgApplyPennantUpgrade
         * @constructor
         * @param {ICMsgApplyPennantUpgrade=} [properties] Properties to set
         */
        function CMsgApplyPennantUpgrade(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplyPennantUpgrade upgrade_item_id.
         * @member {number|Long} upgrade_item_id
         * @memberof CMsgApplyPennantUpgrade
         * @instance
         */
        CMsgApplyPennantUpgrade.prototype.upgrade_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyPennantUpgrade pennant_item_id.
         * @member {number|Long} pennant_item_id
         * @memberof CMsgApplyPennantUpgrade
         * @instance
         */
        CMsgApplyPennantUpgrade.prototype.pennant_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgApplyPennantUpgrade instance using the specified properties.
         * @function create
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {ICMsgApplyPennantUpgrade=} [properties] Properties to set
         * @returns {CMsgApplyPennantUpgrade} CMsgApplyPennantUpgrade instance
         */
        CMsgApplyPennantUpgrade.create = function create(properties) {
            return new CMsgApplyPennantUpgrade(properties);
        };
    
        /**
         * Encodes the specified CMsgApplyPennantUpgrade message. Does not implicitly {@link CMsgApplyPennantUpgrade.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {ICMsgApplyPennantUpgrade} message CMsgApplyPennantUpgrade message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyPennantUpgrade.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.upgrade_item_id != null && Object.hasOwnProperty.call(message, "upgrade_item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.upgrade_item_id);
            if (message.pennant_item_id != null && Object.hasOwnProperty.call(message, "pennant_item_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.pennant_item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplyPennantUpgrade message, length delimited. Does not implicitly {@link CMsgApplyPennantUpgrade.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {ICMsgApplyPennantUpgrade} message CMsgApplyPennantUpgrade message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyPennantUpgrade.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplyPennantUpgrade message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplyPennantUpgrade} CMsgApplyPennantUpgrade
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyPennantUpgrade.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplyPennantUpgrade();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.upgrade_item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.pennant_item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplyPennantUpgrade message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplyPennantUpgrade} CMsgApplyPennantUpgrade
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyPennantUpgrade.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplyPennantUpgrade message.
         * @function verify
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplyPennantUpgrade.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.upgrade_item_id != null && message.hasOwnProperty("upgrade_item_id"))
                if (!$util.isInteger(message.upgrade_item_id) && !(message.upgrade_item_id && $util.isInteger(message.upgrade_item_id.low) && $util.isInteger(message.upgrade_item_id.high)))
                    return "upgrade_item_id: integer|Long expected";
            if (message.pennant_item_id != null && message.hasOwnProperty("pennant_item_id"))
                if (!$util.isInteger(message.pennant_item_id) && !(message.pennant_item_id && $util.isInteger(message.pennant_item_id.low) && $util.isInteger(message.pennant_item_id.high)))
                    return "pennant_item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplyPennantUpgrade message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplyPennantUpgrade} CMsgApplyPennantUpgrade
         */
        CMsgApplyPennantUpgrade.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplyPennantUpgrade)
                return object;
            var message = new $root.CMsgApplyPennantUpgrade();
            if (object.upgrade_item_id != null)
                if ($util.Long)
                    (message.upgrade_item_id = $util.Long.fromValue(object.upgrade_item_id)).unsigned = true;
                else if (typeof object.upgrade_item_id === "string")
                    message.upgrade_item_id = parseInt(object.upgrade_item_id, 10);
                else if (typeof object.upgrade_item_id === "number")
                    message.upgrade_item_id = object.upgrade_item_id;
                else if (typeof object.upgrade_item_id === "object")
                    message.upgrade_item_id = new $util.LongBits(object.upgrade_item_id.low >>> 0, object.upgrade_item_id.high >>> 0).toNumber(true);
            if (object.pennant_item_id != null)
                if ($util.Long)
                    (message.pennant_item_id = $util.Long.fromValue(object.pennant_item_id)).unsigned = true;
                else if (typeof object.pennant_item_id === "string")
                    message.pennant_item_id = parseInt(object.pennant_item_id, 10);
                else if (typeof object.pennant_item_id === "number")
                    message.pennant_item_id = object.pennant_item_id;
                else if (typeof object.pennant_item_id === "object")
                    message.pennant_item_id = new $util.LongBits(object.pennant_item_id.low >>> 0, object.pennant_item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplyPennantUpgrade message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {CMsgApplyPennantUpgrade} message CMsgApplyPennantUpgrade
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplyPennantUpgrade.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.upgrade_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.upgrade_item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.pennant_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.pennant_item_id = options.longs === String ? "0" : 0;
            }
            if (message.upgrade_item_id != null && message.hasOwnProperty("upgrade_item_id"))
                if (typeof message.upgrade_item_id === "number")
                    object.upgrade_item_id = options.longs === String ? String(message.upgrade_item_id) : message.upgrade_item_id;
                else
                    object.upgrade_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.upgrade_item_id) : options.longs === Number ? new $util.LongBits(message.upgrade_item_id.low >>> 0, message.upgrade_item_id.high >>> 0).toNumber(true) : message.upgrade_item_id;
            if (message.pennant_item_id != null && message.hasOwnProperty("pennant_item_id"))
                if (typeof message.pennant_item_id === "number")
                    object.pennant_item_id = options.longs === String ? String(message.pennant_item_id) : message.pennant_item_id;
                else
                    object.pennant_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.pennant_item_id) : options.longs === Number ? new $util.LongBits(message.pennant_item_id.low >>> 0, message.pennant_item_id.high >>> 0).toNumber(true) : message.pennant_item_id;
            return object;
        };
    
        /**
         * Converts this CMsgApplyPennantUpgrade to JSON.
         * @function toJSON
         * @memberof CMsgApplyPennantUpgrade
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplyPennantUpgrade.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplyPennantUpgrade
         * @function getTypeUrl
         * @memberof CMsgApplyPennantUpgrade
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplyPennantUpgrade.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplyPennantUpgrade";
        };
    
        return CMsgApplyPennantUpgrade;
    })();
    
    $root.CMsgApplyEggEssence = (function() {
    
        /**
         * Properties of a CMsgApplyEggEssence.
         * @exports ICMsgApplyEggEssence
         * @interface ICMsgApplyEggEssence
         * @property {number|Long|null} [essence_item_id] CMsgApplyEggEssence essence_item_id
         * @property {number|Long|null} [egg_item_id] CMsgApplyEggEssence egg_item_id
         */
    
        /**
         * Constructs a new CMsgApplyEggEssence.
         * @exports CMsgApplyEggEssence
         * @classdesc Represents a CMsgApplyEggEssence.
         * @implements ICMsgApplyEggEssence
         * @constructor
         * @param {ICMsgApplyEggEssence=} [properties] Properties to set
         */
        function CMsgApplyEggEssence(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgApplyEggEssence essence_item_id.
         * @member {number|Long} essence_item_id
         * @memberof CMsgApplyEggEssence
         * @instance
         */
        CMsgApplyEggEssence.prototype.essence_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgApplyEggEssence egg_item_id.
         * @member {number|Long} egg_item_id
         * @memberof CMsgApplyEggEssence
         * @instance
         */
        CMsgApplyEggEssence.prototype.egg_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgApplyEggEssence instance using the specified properties.
         * @function create
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {ICMsgApplyEggEssence=} [properties] Properties to set
         * @returns {CMsgApplyEggEssence} CMsgApplyEggEssence instance
         */
        CMsgApplyEggEssence.create = function create(properties) {
            return new CMsgApplyEggEssence(properties);
        };
    
        /**
         * Encodes the specified CMsgApplyEggEssence message. Does not implicitly {@link CMsgApplyEggEssence.verify|verify} messages.
         * @function encode
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {ICMsgApplyEggEssence} message CMsgApplyEggEssence message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyEggEssence.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.essence_item_id != null && Object.hasOwnProperty.call(message, "essence_item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.essence_item_id);
            if (message.egg_item_id != null && Object.hasOwnProperty.call(message, "egg_item_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.egg_item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgApplyEggEssence message, length delimited. Does not implicitly {@link CMsgApplyEggEssence.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {ICMsgApplyEggEssence} message CMsgApplyEggEssence message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgApplyEggEssence.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgApplyEggEssence message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgApplyEggEssence} CMsgApplyEggEssence
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyEggEssence.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgApplyEggEssence();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.essence_item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.egg_item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgApplyEggEssence message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgApplyEggEssence} CMsgApplyEggEssence
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgApplyEggEssence.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgApplyEggEssence message.
         * @function verify
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgApplyEggEssence.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.essence_item_id != null && message.hasOwnProperty("essence_item_id"))
                if (!$util.isInteger(message.essence_item_id) && !(message.essence_item_id && $util.isInteger(message.essence_item_id.low) && $util.isInteger(message.essence_item_id.high)))
                    return "essence_item_id: integer|Long expected";
            if (message.egg_item_id != null && message.hasOwnProperty("egg_item_id"))
                if (!$util.isInteger(message.egg_item_id) && !(message.egg_item_id && $util.isInteger(message.egg_item_id.low) && $util.isInteger(message.egg_item_id.high)))
                    return "egg_item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgApplyEggEssence message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgApplyEggEssence} CMsgApplyEggEssence
         */
        CMsgApplyEggEssence.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgApplyEggEssence)
                return object;
            var message = new $root.CMsgApplyEggEssence();
            if (object.essence_item_id != null)
                if ($util.Long)
                    (message.essence_item_id = $util.Long.fromValue(object.essence_item_id)).unsigned = true;
                else if (typeof object.essence_item_id === "string")
                    message.essence_item_id = parseInt(object.essence_item_id, 10);
                else if (typeof object.essence_item_id === "number")
                    message.essence_item_id = object.essence_item_id;
                else if (typeof object.essence_item_id === "object")
                    message.essence_item_id = new $util.LongBits(object.essence_item_id.low >>> 0, object.essence_item_id.high >>> 0).toNumber(true);
            if (object.egg_item_id != null)
                if ($util.Long)
                    (message.egg_item_id = $util.Long.fromValue(object.egg_item_id)).unsigned = true;
                else if (typeof object.egg_item_id === "string")
                    message.egg_item_id = parseInt(object.egg_item_id, 10);
                else if (typeof object.egg_item_id === "number")
                    message.egg_item_id = object.egg_item_id;
                else if (typeof object.egg_item_id === "object")
                    message.egg_item_id = new $util.LongBits(object.egg_item_id.low >>> 0, object.egg_item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgApplyEggEssence message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {CMsgApplyEggEssence} message CMsgApplyEggEssence
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgApplyEggEssence.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.essence_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.essence_item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.egg_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.egg_item_id = options.longs === String ? "0" : 0;
            }
            if (message.essence_item_id != null && message.hasOwnProperty("essence_item_id"))
                if (typeof message.essence_item_id === "number")
                    object.essence_item_id = options.longs === String ? String(message.essence_item_id) : message.essence_item_id;
                else
                    object.essence_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.essence_item_id) : options.longs === Number ? new $util.LongBits(message.essence_item_id.low >>> 0, message.essence_item_id.high >>> 0).toNumber(true) : message.essence_item_id;
            if (message.egg_item_id != null && message.hasOwnProperty("egg_item_id"))
                if (typeof message.egg_item_id === "number")
                    object.egg_item_id = options.longs === String ? String(message.egg_item_id) : message.egg_item_id;
                else
                    object.egg_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.egg_item_id) : options.longs === Number ? new $util.LongBits(message.egg_item_id.low >>> 0, message.egg_item_id.high >>> 0).toNumber(true) : message.egg_item_id;
            return object;
        };
    
        /**
         * Converts this CMsgApplyEggEssence to JSON.
         * @function toJSON
         * @memberof CMsgApplyEggEssence
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgApplyEggEssence.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgApplyEggEssence
         * @function getTypeUrl
         * @memberof CMsgApplyEggEssence
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgApplyEggEssence.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgApplyEggEssence";
        };
    
        return CMsgApplyEggEssence;
    })();
    
    $root.CSOEconItemAttribute = (function() {
    
        /**
         * Properties of a CSOEconItemAttribute.
         * @exports ICSOEconItemAttribute
         * @interface ICSOEconItemAttribute
         * @property {number|null} [def_index] CSOEconItemAttribute def_index
         * @property {number|null} [value] CSOEconItemAttribute value
         * @property {Uint8Array|null} [value_bytes] CSOEconItemAttribute value_bytes
         */
    
        /**
         * Constructs a new CSOEconItemAttribute.
         * @exports CSOEconItemAttribute
         * @classdesc Represents a CSOEconItemAttribute.
         * @implements ICSOEconItemAttribute
         * @constructor
         * @param {ICSOEconItemAttribute=} [properties] Properties to set
         */
        function CSOEconItemAttribute(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemAttribute def_index.
         * @member {number} def_index
         * @memberof CSOEconItemAttribute
         * @instance
         */
        CSOEconItemAttribute.prototype.def_index = 0;
    
        /**
         * CSOEconItemAttribute value.
         * @member {number} value
         * @memberof CSOEconItemAttribute
         * @instance
         */
        CSOEconItemAttribute.prototype.value = 0;
    
        /**
         * CSOEconItemAttribute value_bytes.
         * @member {Uint8Array} value_bytes
         * @memberof CSOEconItemAttribute
         * @instance
         */
        CSOEconItemAttribute.prototype.value_bytes = $util.newBuffer([]);
    
        /**
         * Creates a new CSOEconItemAttribute instance using the specified properties.
         * @function create
         * @memberof CSOEconItemAttribute
         * @static
         * @param {ICSOEconItemAttribute=} [properties] Properties to set
         * @returns {CSOEconItemAttribute} CSOEconItemAttribute instance
         */
        CSOEconItemAttribute.create = function create(properties) {
            return new CSOEconItemAttribute(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemAttribute message. Does not implicitly {@link CSOEconItemAttribute.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemAttribute
         * @static
         * @param {ICSOEconItemAttribute} message CSOEconItemAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemAttribute.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.def_index != null && Object.hasOwnProperty.call(message, "def_index"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.def_index);
            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.value);
            if (message.value_bytes != null && Object.hasOwnProperty.call(message, "value_bytes"))
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.value_bytes);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemAttribute message, length delimited. Does not implicitly {@link CSOEconItemAttribute.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemAttribute
         * @static
         * @param {ICSOEconItemAttribute} message CSOEconItemAttribute message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemAttribute.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemAttribute message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemAttribute} CSOEconItemAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemAttribute.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemAttribute();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.def_index = reader.uint32();
                        break;
                    }
                case 2: {
                        message.value = reader.uint32();
                        break;
                    }
                case 3: {
                        message.value_bytes = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemAttribute message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemAttribute
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemAttribute} CSOEconItemAttribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemAttribute.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemAttribute message.
         * @function verify
         * @memberof CSOEconItemAttribute
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemAttribute.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                if (!$util.isInteger(message.def_index))
                    return "def_index: integer expected";
            if (message.value != null && message.hasOwnProperty("value"))
                if (!$util.isInteger(message.value))
                    return "value: integer expected";
            if (message.value_bytes != null && message.hasOwnProperty("value_bytes"))
                if (!(message.value_bytes && typeof message.value_bytes.length === "number" || $util.isString(message.value_bytes)))
                    return "value_bytes: buffer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemAttribute message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemAttribute
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemAttribute} CSOEconItemAttribute
         */
        CSOEconItemAttribute.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemAttribute)
                return object;
            var message = new $root.CSOEconItemAttribute();
            if (object.def_index != null)
                message.def_index = object.def_index >>> 0;
            if (object.value != null)
                message.value = object.value >>> 0;
            if (object.value_bytes != null)
                if (typeof object.value_bytes === "string")
                    $util.base64.decode(object.value_bytes, message.value_bytes = $util.newBuffer($util.base64.length(object.value_bytes)), 0);
                else if (object.value_bytes.length >= 0)
                    message.value_bytes = object.value_bytes;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemAttribute message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemAttribute
         * @static
         * @param {CSOEconItemAttribute} message CSOEconItemAttribute
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemAttribute.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.def_index = 0;
                object.value = 0;
                if (options.bytes === String)
                    object.value_bytes = "";
                else {
                    object.value_bytes = [];
                    if (options.bytes !== Array)
                        object.value_bytes = $util.newBuffer(object.value_bytes);
                }
            }
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                object.def_index = message.def_index;
            if (message.value != null && message.hasOwnProperty("value"))
                object.value = message.value;
            if (message.value_bytes != null && message.hasOwnProperty("value_bytes"))
                object.value_bytes = options.bytes === String ? $util.base64.encode(message.value_bytes, 0, message.value_bytes.length) : options.bytes === Array ? Array.prototype.slice.call(message.value_bytes) : message.value_bytes;
            return object;
        };
    
        /**
         * Converts this CSOEconItemAttribute to JSON.
         * @function toJSON
         * @memberof CSOEconItemAttribute
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemAttribute.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemAttribute
         * @function getTypeUrl
         * @memberof CSOEconItemAttribute
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemAttribute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemAttribute";
        };
    
        return CSOEconItemAttribute;
    })();
    
    $root.CSOEconItemEquipped = (function() {
    
        /**
         * Properties of a CSOEconItemEquipped.
         * @exports ICSOEconItemEquipped
         * @interface ICSOEconItemEquipped
         * @property {number|null} [new_class] CSOEconItemEquipped new_class
         * @property {number|null} [new_slot] CSOEconItemEquipped new_slot
         */
    
        /**
         * Constructs a new CSOEconItemEquipped.
         * @exports CSOEconItemEquipped
         * @classdesc Represents a CSOEconItemEquipped.
         * @implements ICSOEconItemEquipped
         * @constructor
         * @param {ICSOEconItemEquipped=} [properties] Properties to set
         */
        function CSOEconItemEquipped(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemEquipped new_class.
         * @member {number} new_class
         * @memberof CSOEconItemEquipped
         * @instance
         */
        CSOEconItemEquipped.prototype.new_class = 0;
    
        /**
         * CSOEconItemEquipped new_slot.
         * @member {number} new_slot
         * @memberof CSOEconItemEquipped
         * @instance
         */
        CSOEconItemEquipped.prototype.new_slot = 0;
    
        /**
         * Creates a new CSOEconItemEquipped instance using the specified properties.
         * @function create
         * @memberof CSOEconItemEquipped
         * @static
         * @param {ICSOEconItemEquipped=} [properties] Properties to set
         * @returns {CSOEconItemEquipped} CSOEconItemEquipped instance
         */
        CSOEconItemEquipped.create = function create(properties) {
            return new CSOEconItemEquipped(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemEquipped message. Does not implicitly {@link CSOEconItemEquipped.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemEquipped
         * @static
         * @param {ICSOEconItemEquipped} message CSOEconItemEquipped message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemEquipped.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.new_class != null && Object.hasOwnProperty.call(message, "new_class"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.new_class);
            if (message.new_slot != null && Object.hasOwnProperty.call(message, "new_slot"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.new_slot);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemEquipped message, length delimited. Does not implicitly {@link CSOEconItemEquipped.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemEquipped
         * @static
         * @param {ICSOEconItemEquipped} message CSOEconItemEquipped message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemEquipped.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemEquipped message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemEquipped
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemEquipped} CSOEconItemEquipped
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemEquipped.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemEquipped();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.new_class = reader.uint32();
                        break;
                    }
                case 2: {
                        message.new_slot = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemEquipped message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemEquipped
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemEquipped} CSOEconItemEquipped
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemEquipped.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemEquipped message.
         * @function verify
         * @memberof CSOEconItemEquipped
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemEquipped.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.new_class != null && message.hasOwnProperty("new_class"))
                if (!$util.isInteger(message.new_class))
                    return "new_class: integer expected";
            if (message.new_slot != null && message.hasOwnProperty("new_slot"))
                if (!$util.isInteger(message.new_slot))
                    return "new_slot: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemEquipped message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemEquipped
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemEquipped} CSOEconItemEquipped
         */
        CSOEconItemEquipped.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemEquipped)
                return object;
            var message = new $root.CSOEconItemEquipped();
            if (object.new_class != null)
                message.new_class = object.new_class >>> 0;
            if (object.new_slot != null)
                message.new_slot = object.new_slot >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemEquipped message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemEquipped
         * @static
         * @param {CSOEconItemEquipped} message CSOEconItemEquipped
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemEquipped.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.new_class = 0;
                object.new_slot = 0;
            }
            if (message.new_class != null && message.hasOwnProperty("new_class"))
                object.new_class = message.new_class;
            if (message.new_slot != null && message.hasOwnProperty("new_slot"))
                object.new_slot = message.new_slot;
            return object;
        };
    
        /**
         * Converts this CSOEconItemEquipped to JSON.
         * @function toJSON
         * @memberof CSOEconItemEquipped
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemEquipped.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemEquipped
         * @function getTypeUrl
         * @memberof CSOEconItemEquipped
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemEquipped.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemEquipped";
        };
    
        return CSOEconItemEquipped;
    })();
    
    $root.CSOEconItem = (function() {
    
        /**
         * Properties of a CSOEconItem.
         * @exports ICSOEconItem
         * @interface ICSOEconItem
         * @property {number|Long|null} [id] CSOEconItem id
         * @property {number|null} [account_id] CSOEconItem account_id
         * @property {number|null} [inventory] CSOEconItem inventory
         * @property {number|null} [def_index] CSOEconItem def_index
         * @property {number|null} [quantity] CSOEconItem quantity
         * @property {number|null} [level] CSOEconItem level
         * @property {number|null} [quality] CSOEconItem quality
         * @property {number|null} [flags] CSOEconItem flags
         * @property {number|null} [origin] CSOEconItem origin
         * @property {string|null} [custom_name] CSOEconItem custom_name
         * @property {string|null} [custom_desc] CSOEconItem custom_desc
         * @property {Array.<ICSOEconItemAttribute>|null} [attribute] CSOEconItem attribute
         * @property {ICSOEconItem|null} [interior_item] CSOEconItem interior_item
         * @property {boolean|null} [in_use] CSOEconItem in_use
         * @property {number|null} [style] CSOEconItem style
         * @property {number|Long|null} [original_id] CSOEconItem original_id
         * @property {Array.<ICSOEconItemEquipped>|null} [equipped_state] CSOEconItem equipped_state
         * @property {number|null} [rarity] CSOEconItem rarity
         */
    
        /**
         * Constructs a new CSOEconItem.
         * @exports CSOEconItem
         * @classdesc Represents a CSOEconItem.
         * @implements ICSOEconItem
         * @constructor
         * @param {ICSOEconItem=} [properties] Properties to set
         */
        function CSOEconItem(properties) {
            this.attribute = [];
            this.equipped_state = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItem id.
         * @member {number|Long} id
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconItem account_id.
         * @member {number} account_id
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.account_id = 0;
    
        /**
         * CSOEconItem inventory.
         * @member {number} inventory
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.inventory = 0;
    
        /**
         * CSOEconItem def_index.
         * @member {number} def_index
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.def_index = 0;
    
        /**
         * CSOEconItem quantity.
         * @member {number} quantity
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.quantity = 0;
    
        /**
         * CSOEconItem level.
         * @member {number} level
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.level = 0;
    
        /**
         * CSOEconItem quality.
         * @member {number} quality
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.quality = 0;
    
        /**
         * CSOEconItem flags.
         * @member {number} flags
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.flags = 0;
    
        /**
         * CSOEconItem origin.
         * @member {number} origin
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.origin = 0;
    
        /**
         * CSOEconItem custom_name.
         * @member {string} custom_name
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.custom_name = "";
    
        /**
         * CSOEconItem custom_desc.
         * @member {string} custom_desc
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.custom_desc = "";
    
        /**
         * CSOEconItem attribute.
         * @member {Array.<ICSOEconItemAttribute>} attribute
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.attribute = $util.emptyArray;
    
        /**
         * CSOEconItem interior_item.
         * @member {ICSOEconItem|null|undefined} interior_item
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.interior_item = null;
    
        /**
         * CSOEconItem in_use.
         * @member {boolean} in_use
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.in_use = false;
    
        /**
         * CSOEconItem style.
         * @member {number} style
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.style = 0;
    
        /**
         * CSOEconItem original_id.
         * @member {number|Long} original_id
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.original_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconItem equipped_state.
         * @member {Array.<ICSOEconItemEquipped>} equipped_state
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.equipped_state = $util.emptyArray;
    
        /**
         * CSOEconItem rarity.
         * @member {number} rarity
         * @memberof CSOEconItem
         * @instance
         */
        CSOEconItem.prototype.rarity = 0;
    
        /**
         * Creates a new CSOEconItem instance using the specified properties.
         * @function create
         * @memberof CSOEconItem
         * @static
         * @param {ICSOEconItem=} [properties] Properties to set
         * @returns {CSOEconItem} CSOEconItem instance
         */
        CSOEconItem.create = function create(properties) {
            return new CSOEconItem(properties);
        };
    
        /**
         * Encodes the specified CSOEconItem message. Does not implicitly {@link CSOEconItem.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItem
         * @static
         * @param {ICSOEconItem} message CSOEconItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.id);
            if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.account_id);
            if (message.inventory != null && Object.hasOwnProperty.call(message, "inventory"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.inventory);
            if (message.def_index != null && Object.hasOwnProperty.call(message, "def_index"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.def_index);
            if (message.quantity != null && Object.hasOwnProperty.call(message, "quantity"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.quantity);
            if (message.level != null && Object.hasOwnProperty.call(message, "level"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.level);
            if (message.quality != null && Object.hasOwnProperty.call(message, "quality"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.quality);
            if (message.flags != null && Object.hasOwnProperty.call(message, "flags"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.flags);
            if (message.origin != null && Object.hasOwnProperty.call(message, "origin"))
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.origin);
            if (message.custom_name != null && Object.hasOwnProperty.call(message, "custom_name"))
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.custom_name);
            if (message.custom_desc != null && Object.hasOwnProperty.call(message, "custom_desc"))
                writer.uint32(/* id 11, wireType 2 =*/90).string(message.custom_desc);
            if (message.attribute != null && message.attribute.length)
                for (var i = 0; i < message.attribute.length; ++i)
                    $root.CSOEconItemAttribute.encode(message.attribute[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
            if (message.interior_item != null && Object.hasOwnProperty.call(message, "interior_item"))
                $root.CSOEconItem.encode(message.interior_item, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
            if (message.in_use != null && Object.hasOwnProperty.call(message, "in_use"))
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.in_use);
            if (message.style != null && Object.hasOwnProperty.call(message, "style"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.style);
            if (message.original_id != null && Object.hasOwnProperty.call(message, "original_id"))
                writer.uint32(/* id 16, wireType 0 =*/128).uint64(message.original_id);
            if (message.equipped_state != null && message.equipped_state.length)
                for (var i = 0; i < message.equipped_state.length; ++i)
                    $root.CSOEconItemEquipped.encode(message.equipped_state[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
            if (message.rarity != null && Object.hasOwnProperty.call(message, "rarity"))
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.rarity);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItem message, length delimited. Does not implicitly {@link CSOEconItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItem
         * @static
         * @param {ICSOEconItem} message CSOEconItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItem message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItem} CSOEconItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItem.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.account_id = reader.uint32();
                        break;
                    }
                case 3: {
                        message.inventory = reader.uint32();
                        break;
                    }
                case 4: {
                        message.def_index = reader.uint32();
                        break;
                    }
                case 5: {
                        message.quantity = reader.uint32();
                        break;
                    }
                case 6: {
                        message.level = reader.uint32();
                        break;
                    }
                case 7: {
                        message.quality = reader.uint32();
                        break;
                    }
                case 8: {
                        message.flags = reader.uint32();
                        break;
                    }
                case 9: {
                        message.origin = reader.uint32();
                        break;
                    }
                case 10: {
                        message.custom_name = reader.string();
                        break;
                    }
                case 11: {
                        message.custom_desc = reader.string();
                        break;
                    }
                case 12: {
                        if (!(message.attribute && message.attribute.length))
                            message.attribute = [];
                        message.attribute.push($root.CSOEconItemAttribute.decode(reader, reader.uint32()));
                        break;
                    }
                case 13: {
                        message.interior_item = $root.CSOEconItem.decode(reader, reader.uint32());
                        break;
                    }
                case 14: {
                        message.in_use = reader.bool();
                        break;
                    }
                case 15: {
                        message.style = reader.uint32();
                        break;
                    }
                case 16: {
                        message.original_id = reader.uint64();
                        break;
                    }
                case 18: {
                        if (!(message.equipped_state && message.equipped_state.length))
                            message.equipped_state = [];
                        message.equipped_state.push($root.CSOEconItemEquipped.decode(reader, reader.uint32()));
                        break;
                    }
                case 19: {
                        message.rarity = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItem} CSOEconItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItem message.
         * @function verify
         * @memberof CSOEconItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.id != null && message.hasOwnProperty("id"))
                if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                    return "id: integer|Long expected";
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                if (!$util.isInteger(message.account_id))
                    return "account_id: integer expected";
            if (message.inventory != null && message.hasOwnProperty("inventory"))
                if (!$util.isInteger(message.inventory))
                    return "inventory: integer expected";
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                if (!$util.isInteger(message.def_index))
                    return "def_index: integer expected";
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                if (!$util.isInteger(message.quantity))
                    return "quantity: integer expected";
            if (message.level != null && message.hasOwnProperty("level"))
                if (!$util.isInteger(message.level))
                    return "level: integer expected";
            if (message.quality != null && message.hasOwnProperty("quality"))
                if (!$util.isInteger(message.quality))
                    return "quality: integer expected";
            if (message.flags != null && message.hasOwnProperty("flags"))
                if (!$util.isInteger(message.flags))
                    return "flags: integer expected";
            if (message.origin != null && message.hasOwnProperty("origin"))
                if (!$util.isInteger(message.origin))
                    return "origin: integer expected";
            if (message.custom_name != null && message.hasOwnProperty("custom_name"))
                if (!$util.isString(message.custom_name))
                    return "custom_name: string expected";
            if (message.custom_desc != null && message.hasOwnProperty("custom_desc"))
                if (!$util.isString(message.custom_desc))
                    return "custom_desc: string expected";
            if (message.attribute != null && message.hasOwnProperty("attribute")) {
                if (!Array.isArray(message.attribute))
                    return "attribute: array expected";
                for (var i = 0; i < message.attribute.length; ++i) {
                    var error = $root.CSOEconItemAttribute.verify(message.attribute[i]);
                    if (error)
                        return "attribute." + error;
                }
            }
            if (message.interior_item != null && message.hasOwnProperty("interior_item")) {
                var error = $root.CSOEconItem.verify(message.interior_item);
                if (error)
                    return "interior_item." + error;
            }
            if (message.in_use != null && message.hasOwnProperty("in_use"))
                if (typeof message.in_use !== "boolean")
                    return "in_use: boolean expected";
            if (message.style != null && message.hasOwnProperty("style"))
                if (!$util.isInteger(message.style))
                    return "style: integer expected";
            if (message.original_id != null && message.hasOwnProperty("original_id"))
                if (!$util.isInteger(message.original_id) && !(message.original_id && $util.isInteger(message.original_id.low) && $util.isInteger(message.original_id.high)))
                    return "original_id: integer|Long expected";
            if (message.equipped_state != null && message.hasOwnProperty("equipped_state")) {
                if (!Array.isArray(message.equipped_state))
                    return "equipped_state: array expected";
                for (var i = 0; i < message.equipped_state.length; ++i) {
                    var error = $root.CSOEconItemEquipped.verify(message.equipped_state[i]);
                    if (error)
                        return "equipped_state." + error;
                }
            }
            if (message.rarity != null && message.hasOwnProperty("rarity"))
                if (!$util.isInteger(message.rarity))
                    return "rarity: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItem} CSOEconItem
         */
        CSOEconItem.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItem)
                return object;
            var message = new $root.CSOEconItem();
            if (object.id != null)
                if ($util.Long)
                    (message.id = $util.Long.fromValue(object.id)).unsigned = true;
                else if (typeof object.id === "string")
                    message.id = parseInt(object.id, 10);
                else if (typeof object.id === "number")
                    message.id = object.id;
                else if (typeof object.id === "object")
                    message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);
            if (object.account_id != null)
                message.account_id = object.account_id >>> 0;
            if (object.inventory != null)
                message.inventory = object.inventory >>> 0;
            if (object.def_index != null)
                message.def_index = object.def_index >>> 0;
            if (object.quantity != null)
                message.quantity = object.quantity >>> 0;
            if (object.level != null)
                message.level = object.level >>> 0;
            if (object.quality != null)
                message.quality = object.quality >>> 0;
            if (object.flags != null)
                message.flags = object.flags >>> 0;
            if (object.origin != null)
                message.origin = object.origin >>> 0;
            if (object.custom_name != null)
                message.custom_name = String(object.custom_name);
            if (object.custom_desc != null)
                message.custom_desc = String(object.custom_desc);
            if (object.attribute) {
                if (!Array.isArray(object.attribute))
                    throw TypeError(".CSOEconItem.attribute: array expected");
                message.attribute = [];
                for (var i = 0; i < object.attribute.length; ++i) {
                    if (typeof object.attribute[i] !== "object")
                        throw TypeError(".CSOEconItem.attribute: object expected");
                    message.attribute[i] = $root.CSOEconItemAttribute.fromObject(object.attribute[i]);
                }
            }
            if (object.interior_item != null) {
                if (typeof object.interior_item !== "object")
                    throw TypeError(".CSOEconItem.interior_item: object expected");
                message.interior_item = $root.CSOEconItem.fromObject(object.interior_item);
            }
            if (object.in_use != null)
                message.in_use = Boolean(object.in_use);
            if (object.style != null)
                message.style = object.style >>> 0;
            if (object.original_id != null)
                if ($util.Long)
                    (message.original_id = $util.Long.fromValue(object.original_id)).unsigned = true;
                else if (typeof object.original_id === "string")
                    message.original_id = parseInt(object.original_id, 10);
                else if (typeof object.original_id === "number")
                    message.original_id = object.original_id;
                else if (typeof object.original_id === "object")
                    message.original_id = new $util.LongBits(object.original_id.low >>> 0, object.original_id.high >>> 0).toNumber(true);
            if (object.equipped_state) {
                if (!Array.isArray(object.equipped_state))
                    throw TypeError(".CSOEconItem.equipped_state: array expected");
                message.equipped_state = [];
                for (var i = 0; i < object.equipped_state.length; ++i) {
                    if (typeof object.equipped_state[i] !== "object")
                        throw TypeError(".CSOEconItem.equipped_state: object expected");
                    message.equipped_state[i] = $root.CSOEconItemEquipped.fromObject(object.equipped_state[i]);
                }
            }
            if (object.rarity != null)
                message.rarity = object.rarity >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItem
         * @static
         * @param {CSOEconItem} message CSOEconItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.attribute = [];
                object.equipped_state = [];
            }
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.id = options.longs === String ? "0" : 0;
                object.account_id = 0;
                object.inventory = 0;
                object.def_index = 0;
                object.quantity = 0;
                object.level = 0;
                object.quality = 0;
                object.flags = 0;
                object.origin = 0;
                object.custom_name = "";
                object.custom_desc = "";
                object.interior_item = null;
                object.in_use = false;
                object.style = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.original_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.original_id = options.longs === String ? "0" : 0;
                object.rarity = 0;
            }
            if (message.id != null && message.hasOwnProperty("id"))
                if (typeof message.id === "number")
                    object.id = options.longs === String ? String(message.id) : message.id;
                else
                    object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                object.account_id = message.account_id;
            if (message.inventory != null && message.hasOwnProperty("inventory"))
                object.inventory = message.inventory;
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                object.def_index = message.def_index;
            if (message.quantity != null && message.hasOwnProperty("quantity"))
                object.quantity = message.quantity;
            if (message.level != null && message.hasOwnProperty("level"))
                object.level = message.level;
            if (message.quality != null && message.hasOwnProperty("quality"))
                object.quality = message.quality;
            if (message.flags != null && message.hasOwnProperty("flags"))
                object.flags = message.flags;
            if (message.origin != null && message.hasOwnProperty("origin"))
                object.origin = message.origin;
            if (message.custom_name != null && message.hasOwnProperty("custom_name"))
                object.custom_name = message.custom_name;
            if (message.custom_desc != null && message.hasOwnProperty("custom_desc"))
                object.custom_desc = message.custom_desc;
            if (message.attribute && message.attribute.length) {
                object.attribute = [];
                for (var j = 0; j < message.attribute.length; ++j)
                    object.attribute[j] = $root.CSOEconItemAttribute.toObject(message.attribute[j], options);
            }
            if (message.interior_item != null && message.hasOwnProperty("interior_item"))
                object.interior_item = $root.CSOEconItem.toObject(message.interior_item, options);
            if (message.in_use != null && message.hasOwnProperty("in_use"))
                object.in_use = message.in_use;
            if (message.style != null && message.hasOwnProperty("style"))
                object.style = message.style;
            if (message.original_id != null && message.hasOwnProperty("original_id"))
                if (typeof message.original_id === "number")
                    object.original_id = options.longs === String ? String(message.original_id) : message.original_id;
                else
                    object.original_id = options.longs === String ? $util.Long.prototype.toString.call(message.original_id) : options.longs === Number ? new $util.LongBits(message.original_id.low >>> 0, message.original_id.high >>> 0).toNumber(true) : message.original_id;
            if (message.equipped_state && message.equipped_state.length) {
                object.equipped_state = [];
                for (var j = 0; j < message.equipped_state.length; ++j)
                    object.equipped_state[j] = $root.CSOEconItemEquipped.toObject(message.equipped_state[j], options);
            }
            if (message.rarity != null && message.hasOwnProperty("rarity"))
                object.rarity = message.rarity;
            return object;
        };
    
        /**
         * Converts this CSOEconItem to JSON.
         * @function toJSON
         * @memberof CSOEconItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItem
         * @function getTypeUrl
         * @memberof CSOEconItem
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItem";
        };
    
        return CSOEconItem;
    })();
    
    $root.CMsgSortItems = (function() {
    
        /**
         * Properties of a CMsgSortItems.
         * @exports ICMsgSortItems
         * @interface ICMsgSortItems
         * @property {number|null} [sort_type] CMsgSortItems sort_type
         */
    
        /**
         * Constructs a new CMsgSortItems.
         * @exports CMsgSortItems
         * @classdesc Represents a CMsgSortItems.
         * @implements ICMsgSortItems
         * @constructor
         * @param {ICMsgSortItems=} [properties] Properties to set
         */
        function CMsgSortItems(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSortItems sort_type.
         * @member {number} sort_type
         * @memberof CMsgSortItems
         * @instance
         */
        CMsgSortItems.prototype.sort_type = 0;
    
        /**
         * Creates a new CMsgSortItems instance using the specified properties.
         * @function create
         * @memberof CMsgSortItems
         * @static
         * @param {ICMsgSortItems=} [properties] Properties to set
         * @returns {CMsgSortItems} CMsgSortItems instance
         */
        CMsgSortItems.create = function create(properties) {
            return new CMsgSortItems(properties);
        };
    
        /**
         * Encodes the specified CMsgSortItems message. Does not implicitly {@link CMsgSortItems.verify|verify} messages.
         * @function encode
         * @memberof CMsgSortItems
         * @static
         * @param {ICMsgSortItems} message CMsgSortItems message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSortItems.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sort_type != null && Object.hasOwnProperty.call(message, "sort_type"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sort_type);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSortItems message, length delimited. Does not implicitly {@link CMsgSortItems.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSortItems
         * @static
         * @param {ICMsgSortItems} message CMsgSortItems message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSortItems.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSortItems message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSortItems
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSortItems} CMsgSortItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSortItems.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSortItems();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.sort_type = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSortItems message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSortItems
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSortItems} CMsgSortItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSortItems.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSortItems message.
         * @function verify
         * @memberof CMsgSortItems
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSortItems.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sort_type != null && message.hasOwnProperty("sort_type"))
                if (!$util.isInteger(message.sort_type))
                    return "sort_type: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgSortItems message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSortItems
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSortItems} CMsgSortItems
         */
        CMsgSortItems.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSortItems)
                return object;
            var message = new $root.CMsgSortItems();
            if (object.sort_type != null)
                message.sort_type = object.sort_type >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSortItems message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSortItems
         * @static
         * @param {CMsgSortItems} message CMsgSortItems
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSortItems.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.sort_type = 0;
            if (message.sort_type != null && message.hasOwnProperty("sort_type"))
                object.sort_type = message.sort_type;
            return object;
        };
    
        /**
         * Converts this CMsgSortItems to JSON.
         * @function toJSON
         * @memberof CMsgSortItems
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSortItems.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSortItems
         * @function getTypeUrl
         * @memberof CMsgSortItems
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSortItems.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSortItems";
        };
    
        return CMsgSortItems;
    })();
    
    $root.CSOEconClaimCode = (function() {
    
        /**
         * Properties of a CSOEconClaimCode.
         * @exports ICSOEconClaimCode
         * @interface ICSOEconClaimCode
         * @property {number|null} [account_id] CSOEconClaimCode account_id
         * @property {number|null} [code_type] CSOEconClaimCode code_type
         * @property {number|null} [time_acquired] CSOEconClaimCode time_acquired
         * @property {string|null} [code] CSOEconClaimCode code
         */
    
        /**
         * Constructs a new CSOEconClaimCode.
         * @exports CSOEconClaimCode
         * @classdesc Represents a CSOEconClaimCode.
         * @implements ICSOEconClaimCode
         * @constructor
         * @param {ICSOEconClaimCode=} [properties] Properties to set
         */
        function CSOEconClaimCode(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconClaimCode account_id.
         * @member {number} account_id
         * @memberof CSOEconClaimCode
         * @instance
         */
        CSOEconClaimCode.prototype.account_id = 0;
    
        /**
         * CSOEconClaimCode code_type.
         * @member {number} code_type
         * @memberof CSOEconClaimCode
         * @instance
         */
        CSOEconClaimCode.prototype.code_type = 0;
    
        /**
         * CSOEconClaimCode time_acquired.
         * @member {number} time_acquired
         * @memberof CSOEconClaimCode
         * @instance
         */
        CSOEconClaimCode.prototype.time_acquired = 0;
    
        /**
         * CSOEconClaimCode code.
         * @member {string} code
         * @memberof CSOEconClaimCode
         * @instance
         */
        CSOEconClaimCode.prototype.code = "";
    
        /**
         * Creates a new CSOEconClaimCode instance using the specified properties.
         * @function create
         * @memberof CSOEconClaimCode
         * @static
         * @param {ICSOEconClaimCode=} [properties] Properties to set
         * @returns {CSOEconClaimCode} CSOEconClaimCode instance
         */
        CSOEconClaimCode.create = function create(properties) {
            return new CSOEconClaimCode(properties);
        };
    
        /**
         * Encodes the specified CSOEconClaimCode message. Does not implicitly {@link CSOEconClaimCode.verify|verify} messages.
         * @function encode
         * @memberof CSOEconClaimCode
         * @static
         * @param {ICSOEconClaimCode} message CSOEconClaimCode message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconClaimCode.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.account_id);
            if (message.code_type != null && Object.hasOwnProperty.call(message, "code_type"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.code_type);
            if (message.time_acquired != null && Object.hasOwnProperty.call(message, "time_acquired"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.time_acquired);
            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.code);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconClaimCode message, length delimited. Does not implicitly {@link CSOEconClaimCode.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconClaimCode
         * @static
         * @param {ICSOEconClaimCode} message CSOEconClaimCode message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconClaimCode.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconClaimCode message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconClaimCode
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconClaimCode} CSOEconClaimCode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconClaimCode.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconClaimCode();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.account_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.code_type = reader.uint32();
                        break;
                    }
                case 3: {
                        message.time_acquired = reader.uint32();
                        break;
                    }
                case 4: {
                        message.code = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconClaimCode message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconClaimCode
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconClaimCode} CSOEconClaimCode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconClaimCode.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconClaimCode message.
         * @function verify
         * @memberof CSOEconClaimCode
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconClaimCode.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                if (!$util.isInteger(message.account_id))
                    return "account_id: integer expected";
            if (message.code_type != null && message.hasOwnProperty("code_type"))
                if (!$util.isInteger(message.code_type))
                    return "code_type: integer expected";
            if (message.time_acquired != null && message.hasOwnProperty("time_acquired"))
                if (!$util.isInteger(message.time_acquired))
                    return "time_acquired: integer expected";
            if (message.code != null && message.hasOwnProperty("code"))
                if (!$util.isString(message.code))
                    return "code: string expected";
            return null;
        };
    
        /**
         * Creates a CSOEconClaimCode message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconClaimCode
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconClaimCode} CSOEconClaimCode
         */
        CSOEconClaimCode.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconClaimCode)
                return object;
            var message = new $root.CSOEconClaimCode();
            if (object.account_id != null)
                message.account_id = object.account_id >>> 0;
            if (object.code_type != null)
                message.code_type = object.code_type >>> 0;
            if (object.time_acquired != null)
                message.time_acquired = object.time_acquired >>> 0;
            if (object.code != null)
                message.code = String(object.code);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconClaimCode message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconClaimCode
         * @static
         * @param {CSOEconClaimCode} message CSOEconClaimCode
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconClaimCode.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_id = 0;
                object.code_type = 0;
                object.time_acquired = 0;
                object.code = "";
            }
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                object.account_id = message.account_id;
            if (message.code_type != null && message.hasOwnProperty("code_type"))
                object.code_type = message.code_type;
            if (message.time_acquired != null && message.hasOwnProperty("time_acquired"))
                object.time_acquired = message.time_acquired;
            if (message.code != null && message.hasOwnProperty("code"))
                object.code = message.code;
            return object;
        };
    
        /**
         * Converts this CSOEconClaimCode to JSON.
         * @function toJSON
         * @memberof CSOEconClaimCode
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconClaimCode.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconClaimCode
         * @function getTypeUrl
         * @memberof CSOEconClaimCode
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconClaimCode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconClaimCode";
        };
    
        return CSOEconClaimCode;
    })();
    
    $root.CMsgStoreGetUserData = (function() {
    
        /**
         * Properties of a CMsgStoreGetUserData.
         * @exports ICMsgStoreGetUserData
         * @interface ICMsgStoreGetUserData
         * @property {number|null} [price_sheet_version] CMsgStoreGetUserData price_sheet_version
         * @property {number|null} [currency] CMsgStoreGetUserData currency
         */
    
        /**
         * Constructs a new CMsgStoreGetUserData.
         * @exports CMsgStoreGetUserData
         * @classdesc Represents a CMsgStoreGetUserData.
         * @implements ICMsgStoreGetUserData
         * @constructor
         * @param {ICMsgStoreGetUserData=} [properties] Properties to set
         */
        function CMsgStoreGetUserData(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgStoreGetUserData price_sheet_version.
         * @member {number} price_sheet_version
         * @memberof CMsgStoreGetUserData
         * @instance
         */
        CMsgStoreGetUserData.prototype.price_sheet_version = 0;
    
        /**
         * CMsgStoreGetUserData currency.
         * @member {number} currency
         * @memberof CMsgStoreGetUserData
         * @instance
         */
        CMsgStoreGetUserData.prototype.currency = 0;
    
        /**
         * Creates a new CMsgStoreGetUserData instance using the specified properties.
         * @function create
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {ICMsgStoreGetUserData=} [properties] Properties to set
         * @returns {CMsgStoreGetUserData} CMsgStoreGetUserData instance
         */
        CMsgStoreGetUserData.create = function create(properties) {
            return new CMsgStoreGetUserData(properties);
        };
    
        /**
         * Encodes the specified CMsgStoreGetUserData message. Does not implicitly {@link CMsgStoreGetUserData.verify|verify} messages.
         * @function encode
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {ICMsgStoreGetUserData} message CMsgStoreGetUserData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgStoreGetUserData.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.price_sheet_version != null && Object.hasOwnProperty.call(message, "price_sheet_version"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.price_sheet_version);
            if (message.currency != null && Object.hasOwnProperty.call(message, "currency"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.currency);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgStoreGetUserData message, length delimited. Does not implicitly {@link CMsgStoreGetUserData.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {ICMsgStoreGetUserData} message CMsgStoreGetUserData message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgStoreGetUserData.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgStoreGetUserData message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgStoreGetUserData} CMsgStoreGetUserData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgStoreGetUserData.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgStoreGetUserData();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.price_sheet_version = reader.fixed32();
                        break;
                    }
                case 2: {
                        message.currency = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgStoreGetUserData message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgStoreGetUserData} CMsgStoreGetUserData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgStoreGetUserData.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgStoreGetUserData message.
         * @function verify
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgStoreGetUserData.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.price_sheet_version != null && message.hasOwnProperty("price_sheet_version"))
                if (!$util.isInteger(message.price_sheet_version))
                    return "price_sheet_version: integer expected";
            if (message.currency != null && message.hasOwnProperty("currency"))
                if (!$util.isInteger(message.currency))
                    return "currency: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgStoreGetUserData message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgStoreGetUserData} CMsgStoreGetUserData
         */
        CMsgStoreGetUserData.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgStoreGetUserData)
                return object;
            var message = new $root.CMsgStoreGetUserData();
            if (object.price_sheet_version != null)
                message.price_sheet_version = object.price_sheet_version >>> 0;
            if (object.currency != null)
                message.currency = object.currency | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgStoreGetUserData message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {CMsgStoreGetUserData} message CMsgStoreGetUserData
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgStoreGetUserData.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.price_sheet_version = 0;
                object.currency = 0;
            }
            if (message.price_sheet_version != null && message.hasOwnProperty("price_sheet_version"))
                object.price_sheet_version = message.price_sheet_version;
            if (message.currency != null && message.hasOwnProperty("currency"))
                object.currency = message.currency;
            return object;
        };
    
        /**
         * Converts this CMsgStoreGetUserData to JSON.
         * @function toJSON
         * @memberof CMsgStoreGetUserData
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgStoreGetUserData.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgStoreGetUserData
         * @function getTypeUrl
         * @memberof CMsgStoreGetUserData
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgStoreGetUserData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgStoreGetUserData";
        };
    
        return CMsgStoreGetUserData;
    })();
    
    $root.CMsgStoreGetUserDataResponse = (function() {
    
        /**
         * Properties of a CMsgStoreGetUserDataResponse.
         * @exports ICMsgStoreGetUserDataResponse
         * @interface ICMsgStoreGetUserDataResponse
         * @property {number|null} [result] CMsgStoreGetUserDataResponse result
         * @property {number|null} [currency_deprecated] CMsgStoreGetUserDataResponse currency_deprecated
         * @property {string|null} [country_deprecated] CMsgStoreGetUserDataResponse country_deprecated
         * @property {number|null} [price_sheet_version] CMsgStoreGetUserDataResponse price_sheet_version
         * @property {Uint8Array|null} [price_sheet] CMsgStoreGetUserDataResponse price_sheet
         */
    
        /**
         * Constructs a new CMsgStoreGetUserDataResponse.
         * @exports CMsgStoreGetUserDataResponse
         * @classdesc Represents a CMsgStoreGetUserDataResponse.
         * @implements ICMsgStoreGetUserDataResponse
         * @constructor
         * @param {ICMsgStoreGetUserDataResponse=} [properties] Properties to set
         */
        function CMsgStoreGetUserDataResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgStoreGetUserDataResponse result.
         * @member {number} result
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.result = 0;
    
        /**
         * CMsgStoreGetUserDataResponse currency_deprecated.
         * @member {number} currency_deprecated
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.currency_deprecated = 0;
    
        /**
         * CMsgStoreGetUserDataResponse country_deprecated.
         * @member {string} country_deprecated
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.country_deprecated = "";
    
        /**
         * CMsgStoreGetUserDataResponse price_sheet_version.
         * @member {number} price_sheet_version
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.price_sheet_version = 0;
    
        /**
         * CMsgStoreGetUserDataResponse price_sheet.
         * @member {Uint8Array} price_sheet
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         */
        CMsgStoreGetUserDataResponse.prototype.price_sheet = $util.newBuffer([]);
    
        /**
         * Creates a new CMsgStoreGetUserDataResponse instance using the specified properties.
         * @function create
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {ICMsgStoreGetUserDataResponse=} [properties] Properties to set
         * @returns {CMsgStoreGetUserDataResponse} CMsgStoreGetUserDataResponse instance
         */
        CMsgStoreGetUserDataResponse.create = function create(properties) {
            return new CMsgStoreGetUserDataResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgStoreGetUserDataResponse message. Does not implicitly {@link CMsgStoreGetUserDataResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {ICMsgStoreGetUserDataResponse} message CMsgStoreGetUserDataResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgStoreGetUserDataResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.result);
            if (message.currency_deprecated != null && Object.hasOwnProperty.call(message, "currency_deprecated"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.currency_deprecated);
            if (message.country_deprecated != null && Object.hasOwnProperty.call(message, "country_deprecated"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.country_deprecated);
            if (message.price_sheet_version != null && Object.hasOwnProperty.call(message, "price_sheet_version"))
                writer.uint32(/* id 4, wireType 5 =*/37).fixed32(message.price_sheet_version);
            if (message.price_sheet != null && Object.hasOwnProperty.call(message, "price_sheet"))
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.price_sheet);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgStoreGetUserDataResponse message, length delimited. Does not implicitly {@link CMsgStoreGetUserDataResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {ICMsgStoreGetUserDataResponse} message CMsgStoreGetUserDataResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgStoreGetUserDataResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgStoreGetUserDataResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgStoreGetUserDataResponse} CMsgStoreGetUserDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgStoreGetUserDataResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgStoreGetUserDataResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.result = reader.int32();
                        break;
                    }
                case 2: {
                        message.currency_deprecated = reader.int32();
                        break;
                    }
                case 3: {
                        message.country_deprecated = reader.string();
                        break;
                    }
                case 4: {
                        message.price_sheet_version = reader.fixed32();
                        break;
                    }
                case 8: {
                        message.price_sheet = reader.bytes();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgStoreGetUserDataResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgStoreGetUserDataResponse} CMsgStoreGetUserDataResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgStoreGetUserDataResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgStoreGetUserDataResponse message.
         * @function verify
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgStoreGetUserDataResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.currency_deprecated != null && message.hasOwnProperty("currency_deprecated"))
                if (!$util.isInteger(message.currency_deprecated))
                    return "currency_deprecated: integer expected";
            if (message.country_deprecated != null && message.hasOwnProperty("country_deprecated"))
                if (!$util.isString(message.country_deprecated))
                    return "country_deprecated: string expected";
            if (message.price_sheet_version != null && message.hasOwnProperty("price_sheet_version"))
                if (!$util.isInteger(message.price_sheet_version))
                    return "price_sheet_version: integer expected";
            if (message.price_sheet != null && message.hasOwnProperty("price_sheet"))
                if (!(message.price_sheet && typeof message.price_sheet.length === "number" || $util.isString(message.price_sheet)))
                    return "price_sheet: buffer expected";
            return null;
        };
    
        /**
         * Creates a CMsgStoreGetUserDataResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgStoreGetUserDataResponse} CMsgStoreGetUserDataResponse
         */
        CMsgStoreGetUserDataResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgStoreGetUserDataResponse)
                return object;
            var message = new $root.CMsgStoreGetUserDataResponse();
            if (object.result != null)
                message.result = object.result | 0;
            if (object.currency_deprecated != null)
                message.currency_deprecated = object.currency_deprecated | 0;
            if (object.country_deprecated != null)
                message.country_deprecated = String(object.country_deprecated);
            if (object.price_sheet_version != null)
                message.price_sheet_version = object.price_sheet_version >>> 0;
            if (object.price_sheet != null)
                if (typeof object.price_sheet === "string")
                    $util.base64.decode(object.price_sheet, message.price_sheet = $util.newBuffer($util.base64.length(object.price_sheet)), 0);
                else if (object.price_sheet.length >= 0)
                    message.price_sheet = object.price_sheet;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgStoreGetUserDataResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {CMsgStoreGetUserDataResponse} message CMsgStoreGetUserDataResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgStoreGetUserDataResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.result = 0;
                object.currency_deprecated = 0;
                object.country_deprecated = "";
                object.price_sheet_version = 0;
                if (options.bytes === String)
                    object.price_sheet = "";
                else {
                    object.price_sheet = [];
                    if (options.bytes !== Array)
                        object.price_sheet = $util.newBuffer(object.price_sheet);
                }
            }
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.currency_deprecated != null && message.hasOwnProperty("currency_deprecated"))
                object.currency_deprecated = message.currency_deprecated;
            if (message.country_deprecated != null && message.hasOwnProperty("country_deprecated"))
                object.country_deprecated = message.country_deprecated;
            if (message.price_sheet_version != null && message.hasOwnProperty("price_sheet_version"))
                object.price_sheet_version = message.price_sheet_version;
            if (message.price_sheet != null && message.hasOwnProperty("price_sheet"))
                object.price_sheet = options.bytes === String ? $util.base64.encode(message.price_sheet, 0, message.price_sheet.length) : options.bytes === Array ? Array.prototype.slice.call(message.price_sheet) : message.price_sheet;
            return object;
        };
    
        /**
         * Converts this CMsgStoreGetUserDataResponse to JSON.
         * @function toJSON
         * @memberof CMsgStoreGetUserDataResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgStoreGetUserDataResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgStoreGetUserDataResponse
         * @function getTypeUrl
         * @memberof CMsgStoreGetUserDataResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgStoreGetUserDataResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgStoreGetUserDataResponse";
        };
    
        return CMsgStoreGetUserDataResponse;
    })();
    
    $root.CMsgUpdateItemSchema = (function() {
    
        /**
         * Properties of a CMsgUpdateItemSchema.
         * @exports ICMsgUpdateItemSchema
         * @interface ICMsgUpdateItemSchema
         * @property {Uint8Array|null} [items_game] CMsgUpdateItemSchema items_game
         * @property {number|null} [item_schema_version] CMsgUpdateItemSchema item_schema_version
         * @property {string|null} [items_game_url] CMsgUpdateItemSchema items_game_url
         */
    
        /**
         * Constructs a new CMsgUpdateItemSchema.
         * @exports CMsgUpdateItemSchema
         * @classdesc Represents a CMsgUpdateItemSchema.
         * @implements ICMsgUpdateItemSchema
         * @constructor
         * @param {ICMsgUpdateItemSchema=} [properties] Properties to set
         */
        function CMsgUpdateItemSchema(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgUpdateItemSchema items_game.
         * @member {Uint8Array} items_game
         * @memberof CMsgUpdateItemSchema
         * @instance
         */
        CMsgUpdateItemSchema.prototype.items_game = $util.newBuffer([]);
    
        /**
         * CMsgUpdateItemSchema item_schema_version.
         * @member {number} item_schema_version
         * @memberof CMsgUpdateItemSchema
         * @instance
         */
        CMsgUpdateItemSchema.prototype.item_schema_version = 0;
    
        /**
         * CMsgUpdateItemSchema items_game_url.
         * @member {string} items_game_url
         * @memberof CMsgUpdateItemSchema
         * @instance
         */
        CMsgUpdateItemSchema.prototype.items_game_url = "";
    
        /**
         * Creates a new CMsgUpdateItemSchema instance using the specified properties.
         * @function create
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {ICMsgUpdateItemSchema=} [properties] Properties to set
         * @returns {CMsgUpdateItemSchema} CMsgUpdateItemSchema instance
         */
        CMsgUpdateItemSchema.create = function create(properties) {
            return new CMsgUpdateItemSchema(properties);
        };
    
        /**
         * Encodes the specified CMsgUpdateItemSchema message. Does not implicitly {@link CMsgUpdateItemSchema.verify|verify} messages.
         * @function encode
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {ICMsgUpdateItemSchema} message CMsgUpdateItemSchema message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgUpdateItemSchema.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.items_game != null && Object.hasOwnProperty.call(message, "items_game"))
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.items_game);
            if (message.item_schema_version != null && Object.hasOwnProperty.call(message, "item_schema_version"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.item_schema_version);
            if (message.items_game_url != null && Object.hasOwnProperty.call(message, "items_game_url"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.items_game_url);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgUpdateItemSchema message, length delimited. Does not implicitly {@link CMsgUpdateItemSchema.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {ICMsgUpdateItemSchema} message CMsgUpdateItemSchema message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgUpdateItemSchema.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgUpdateItemSchema message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgUpdateItemSchema} CMsgUpdateItemSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgUpdateItemSchema.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgUpdateItemSchema();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.items_game = reader.bytes();
                        break;
                    }
                case 2: {
                        message.item_schema_version = reader.fixed32();
                        break;
                    }
                case 4: {
                        message.items_game_url = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgUpdateItemSchema message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgUpdateItemSchema} CMsgUpdateItemSchema
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgUpdateItemSchema.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgUpdateItemSchema message.
         * @function verify
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgUpdateItemSchema.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.items_game != null && message.hasOwnProperty("items_game"))
                if (!(message.items_game && typeof message.items_game.length === "number" || $util.isString(message.items_game)))
                    return "items_game: buffer expected";
            if (message.item_schema_version != null && message.hasOwnProperty("item_schema_version"))
                if (!$util.isInteger(message.item_schema_version))
                    return "item_schema_version: integer expected";
            if (message.items_game_url != null && message.hasOwnProperty("items_game_url"))
                if (!$util.isString(message.items_game_url))
                    return "items_game_url: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgUpdateItemSchema message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgUpdateItemSchema} CMsgUpdateItemSchema
         */
        CMsgUpdateItemSchema.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgUpdateItemSchema)
                return object;
            var message = new $root.CMsgUpdateItemSchema();
            if (object.items_game != null)
                if (typeof object.items_game === "string")
                    $util.base64.decode(object.items_game, message.items_game = $util.newBuffer($util.base64.length(object.items_game)), 0);
                else if (object.items_game.length >= 0)
                    message.items_game = object.items_game;
            if (object.item_schema_version != null)
                message.item_schema_version = object.item_schema_version >>> 0;
            if (object.items_game_url != null)
                message.items_game_url = String(object.items_game_url);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgUpdateItemSchema message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {CMsgUpdateItemSchema} message CMsgUpdateItemSchema
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgUpdateItemSchema.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if (options.bytes === String)
                    object.items_game = "";
                else {
                    object.items_game = [];
                    if (options.bytes !== Array)
                        object.items_game = $util.newBuffer(object.items_game);
                }
                object.item_schema_version = 0;
                object.items_game_url = "";
            }
            if (message.items_game != null && message.hasOwnProperty("items_game"))
                object.items_game = options.bytes === String ? $util.base64.encode(message.items_game, 0, message.items_game.length) : options.bytes === Array ? Array.prototype.slice.call(message.items_game) : message.items_game;
            if (message.item_schema_version != null && message.hasOwnProperty("item_schema_version"))
                object.item_schema_version = message.item_schema_version;
            if (message.items_game_url != null && message.hasOwnProperty("items_game_url"))
                object.items_game_url = message.items_game_url;
            return object;
        };
    
        /**
         * Converts this CMsgUpdateItemSchema to JSON.
         * @function toJSON
         * @memberof CMsgUpdateItemSchema
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgUpdateItemSchema.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgUpdateItemSchema
         * @function getTypeUrl
         * @memberof CMsgUpdateItemSchema
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgUpdateItemSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgUpdateItemSchema";
        };
    
        return CMsgUpdateItemSchema;
    })();
    
    $root.CMsgGCError = (function() {
    
        /**
         * Properties of a CMsgGCError.
         * @exports ICMsgGCError
         * @interface ICMsgGCError
         * @property {string|null} [error_text] CMsgGCError error_text
         */
    
        /**
         * Constructs a new CMsgGCError.
         * @exports CMsgGCError
         * @classdesc Represents a CMsgGCError.
         * @implements ICMsgGCError
         * @constructor
         * @param {ICMsgGCError=} [properties] Properties to set
         */
        function CMsgGCError(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCError error_text.
         * @member {string} error_text
         * @memberof CMsgGCError
         * @instance
         */
        CMsgGCError.prototype.error_text = "";
    
        /**
         * Creates a new CMsgGCError instance using the specified properties.
         * @function create
         * @memberof CMsgGCError
         * @static
         * @param {ICMsgGCError=} [properties] Properties to set
         * @returns {CMsgGCError} CMsgGCError instance
         */
        CMsgGCError.create = function create(properties) {
            return new CMsgGCError(properties);
        };
    
        /**
         * Encodes the specified CMsgGCError message. Does not implicitly {@link CMsgGCError.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCError
         * @static
         * @param {ICMsgGCError} message CMsgGCError message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCError.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.error_text != null && Object.hasOwnProperty.call(message, "error_text"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.error_text);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCError message, length delimited. Does not implicitly {@link CMsgGCError.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCError
         * @static
         * @param {ICMsgGCError} message CMsgGCError message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCError.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCError message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCError
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCError} CMsgGCError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCError.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCError();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.error_text = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCError message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCError
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCError} CMsgGCError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCError.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCError message.
         * @function verify
         * @memberof CMsgGCError
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCError.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.error_text != null && message.hasOwnProperty("error_text"))
                if (!$util.isString(message.error_text))
                    return "error_text: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCError message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCError
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCError} CMsgGCError
         */
        CMsgGCError.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCError)
                return object;
            var message = new $root.CMsgGCError();
            if (object.error_text != null)
                message.error_text = String(object.error_text);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCError message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCError
         * @static
         * @param {CMsgGCError} message CMsgGCError
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCError.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.error_text = "";
            if (message.error_text != null && message.hasOwnProperty("error_text"))
                object.error_text = message.error_text;
            return object;
        };
    
        /**
         * Converts this CMsgGCError to JSON.
         * @function toJSON
         * @memberof CMsgGCError
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCError.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCError
         * @function getTypeUrl
         * @memberof CMsgGCError
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCError.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCError";
        };
    
        return CMsgGCError;
    })();
    
    $root.CMsgRequestInventoryRefresh = (function() {
    
        /**
         * Properties of a CMsgRequestInventoryRefresh.
         * @exports ICMsgRequestInventoryRefresh
         * @interface ICMsgRequestInventoryRefresh
         */
    
        /**
         * Constructs a new CMsgRequestInventoryRefresh.
         * @exports CMsgRequestInventoryRefresh
         * @classdesc Represents a CMsgRequestInventoryRefresh.
         * @implements ICMsgRequestInventoryRefresh
         * @constructor
         * @param {ICMsgRequestInventoryRefresh=} [properties] Properties to set
         */
        function CMsgRequestInventoryRefresh(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgRequestInventoryRefresh instance using the specified properties.
         * @function create
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {ICMsgRequestInventoryRefresh=} [properties] Properties to set
         * @returns {CMsgRequestInventoryRefresh} CMsgRequestInventoryRefresh instance
         */
        CMsgRequestInventoryRefresh.create = function create(properties) {
            return new CMsgRequestInventoryRefresh(properties);
        };
    
        /**
         * Encodes the specified CMsgRequestInventoryRefresh message. Does not implicitly {@link CMsgRequestInventoryRefresh.verify|verify} messages.
         * @function encode
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {ICMsgRequestInventoryRefresh} message CMsgRequestInventoryRefresh message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgRequestInventoryRefresh.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgRequestInventoryRefresh message, length delimited. Does not implicitly {@link CMsgRequestInventoryRefresh.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {ICMsgRequestInventoryRefresh} message CMsgRequestInventoryRefresh message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgRequestInventoryRefresh.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgRequestInventoryRefresh message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgRequestInventoryRefresh} CMsgRequestInventoryRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgRequestInventoryRefresh.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgRequestInventoryRefresh();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgRequestInventoryRefresh message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgRequestInventoryRefresh} CMsgRequestInventoryRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgRequestInventoryRefresh.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgRequestInventoryRefresh message.
         * @function verify
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgRequestInventoryRefresh.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgRequestInventoryRefresh message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgRequestInventoryRefresh} CMsgRequestInventoryRefresh
         */
        CMsgRequestInventoryRefresh.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgRequestInventoryRefresh)
                return object;
            return new $root.CMsgRequestInventoryRefresh();
        };
    
        /**
         * Creates a plain object from a CMsgRequestInventoryRefresh message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {CMsgRequestInventoryRefresh} message CMsgRequestInventoryRefresh
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgRequestInventoryRefresh.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgRequestInventoryRefresh to JSON.
         * @function toJSON
         * @memberof CMsgRequestInventoryRefresh
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgRequestInventoryRefresh.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgRequestInventoryRefresh
         * @function getTypeUrl
         * @memberof CMsgRequestInventoryRefresh
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgRequestInventoryRefresh.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgRequestInventoryRefresh";
        };
    
        return CMsgRequestInventoryRefresh;
    })();
    
    $root.CMsgConVarValue = (function() {
    
        /**
         * Properties of a CMsgConVarValue.
         * @exports ICMsgConVarValue
         * @interface ICMsgConVarValue
         * @property {string|null} [name] CMsgConVarValue name
         * @property {string|null} [value] CMsgConVarValue value
         */
    
        /**
         * Constructs a new CMsgConVarValue.
         * @exports CMsgConVarValue
         * @classdesc Represents a CMsgConVarValue.
         * @implements ICMsgConVarValue
         * @constructor
         * @param {ICMsgConVarValue=} [properties] Properties to set
         */
        function CMsgConVarValue(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgConVarValue name.
         * @member {string} name
         * @memberof CMsgConVarValue
         * @instance
         */
        CMsgConVarValue.prototype.name = "";
    
        /**
         * CMsgConVarValue value.
         * @member {string} value
         * @memberof CMsgConVarValue
         * @instance
         */
        CMsgConVarValue.prototype.value = "";
    
        /**
         * Creates a new CMsgConVarValue instance using the specified properties.
         * @function create
         * @memberof CMsgConVarValue
         * @static
         * @param {ICMsgConVarValue=} [properties] Properties to set
         * @returns {CMsgConVarValue} CMsgConVarValue instance
         */
        CMsgConVarValue.create = function create(properties) {
            return new CMsgConVarValue(properties);
        };
    
        /**
         * Encodes the specified CMsgConVarValue message. Does not implicitly {@link CMsgConVarValue.verify|verify} messages.
         * @function encode
         * @memberof CMsgConVarValue
         * @static
         * @param {ICMsgConVarValue} message CMsgConVarValue message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConVarValue.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgConVarValue message, length delimited. Does not implicitly {@link CMsgConVarValue.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgConVarValue
         * @static
         * @param {ICMsgConVarValue} message CMsgConVarValue message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConVarValue.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgConVarValue message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgConVarValue
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgConVarValue} CMsgConVarValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConVarValue.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgConVarValue();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.name = reader.string();
                        break;
                    }
                case 2: {
                        message.value = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgConVarValue message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgConVarValue
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgConVarValue} CMsgConVarValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConVarValue.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgConVarValue message.
         * @function verify
         * @memberof CMsgConVarValue
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgConVarValue.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.name != null && message.hasOwnProperty("name"))
                if (!$util.isString(message.name))
                    return "name: string expected";
            if (message.value != null && message.hasOwnProperty("value"))
                if (!$util.isString(message.value))
                    return "value: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgConVarValue message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgConVarValue
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgConVarValue} CMsgConVarValue
         */
        CMsgConVarValue.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgConVarValue)
                return object;
            var message = new $root.CMsgConVarValue();
            if (object.name != null)
                message.name = String(object.name);
            if (object.value != null)
                message.value = String(object.value);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgConVarValue message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgConVarValue
         * @static
         * @param {CMsgConVarValue} message CMsgConVarValue
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgConVarValue.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.name = "";
                object.value = "";
            }
            if (message.name != null && message.hasOwnProperty("name"))
                object.name = message.name;
            if (message.value != null && message.hasOwnProperty("value"))
                object.value = message.value;
            return object;
        };
    
        /**
         * Converts this CMsgConVarValue to JSON.
         * @function toJSON
         * @memberof CMsgConVarValue
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgConVarValue.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgConVarValue
         * @function getTypeUrl
         * @memberof CMsgConVarValue
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgConVarValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgConVarValue";
        };
    
        return CMsgConVarValue;
    })();
    
    $root.CMsgReplicateConVars = (function() {
    
        /**
         * Properties of a CMsgReplicateConVars.
         * @exports ICMsgReplicateConVars
         * @interface ICMsgReplicateConVars
         * @property {Array.<ICMsgConVarValue>|null} [convars] CMsgReplicateConVars convars
         */
    
        /**
         * Constructs a new CMsgReplicateConVars.
         * @exports CMsgReplicateConVars
         * @classdesc Represents a CMsgReplicateConVars.
         * @implements ICMsgReplicateConVars
         * @constructor
         * @param {ICMsgReplicateConVars=} [properties] Properties to set
         */
        function CMsgReplicateConVars(properties) {
            this.convars = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgReplicateConVars convars.
         * @member {Array.<ICMsgConVarValue>} convars
         * @memberof CMsgReplicateConVars
         * @instance
         */
        CMsgReplicateConVars.prototype.convars = $util.emptyArray;
    
        /**
         * Creates a new CMsgReplicateConVars instance using the specified properties.
         * @function create
         * @memberof CMsgReplicateConVars
         * @static
         * @param {ICMsgReplicateConVars=} [properties] Properties to set
         * @returns {CMsgReplicateConVars} CMsgReplicateConVars instance
         */
        CMsgReplicateConVars.create = function create(properties) {
            return new CMsgReplicateConVars(properties);
        };
    
        /**
         * Encodes the specified CMsgReplicateConVars message. Does not implicitly {@link CMsgReplicateConVars.verify|verify} messages.
         * @function encode
         * @memberof CMsgReplicateConVars
         * @static
         * @param {ICMsgReplicateConVars} message CMsgReplicateConVars message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgReplicateConVars.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.convars != null && message.convars.length)
                for (var i = 0; i < message.convars.length; ++i)
                    $root.CMsgConVarValue.encode(message.convars[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgReplicateConVars message, length delimited. Does not implicitly {@link CMsgReplicateConVars.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgReplicateConVars
         * @static
         * @param {ICMsgReplicateConVars} message CMsgReplicateConVars message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgReplicateConVars.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgReplicateConVars message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgReplicateConVars
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgReplicateConVars} CMsgReplicateConVars
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgReplicateConVars.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgReplicateConVars();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.convars && message.convars.length))
                            message.convars = [];
                        message.convars.push($root.CMsgConVarValue.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgReplicateConVars message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgReplicateConVars
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgReplicateConVars} CMsgReplicateConVars
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgReplicateConVars.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgReplicateConVars message.
         * @function verify
         * @memberof CMsgReplicateConVars
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgReplicateConVars.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.convars != null && message.hasOwnProperty("convars")) {
                if (!Array.isArray(message.convars))
                    return "convars: array expected";
                for (var i = 0; i < message.convars.length; ++i) {
                    var error = $root.CMsgConVarValue.verify(message.convars[i]);
                    if (error)
                        return "convars." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgReplicateConVars message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgReplicateConVars
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgReplicateConVars} CMsgReplicateConVars
         */
        CMsgReplicateConVars.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgReplicateConVars)
                return object;
            var message = new $root.CMsgReplicateConVars();
            if (object.convars) {
                if (!Array.isArray(object.convars))
                    throw TypeError(".CMsgReplicateConVars.convars: array expected");
                message.convars = [];
                for (var i = 0; i < object.convars.length; ++i) {
                    if (typeof object.convars[i] !== "object")
                        throw TypeError(".CMsgReplicateConVars.convars: object expected");
                    message.convars[i] = $root.CMsgConVarValue.fromObject(object.convars[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgReplicateConVars message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgReplicateConVars
         * @static
         * @param {CMsgReplicateConVars} message CMsgReplicateConVars
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgReplicateConVars.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.convars = [];
            if (message.convars && message.convars.length) {
                object.convars = [];
                for (var j = 0; j < message.convars.length; ++j)
                    object.convars[j] = $root.CMsgConVarValue.toObject(message.convars[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgReplicateConVars to JSON.
         * @function toJSON
         * @memberof CMsgReplicateConVars
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgReplicateConVars.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgReplicateConVars
         * @function getTypeUrl
         * @memberof CMsgReplicateConVars
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgReplicateConVars.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgReplicateConVars";
        };
    
        return CMsgReplicateConVars;
    })();
    
    $root.CMsgUseItem = (function() {
    
        /**
         * Properties of a CMsgUseItem.
         * @exports ICMsgUseItem
         * @interface ICMsgUseItem
         * @property {number|Long|null} [item_id] CMsgUseItem item_id
         * @property {number|Long|null} [target_steam_id] CMsgUseItem target_steam_id
         * @property {Array.<number>|null} [gift__potential_targets] CMsgUseItem gift__potential_targets
         * @property {number|null} [duel__class_lock] CMsgUseItem duel__class_lock
         * @property {number|Long|null} [initiator_steam_id] CMsgUseItem initiator_steam_id
         */
    
        /**
         * Constructs a new CMsgUseItem.
         * @exports CMsgUseItem
         * @classdesc Represents a CMsgUseItem.
         * @implements ICMsgUseItem
         * @constructor
         * @param {ICMsgUseItem=} [properties] Properties to set
         */
        function CMsgUseItem(properties) {
            this.gift__potential_targets = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgUseItem item_id.
         * @member {number|Long} item_id
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgUseItem target_steam_id.
         * @member {number|Long} target_steam_id
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.target_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgUseItem gift__potential_targets.
         * @member {Array.<number>} gift__potential_targets
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.gift__potential_targets = $util.emptyArray;
    
        /**
         * CMsgUseItem duel__class_lock.
         * @member {number} duel__class_lock
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.duel__class_lock = 0;
    
        /**
         * CMsgUseItem initiator_steam_id.
         * @member {number|Long} initiator_steam_id
         * @memberof CMsgUseItem
         * @instance
         */
        CMsgUseItem.prototype.initiator_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgUseItem instance using the specified properties.
         * @function create
         * @memberof CMsgUseItem
         * @static
         * @param {ICMsgUseItem=} [properties] Properties to set
         * @returns {CMsgUseItem} CMsgUseItem instance
         */
        CMsgUseItem.create = function create(properties) {
            return new CMsgUseItem(properties);
        };
    
        /**
         * Encodes the specified CMsgUseItem message. Does not implicitly {@link CMsgUseItem.verify|verify} messages.
         * @function encode
         * @memberof CMsgUseItem
         * @static
         * @param {ICMsgUseItem} message CMsgUseItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgUseItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.item_id);
            if (message.target_steam_id != null && Object.hasOwnProperty.call(message, "target_steam_id"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.target_steam_id);
            if (message.gift__potential_targets != null && message.gift__potential_targets.length)
                for (var i = 0; i < message.gift__potential_targets.length; ++i)
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.gift__potential_targets[i]);
            if (message.duel__class_lock != null && Object.hasOwnProperty.call(message, "duel__class_lock"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.duel__class_lock);
            if (message.initiator_steam_id != null && Object.hasOwnProperty.call(message, "initiator_steam_id"))
                writer.uint32(/* id 5, wireType 1 =*/41).fixed64(message.initiator_steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgUseItem message, length delimited. Does not implicitly {@link CMsgUseItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgUseItem
         * @static
         * @param {ICMsgUseItem} message CMsgUseItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgUseItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgUseItem message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgUseItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgUseItem} CMsgUseItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgUseItem.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgUseItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.target_steam_id = reader.fixed64();
                        break;
                    }
                case 3: {
                        if (!(message.gift__potential_targets && message.gift__potential_targets.length))
                            message.gift__potential_targets = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.gift__potential_targets.push(reader.uint32());
                        } else
                            message.gift__potential_targets.push(reader.uint32());
                        break;
                    }
                case 4: {
                        message.duel__class_lock = reader.uint32();
                        break;
                    }
                case 5: {
                        message.initiator_steam_id = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgUseItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgUseItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgUseItem} CMsgUseItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgUseItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgUseItem message.
         * @function verify
         * @memberof CMsgUseItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgUseItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                    return "item_id: integer|Long expected";
            if (message.target_steam_id != null && message.hasOwnProperty("target_steam_id"))
                if (!$util.isInteger(message.target_steam_id) && !(message.target_steam_id && $util.isInteger(message.target_steam_id.low) && $util.isInteger(message.target_steam_id.high)))
                    return "target_steam_id: integer|Long expected";
            if (message.gift__potential_targets != null && message.hasOwnProperty("gift__potential_targets")) {
                if (!Array.isArray(message.gift__potential_targets))
                    return "gift__potential_targets: array expected";
                for (var i = 0; i < message.gift__potential_targets.length; ++i)
                    if (!$util.isInteger(message.gift__potential_targets[i]))
                        return "gift__potential_targets: integer[] expected";
            }
            if (message.duel__class_lock != null && message.hasOwnProperty("duel__class_lock"))
                if (!$util.isInteger(message.duel__class_lock))
                    return "duel__class_lock: integer expected";
            if (message.initiator_steam_id != null && message.hasOwnProperty("initiator_steam_id"))
                if (!$util.isInteger(message.initiator_steam_id) && !(message.initiator_steam_id && $util.isInteger(message.initiator_steam_id.low) && $util.isInteger(message.initiator_steam_id.high)))
                    return "initiator_steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgUseItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgUseItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgUseItem} CMsgUseItem
         */
        CMsgUseItem.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgUseItem)
                return object;
            var message = new $root.CMsgUseItem();
            if (object.item_id != null)
                if ($util.Long)
                    (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                else if (typeof object.item_id === "string")
                    message.item_id = parseInt(object.item_id, 10);
                else if (typeof object.item_id === "number")
                    message.item_id = object.item_id;
                else if (typeof object.item_id === "object")
                    message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
            if (object.target_steam_id != null)
                if ($util.Long)
                    (message.target_steam_id = $util.Long.fromValue(object.target_steam_id)).unsigned = false;
                else if (typeof object.target_steam_id === "string")
                    message.target_steam_id = parseInt(object.target_steam_id, 10);
                else if (typeof object.target_steam_id === "number")
                    message.target_steam_id = object.target_steam_id;
                else if (typeof object.target_steam_id === "object")
                    message.target_steam_id = new $util.LongBits(object.target_steam_id.low >>> 0, object.target_steam_id.high >>> 0).toNumber();
            if (object.gift__potential_targets) {
                if (!Array.isArray(object.gift__potential_targets))
                    throw TypeError(".CMsgUseItem.gift__potential_targets: array expected");
                message.gift__potential_targets = [];
                for (var i = 0; i < object.gift__potential_targets.length; ++i)
                    message.gift__potential_targets[i] = object.gift__potential_targets[i] >>> 0;
            }
            if (object.duel__class_lock != null)
                message.duel__class_lock = object.duel__class_lock >>> 0;
            if (object.initiator_steam_id != null)
                if ($util.Long)
                    (message.initiator_steam_id = $util.Long.fromValue(object.initiator_steam_id)).unsigned = false;
                else if (typeof object.initiator_steam_id === "string")
                    message.initiator_steam_id = parseInt(object.initiator_steam_id, 10);
                else if (typeof object.initiator_steam_id === "number")
                    message.initiator_steam_id = object.initiator_steam_id;
                else if (typeof object.initiator_steam_id === "object")
                    message.initiator_steam_id = new $util.LongBits(object.initiator_steam_id.low >>> 0, object.initiator_steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgUseItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgUseItem
         * @static
         * @param {CMsgUseItem} message CMsgUseItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgUseItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.gift__potential_targets = [];
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.target_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.target_steam_id = options.longs === String ? "0" : 0;
                object.duel__class_lock = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.initiator_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.initiator_steam_id = options.longs === String ? "0" : 0;
            }
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (typeof message.item_id === "number")
                    object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                else
                    object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
            if (message.target_steam_id != null && message.hasOwnProperty("target_steam_id"))
                if (typeof message.target_steam_id === "number")
                    object.target_steam_id = options.longs === String ? String(message.target_steam_id) : message.target_steam_id;
                else
                    object.target_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.target_steam_id) : options.longs === Number ? new $util.LongBits(message.target_steam_id.low >>> 0, message.target_steam_id.high >>> 0).toNumber() : message.target_steam_id;
            if (message.gift__potential_targets && message.gift__potential_targets.length) {
                object.gift__potential_targets = [];
                for (var j = 0; j < message.gift__potential_targets.length; ++j)
                    object.gift__potential_targets[j] = message.gift__potential_targets[j];
            }
            if (message.duel__class_lock != null && message.hasOwnProperty("duel__class_lock"))
                object.duel__class_lock = message.duel__class_lock;
            if (message.initiator_steam_id != null && message.hasOwnProperty("initiator_steam_id"))
                if (typeof message.initiator_steam_id === "number")
                    object.initiator_steam_id = options.longs === String ? String(message.initiator_steam_id) : message.initiator_steam_id;
                else
                    object.initiator_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.initiator_steam_id) : options.longs === Number ? new $util.LongBits(message.initiator_steam_id.low >>> 0, message.initiator_steam_id.high >>> 0).toNumber() : message.initiator_steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgUseItem to JSON.
         * @function toJSON
         * @memberof CMsgUseItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgUseItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgUseItem
         * @function getTypeUrl
         * @memberof CMsgUseItem
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgUseItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgUseItem";
        };
    
        return CMsgUseItem;
    })();
    
    $root.CMsgReplayUploadedToYouTube = (function() {
    
        /**
         * Properties of a CMsgReplayUploadedToYouTube.
         * @exports ICMsgReplayUploadedToYouTube
         * @interface ICMsgReplayUploadedToYouTube
         * @property {string|null} [youtube_url] CMsgReplayUploadedToYouTube youtube_url
         * @property {string|null} [youtube_account_name] CMsgReplayUploadedToYouTube youtube_account_name
         * @property {number|Long|null} [session_id] CMsgReplayUploadedToYouTube session_id
         */
    
        /**
         * Constructs a new CMsgReplayUploadedToYouTube.
         * @exports CMsgReplayUploadedToYouTube
         * @classdesc Represents a CMsgReplayUploadedToYouTube.
         * @implements ICMsgReplayUploadedToYouTube
         * @constructor
         * @param {ICMsgReplayUploadedToYouTube=} [properties] Properties to set
         */
        function CMsgReplayUploadedToYouTube(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgReplayUploadedToYouTube youtube_url.
         * @member {string} youtube_url
         * @memberof CMsgReplayUploadedToYouTube
         * @instance
         */
        CMsgReplayUploadedToYouTube.prototype.youtube_url = "";
    
        /**
         * CMsgReplayUploadedToYouTube youtube_account_name.
         * @member {string} youtube_account_name
         * @memberof CMsgReplayUploadedToYouTube
         * @instance
         */
        CMsgReplayUploadedToYouTube.prototype.youtube_account_name = "";
    
        /**
         * CMsgReplayUploadedToYouTube session_id.
         * @member {number|Long} session_id
         * @memberof CMsgReplayUploadedToYouTube
         * @instance
         */
        CMsgReplayUploadedToYouTube.prototype.session_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgReplayUploadedToYouTube instance using the specified properties.
         * @function create
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {ICMsgReplayUploadedToYouTube=} [properties] Properties to set
         * @returns {CMsgReplayUploadedToYouTube} CMsgReplayUploadedToYouTube instance
         */
        CMsgReplayUploadedToYouTube.create = function create(properties) {
            return new CMsgReplayUploadedToYouTube(properties);
        };
    
        /**
         * Encodes the specified CMsgReplayUploadedToYouTube message. Does not implicitly {@link CMsgReplayUploadedToYouTube.verify|verify} messages.
         * @function encode
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {ICMsgReplayUploadedToYouTube} message CMsgReplayUploadedToYouTube message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgReplayUploadedToYouTube.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.youtube_url != null && Object.hasOwnProperty.call(message, "youtube_url"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.youtube_url);
            if (message.youtube_account_name != null && Object.hasOwnProperty.call(message, "youtube_account_name"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.youtube_account_name);
            if (message.session_id != null && Object.hasOwnProperty.call(message, "session_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.session_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgReplayUploadedToYouTube message, length delimited. Does not implicitly {@link CMsgReplayUploadedToYouTube.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {ICMsgReplayUploadedToYouTube} message CMsgReplayUploadedToYouTube message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgReplayUploadedToYouTube.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgReplayUploadedToYouTube message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgReplayUploadedToYouTube} CMsgReplayUploadedToYouTube
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgReplayUploadedToYouTube.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgReplayUploadedToYouTube();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.youtube_url = reader.string();
                        break;
                    }
                case 2: {
                        message.youtube_account_name = reader.string();
                        break;
                    }
                case 3: {
                        message.session_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgReplayUploadedToYouTube message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgReplayUploadedToYouTube} CMsgReplayUploadedToYouTube
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgReplayUploadedToYouTube.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgReplayUploadedToYouTube message.
         * @function verify
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgReplayUploadedToYouTube.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.youtube_url != null && message.hasOwnProperty("youtube_url"))
                if (!$util.isString(message.youtube_url))
                    return "youtube_url: string expected";
            if (message.youtube_account_name != null && message.hasOwnProperty("youtube_account_name"))
                if (!$util.isString(message.youtube_account_name))
                    return "youtube_account_name: string expected";
            if (message.session_id != null && message.hasOwnProperty("session_id"))
                if (!$util.isInteger(message.session_id) && !(message.session_id && $util.isInteger(message.session_id.low) && $util.isInteger(message.session_id.high)))
                    return "session_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgReplayUploadedToYouTube message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgReplayUploadedToYouTube} CMsgReplayUploadedToYouTube
         */
        CMsgReplayUploadedToYouTube.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgReplayUploadedToYouTube)
                return object;
            var message = new $root.CMsgReplayUploadedToYouTube();
            if (object.youtube_url != null)
                message.youtube_url = String(object.youtube_url);
            if (object.youtube_account_name != null)
                message.youtube_account_name = String(object.youtube_account_name);
            if (object.session_id != null)
                if ($util.Long)
                    (message.session_id = $util.Long.fromValue(object.session_id)).unsigned = true;
                else if (typeof object.session_id === "string")
                    message.session_id = parseInt(object.session_id, 10);
                else if (typeof object.session_id === "number")
                    message.session_id = object.session_id;
                else if (typeof object.session_id === "object")
                    message.session_id = new $util.LongBits(object.session_id.low >>> 0, object.session_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgReplayUploadedToYouTube message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {CMsgReplayUploadedToYouTube} message CMsgReplayUploadedToYouTube
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgReplayUploadedToYouTube.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.youtube_url = "";
                object.youtube_account_name = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.session_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.session_id = options.longs === String ? "0" : 0;
            }
            if (message.youtube_url != null && message.hasOwnProperty("youtube_url"))
                object.youtube_url = message.youtube_url;
            if (message.youtube_account_name != null && message.hasOwnProperty("youtube_account_name"))
                object.youtube_account_name = message.youtube_account_name;
            if (message.session_id != null && message.hasOwnProperty("session_id"))
                if (typeof message.session_id === "number")
                    object.session_id = options.longs === String ? String(message.session_id) : message.session_id;
                else
                    object.session_id = options.longs === String ? $util.Long.prototype.toString.call(message.session_id) : options.longs === Number ? new $util.LongBits(message.session_id.low >>> 0, message.session_id.high >>> 0).toNumber(true) : message.session_id;
            return object;
        };
    
        /**
         * Converts this CMsgReplayUploadedToYouTube to JSON.
         * @function toJSON
         * @memberof CMsgReplayUploadedToYouTube
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgReplayUploadedToYouTube.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgReplayUploadedToYouTube
         * @function getTypeUrl
         * @memberof CMsgReplayUploadedToYouTube
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgReplayUploadedToYouTube.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgReplayUploadedToYouTube";
        };
    
        return CMsgReplayUploadedToYouTube;
    })();
    
    $root.CMsgConsumableExhausted = (function() {
    
        /**
         * Properties of a CMsgConsumableExhausted.
         * @exports ICMsgConsumableExhausted
         * @interface ICMsgConsumableExhausted
         * @property {number|null} [item_def_id] CMsgConsumableExhausted item_def_id
         */
    
        /**
         * Constructs a new CMsgConsumableExhausted.
         * @exports CMsgConsumableExhausted
         * @classdesc Represents a CMsgConsumableExhausted.
         * @implements ICMsgConsumableExhausted
         * @constructor
         * @param {ICMsgConsumableExhausted=} [properties] Properties to set
         */
        function CMsgConsumableExhausted(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgConsumableExhausted item_def_id.
         * @member {number} item_def_id
         * @memberof CMsgConsumableExhausted
         * @instance
         */
        CMsgConsumableExhausted.prototype.item_def_id = 0;
    
        /**
         * Creates a new CMsgConsumableExhausted instance using the specified properties.
         * @function create
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {ICMsgConsumableExhausted=} [properties] Properties to set
         * @returns {CMsgConsumableExhausted} CMsgConsumableExhausted instance
         */
        CMsgConsumableExhausted.create = function create(properties) {
            return new CMsgConsumableExhausted(properties);
        };
    
        /**
         * Encodes the specified CMsgConsumableExhausted message. Does not implicitly {@link CMsgConsumableExhausted.verify|verify} messages.
         * @function encode
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {ICMsgConsumableExhausted} message CMsgConsumableExhausted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConsumableExhausted.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_def_id != null && Object.hasOwnProperty.call(message, "item_def_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.item_def_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgConsumableExhausted message, length delimited. Does not implicitly {@link CMsgConsumableExhausted.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {ICMsgConsumableExhausted} message CMsgConsumableExhausted message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgConsumableExhausted.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgConsumableExhausted message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgConsumableExhausted} CMsgConsumableExhausted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConsumableExhausted.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgConsumableExhausted();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.item_def_id = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgConsumableExhausted message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgConsumableExhausted} CMsgConsumableExhausted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgConsumableExhausted.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgConsumableExhausted message.
         * @function verify
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgConsumableExhausted.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_def_id != null && message.hasOwnProperty("item_def_id"))
                if (!$util.isInteger(message.item_def_id))
                    return "item_def_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgConsumableExhausted message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgConsumableExhausted} CMsgConsumableExhausted
         */
        CMsgConsumableExhausted.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgConsumableExhausted)
                return object;
            var message = new $root.CMsgConsumableExhausted();
            if (object.item_def_id != null)
                message.item_def_id = object.item_def_id | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgConsumableExhausted message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {CMsgConsumableExhausted} message CMsgConsumableExhausted
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgConsumableExhausted.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.item_def_id = 0;
            if (message.item_def_id != null && message.hasOwnProperty("item_def_id"))
                object.item_def_id = message.item_def_id;
            return object;
        };
    
        /**
         * Converts this CMsgConsumableExhausted to JSON.
         * @function toJSON
         * @memberof CMsgConsumableExhausted
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgConsumableExhausted.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgConsumableExhausted
         * @function getTypeUrl
         * @memberof CMsgConsumableExhausted
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgConsumableExhausted.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgConsumableExhausted";
        };
    
        return CMsgConsumableExhausted;
    })();
    
    $root.CMsgItemAcknowledged__DEPRECATED = (function() {
    
        /**
         * Properties of a CMsgItemAcknowledged__DEPRECATED.
         * @exports ICMsgItemAcknowledged__DEPRECATED
         * @interface ICMsgItemAcknowledged__DEPRECATED
         * @property {number|null} [account_id] CMsgItemAcknowledged__DEPRECATED account_id
         * @property {number|null} [inventory] CMsgItemAcknowledged__DEPRECATED inventory
         * @property {number|null} [def_index] CMsgItemAcknowledged__DEPRECATED def_index
         * @property {number|null} [quality] CMsgItemAcknowledged__DEPRECATED quality
         * @property {number|null} [rarity] CMsgItemAcknowledged__DEPRECATED rarity
         * @property {number|null} [origin] CMsgItemAcknowledged__DEPRECATED origin
         * @property {number|Long|null} [item_id] CMsgItemAcknowledged__DEPRECATED item_id
         */
    
        /**
         * Constructs a new CMsgItemAcknowledged__DEPRECATED.
         * @exports CMsgItemAcknowledged__DEPRECATED
         * @classdesc Represents a CMsgItemAcknowledged__DEPRECATED.
         * @implements ICMsgItemAcknowledged__DEPRECATED
         * @constructor
         * @param {ICMsgItemAcknowledged__DEPRECATED=} [properties] Properties to set
         */
        function CMsgItemAcknowledged__DEPRECATED(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgItemAcknowledged__DEPRECATED account_id.
         * @member {number} account_id
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.account_id = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED inventory.
         * @member {number} inventory
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.inventory = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED def_index.
         * @member {number} def_index
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.def_index = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED quality.
         * @member {number} quality
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.quality = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED rarity.
         * @member {number} rarity
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.rarity = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED origin.
         * @member {number} origin
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.origin = 0;
    
        /**
         * CMsgItemAcknowledged__DEPRECATED item_id.
         * @member {number|Long} item_id
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgItemAcknowledged__DEPRECATED instance using the specified properties.
         * @function create
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {ICMsgItemAcknowledged__DEPRECATED=} [properties] Properties to set
         * @returns {CMsgItemAcknowledged__DEPRECATED} CMsgItemAcknowledged__DEPRECATED instance
         */
        CMsgItemAcknowledged__DEPRECATED.create = function create(properties) {
            return new CMsgItemAcknowledged__DEPRECATED(properties);
        };
    
        /**
         * Encodes the specified CMsgItemAcknowledged__DEPRECATED message. Does not implicitly {@link CMsgItemAcknowledged__DEPRECATED.verify|verify} messages.
         * @function encode
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {ICMsgItemAcknowledged__DEPRECATED} message CMsgItemAcknowledged__DEPRECATED message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgItemAcknowledged__DEPRECATED.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.account_id);
            if (message.inventory != null && Object.hasOwnProperty.call(message, "inventory"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.inventory);
            if (message.def_index != null && Object.hasOwnProperty.call(message, "def_index"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.def_index);
            if (message.quality != null && Object.hasOwnProperty.call(message, "quality"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.quality);
            if (message.rarity != null && Object.hasOwnProperty.call(message, "rarity"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.rarity);
            if (message.origin != null && Object.hasOwnProperty.call(message, "origin"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.origin);
            if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgItemAcknowledged__DEPRECATED message, length delimited. Does not implicitly {@link CMsgItemAcknowledged__DEPRECATED.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {ICMsgItemAcknowledged__DEPRECATED} message CMsgItemAcknowledged__DEPRECATED message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgItemAcknowledged__DEPRECATED.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgItemAcknowledged__DEPRECATED message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgItemAcknowledged__DEPRECATED} CMsgItemAcknowledged__DEPRECATED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgItemAcknowledged__DEPRECATED.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgItemAcknowledged__DEPRECATED();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.account_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.inventory = reader.uint32();
                        break;
                    }
                case 3: {
                        message.def_index = reader.uint32();
                        break;
                    }
                case 4: {
                        message.quality = reader.uint32();
                        break;
                    }
                case 5: {
                        message.rarity = reader.uint32();
                        break;
                    }
                case 6: {
                        message.origin = reader.uint32();
                        break;
                    }
                case 7: {
                        message.item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgItemAcknowledged__DEPRECATED message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgItemAcknowledged__DEPRECATED} CMsgItemAcknowledged__DEPRECATED
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgItemAcknowledged__DEPRECATED.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgItemAcknowledged__DEPRECATED message.
         * @function verify
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgItemAcknowledged__DEPRECATED.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                if (!$util.isInteger(message.account_id))
                    return "account_id: integer expected";
            if (message.inventory != null && message.hasOwnProperty("inventory"))
                if (!$util.isInteger(message.inventory))
                    return "inventory: integer expected";
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                if (!$util.isInteger(message.def_index))
                    return "def_index: integer expected";
            if (message.quality != null && message.hasOwnProperty("quality"))
                if (!$util.isInteger(message.quality))
                    return "quality: integer expected";
            if (message.rarity != null && message.hasOwnProperty("rarity"))
                if (!$util.isInteger(message.rarity))
                    return "rarity: integer expected";
            if (message.origin != null && message.hasOwnProperty("origin"))
                if (!$util.isInteger(message.origin))
                    return "origin: integer expected";
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                    return "item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgItemAcknowledged__DEPRECATED message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgItemAcknowledged__DEPRECATED} CMsgItemAcknowledged__DEPRECATED
         */
        CMsgItemAcknowledged__DEPRECATED.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgItemAcknowledged__DEPRECATED)
                return object;
            var message = new $root.CMsgItemAcknowledged__DEPRECATED();
            if (object.account_id != null)
                message.account_id = object.account_id >>> 0;
            if (object.inventory != null)
                message.inventory = object.inventory >>> 0;
            if (object.def_index != null)
                message.def_index = object.def_index >>> 0;
            if (object.quality != null)
                message.quality = object.quality >>> 0;
            if (object.rarity != null)
                message.rarity = object.rarity >>> 0;
            if (object.origin != null)
                message.origin = object.origin >>> 0;
            if (object.item_id != null)
                if ($util.Long)
                    (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                else if (typeof object.item_id === "string")
                    message.item_id = parseInt(object.item_id, 10);
                else if (typeof object.item_id === "number")
                    message.item_id = object.item_id;
                else if (typeof object.item_id === "object")
                    message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgItemAcknowledged__DEPRECATED message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {CMsgItemAcknowledged__DEPRECATED} message CMsgItemAcknowledged__DEPRECATED
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgItemAcknowledged__DEPRECATED.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_id = 0;
                object.inventory = 0;
                object.def_index = 0;
                object.quality = 0;
                object.rarity = 0;
                object.origin = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_id = options.longs === String ? "0" : 0;
            }
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                object.account_id = message.account_id;
            if (message.inventory != null && message.hasOwnProperty("inventory"))
                object.inventory = message.inventory;
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                object.def_index = message.def_index;
            if (message.quality != null && message.hasOwnProperty("quality"))
                object.quality = message.quality;
            if (message.rarity != null && message.hasOwnProperty("rarity"))
                object.rarity = message.rarity;
            if (message.origin != null && message.hasOwnProperty("origin"))
                object.origin = message.origin;
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (typeof message.item_id === "number")
                    object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                else
                    object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
            return object;
        };
    
        /**
         * Converts this CMsgItemAcknowledged__DEPRECATED to JSON.
         * @function toJSON
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgItemAcknowledged__DEPRECATED.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgItemAcknowledged__DEPRECATED
         * @function getTypeUrl
         * @memberof CMsgItemAcknowledged__DEPRECATED
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgItemAcknowledged__DEPRECATED.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgItemAcknowledged__DEPRECATED";
        };
    
        return CMsgItemAcknowledged__DEPRECATED;
    })();
    
    $root.CMsgSetItemPositions = (function() {
    
        /**
         * Properties of a CMsgSetItemPositions.
         * @exports ICMsgSetItemPositions
         * @interface ICMsgSetItemPositions
         * @property {Array.<CMsgSetItemPositions.IItemPosition>|null} [item_positions] CMsgSetItemPositions item_positions
         */
    
        /**
         * Constructs a new CMsgSetItemPositions.
         * @exports CMsgSetItemPositions
         * @classdesc Represents a CMsgSetItemPositions.
         * @implements ICMsgSetItemPositions
         * @constructor
         * @param {ICMsgSetItemPositions=} [properties] Properties to set
         */
        function CMsgSetItemPositions(properties) {
            this.item_positions = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgSetItemPositions item_positions.
         * @member {Array.<CMsgSetItemPositions.IItemPosition>} item_positions
         * @memberof CMsgSetItemPositions
         * @instance
         */
        CMsgSetItemPositions.prototype.item_positions = $util.emptyArray;
    
        /**
         * Creates a new CMsgSetItemPositions instance using the specified properties.
         * @function create
         * @memberof CMsgSetItemPositions
         * @static
         * @param {ICMsgSetItemPositions=} [properties] Properties to set
         * @returns {CMsgSetItemPositions} CMsgSetItemPositions instance
         */
        CMsgSetItemPositions.create = function create(properties) {
            return new CMsgSetItemPositions(properties);
        };
    
        /**
         * Encodes the specified CMsgSetItemPositions message. Does not implicitly {@link CMsgSetItemPositions.verify|verify} messages.
         * @function encode
         * @memberof CMsgSetItemPositions
         * @static
         * @param {ICMsgSetItemPositions} message CMsgSetItemPositions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSetItemPositions.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_positions != null && message.item_positions.length)
                for (var i = 0; i < message.item_positions.length; ++i)
                    $root.CMsgSetItemPositions.ItemPosition.encode(message.item_positions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSetItemPositions message, length delimited. Does not implicitly {@link CMsgSetItemPositions.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSetItemPositions
         * @static
         * @param {ICMsgSetItemPositions} message CMsgSetItemPositions message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSetItemPositions.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSetItemPositions message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSetItemPositions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSetItemPositions} CMsgSetItemPositions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSetItemPositions.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSetItemPositions();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.item_positions && message.item_positions.length))
                            message.item_positions = [];
                        message.item_positions.push($root.CMsgSetItemPositions.ItemPosition.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSetItemPositions message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSetItemPositions
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSetItemPositions} CMsgSetItemPositions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSetItemPositions.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSetItemPositions message.
         * @function verify
         * @memberof CMsgSetItemPositions
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSetItemPositions.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_positions != null && message.hasOwnProperty("item_positions")) {
                if (!Array.isArray(message.item_positions))
                    return "item_positions: array expected";
                for (var i = 0; i < message.item_positions.length; ++i) {
                    var error = $root.CMsgSetItemPositions.ItemPosition.verify(message.item_positions[i]);
                    if (error)
                        return "item_positions." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgSetItemPositions message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSetItemPositions
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSetItemPositions} CMsgSetItemPositions
         */
        CMsgSetItemPositions.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSetItemPositions)
                return object;
            var message = new $root.CMsgSetItemPositions();
            if (object.item_positions) {
                if (!Array.isArray(object.item_positions))
                    throw TypeError(".CMsgSetItemPositions.item_positions: array expected");
                message.item_positions = [];
                for (var i = 0; i < object.item_positions.length; ++i) {
                    if (typeof object.item_positions[i] !== "object")
                        throw TypeError(".CMsgSetItemPositions.item_positions: object expected");
                    message.item_positions[i] = $root.CMsgSetItemPositions.ItemPosition.fromObject(object.item_positions[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgSetItemPositions message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSetItemPositions
         * @static
         * @param {CMsgSetItemPositions} message CMsgSetItemPositions
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSetItemPositions.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.item_positions = [];
            if (message.item_positions && message.item_positions.length) {
                object.item_positions = [];
                for (var j = 0; j < message.item_positions.length; ++j)
                    object.item_positions[j] = $root.CMsgSetItemPositions.ItemPosition.toObject(message.item_positions[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgSetItemPositions to JSON.
         * @function toJSON
         * @memberof CMsgSetItemPositions
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSetItemPositions.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSetItemPositions
         * @function getTypeUrl
         * @memberof CMsgSetItemPositions
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSetItemPositions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSetItemPositions";
        };
    
        CMsgSetItemPositions.ItemPosition = (function() {
    
            /**
             * Properties of an ItemPosition.
             * @memberof CMsgSetItemPositions
             * @interface IItemPosition
             * @property {number|null} [legacy_item_id] ItemPosition legacy_item_id
             * @property {number|null} [position] ItemPosition position
             * @property {number|Long|null} [item_id] ItemPosition item_id
             */
    
            /**
             * Constructs a new ItemPosition.
             * @memberof CMsgSetItemPositions
             * @classdesc Represents an ItemPosition.
             * @implements IItemPosition
             * @constructor
             * @param {CMsgSetItemPositions.IItemPosition=} [properties] Properties to set
             */
            function ItemPosition(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }
    
            /**
             * ItemPosition legacy_item_id.
             * @member {number} legacy_item_id
             * @memberof CMsgSetItemPositions.ItemPosition
             * @instance
             */
            ItemPosition.prototype.legacy_item_id = 0;
    
            /**
             * ItemPosition position.
             * @member {number} position
             * @memberof CMsgSetItemPositions.ItemPosition
             * @instance
             */
            ItemPosition.prototype.position = 0;
    
            /**
             * ItemPosition item_id.
             * @member {number|Long} item_id
             * @memberof CMsgSetItemPositions.ItemPosition
             * @instance
             */
            ItemPosition.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
            /**
             * Creates a new ItemPosition instance using the specified properties.
             * @function create
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {CMsgSetItemPositions.IItemPosition=} [properties] Properties to set
             * @returns {CMsgSetItemPositions.ItemPosition} ItemPosition instance
             */
            ItemPosition.create = function create(properties) {
                return new ItemPosition(properties);
            };
    
            /**
             * Encodes the specified ItemPosition message. Does not implicitly {@link CMsgSetItemPositions.ItemPosition.verify|verify} messages.
             * @function encode
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {CMsgSetItemPositions.IItemPosition} message ItemPosition message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemPosition.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.legacy_item_id != null && Object.hasOwnProperty.call(message, "legacy_item_id"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.legacy_item_id);
                if (message.position != null && Object.hasOwnProperty.call(message, "position"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.position);
                if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.item_id);
                return writer;
            };
    
            /**
             * Encodes the specified ItemPosition message, length delimited. Does not implicitly {@link CMsgSetItemPositions.ItemPosition.verify|verify} messages.
             * @function encodeDelimited
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {CMsgSetItemPositions.IItemPosition} message ItemPosition message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ItemPosition.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };
    
            /**
             * Decodes an ItemPosition message from the specified reader or buffer.
             * @function decode
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {CMsgSetItemPositions.ItemPosition} ItemPosition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemPosition.decode = function decode(reader, length, error) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSetItemPositions.ItemPosition();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    if (tag === error)
                        break;
                    switch (tag >>> 3) {
                    case 1: {
                            message.legacy_item_id = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.position = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.item_id = reader.uint64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };
    
            /**
             * Decodes an ItemPosition message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {CMsgSetItemPositions.ItemPosition} ItemPosition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ItemPosition.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };
    
            /**
             * Verifies an ItemPosition message.
             * @function verify
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ItemPosition.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.legacy_item_id != null && message.hasOwnProperty("legacy_item_id"))
                    if (!$util.isInteger(message.legacy_item_id))
                        return "legacy_item_id: integer expected";
                if (message.position != null && message.hasOwnProperty("position"))
                    if (!$util.isInteger(message.position))
                        return "position: integer expected";
                if (message.item_id != null && message.hasOwnProperty("item_id"))
                    if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                        return "item_id: integer|Long expected";
                return null;
            };
    
            /**
             * Creates an ItemPosition message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {CMsgSetItemPositions.ItemPosition} ItemPosition
             */
            ItemPosition.fromObject = function fromObject(object) {
                if (object instanceof $root.CMsgSetItemPositions.ItemPosition)
                    return object;
                var message = new $root.CMsgSetItemPositions.ItemPosition();
                if (object.legacy_item_id != null)
                    message.legacy_item_id = object.legacy_item_id >>> 0;
                if (object.position != null)
                    message.position = object.position >>> 0;
                if (object.item_id != null)
                    if ($util.Long)
                        (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                    else if (typeof object.item_id === "string")
                        message.item_id = parseInt(object.item_id, 10);
                    else if (typeof object.item_id === "number")
                        message.item_id = object.item_id;
                    else if (typeof object.item_id === "object")
                        message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
                return message;
            };
    
            /**
             * Creates a plain object from an ItemPosition message. Also converts values to other types if specified.
             * @function toObject
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {CMsgSetItemPositions.ItemPosition} message ItemPosition
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ItemPosition.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.legacy_item_id = 0;
                    object.position = 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.item_id = options.longs === String ? "0" : 0;
                }
                if (message.legacy_item_id != null && message.hasOwnProperty("legacy_item_id"))
                    object.legacy_item_id = message.legacy_item_id;
                if (message.position != null && message.hasOwnProperty("position"))
                    object.position = message.position;
                if (message.item_id != null && message.hasOwnProperty("item_id"))
                    if (typeof message.item_id === "number")
                        object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                    else
                        object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
                return object;
            };
    
            /**
             * Converts this ItemPosition to JSON.
             * @function toJSON
             * @memberof CMsgSetItemPositions.ItemPosition
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ItemPosition.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };
    
            /**
             * Gets the default type url for ItemPosition
             * @function getTypeUrl
             * @memberof CMsgSetItemPositions.ItemPosition
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ItemPosition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/CMsgSetItemPositions.ItemPosition";
            };
    
            return ItemPosition;
        })();
    
        return CMsgSetItemPositions;
    })();
    
    $root.CMsgGCReportAbuse = (function() {
    
        /**
         * Properties of a CMsgGCReportAbuse.
         * @exports ICMsgGCReportAbuse
         * @interface ICMsgGCReportAbuse
         * @property {number|Long|null} [target_steam_id] CMsgGCReportAbuse target_steam_id
         * @property {string|null} [description] CMsgGCReportAbuse description
         * @property {number|Long|null} [gid] CMsgGCReportAbuse gid
         * @property {number|null} [abuse_type] CMsgGCReportAbuse abuse_type
         * @property {number|null} [content_type] CMsgGCReportAbuse content_type
         * @property {number|null} [target_game_server_ip] CMsgGCReportAbuse target_game_server_ip
         * @property {number|null} [target_game_server_port] CMsgGCReportAbuse target_game_server_port
         */
    
        /**
         * Constructs a new CMsgGCReportAbuse.
         * @exports CMsgGCReportAbuse
         * @classdesc Represents a CMsgGCReportAbuse.
         * @implements ICMsgGCReportAbuse
         * @constructor
         * @param {ICMsgGCReportAbuse=} [properties] Properties to set
         */
        function CMsgGCReportAbuse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCReportAbuse target_steam_id.
         * @member {number|Long} target_steam_id
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.target_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCReportAbuse description.
         * @member {string} description
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.description = "";
    
        /**
         * CMsgGCReportAbuse gid.
         * @member {number|Long} gid
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.gid = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgGCReportAbuse abuse_type.
         * @member {number} abuse_type
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.abuse_type = 0;
    
        /**
         * CMsgGCReportAbuse content_type.
         * @member {number} content_type
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.content_type = 0;
    
        /**
         * CMsgGCReportAbuse target_game_server_ip.
         * @member {number} target_game_server_ip
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.target_game_server_ip = 0;
    
        /**
         * CMsgGCReportAbuse target_game_server_port.
         * @member {number} target_game_server_port
         * @memberof CMsgGCReportAbuse
         * @instance
         */
        CMsgGCReportAbuse.prototype.target_game_server_port = 0;
    
        /**
         * Creates a new CMsgGCReportAbuse instance using the specified properties.
         * @function create
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {ICMsgGCReportAbuse=} [properties] Properties to set
         * @returns {CMsgGCReportAbuse} CMsgGCReportAbuse instance
         */
        CMsgGCReportAbuse.create = function create(properties) {
            return new CMsgGCReportAbuse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCReportAbuse message. Does not implicitly {@link CMsgGCReportAbuse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {ICMsgGCReportAbuse} message CMsgGCReportAbuse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCReportAbuse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.target_steam_id != null && Object.hasOwnProperty.call(message, "target_steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.target_steam_id);
            if (message.abuse_type != null && Object.hasOwnProperty.call(message, "abuse_type"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.abuse_type);
            if (message.content_type != null && Object.hasOwnProperty.call(message, "content_type"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.content_type);
            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
            if (message.gid != null && Object.hasOwnProperty.call(message, "gid"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.gid);
            if (message.target_game_server_ip != null && Object.hasOwnProperty.call(message, "target_game_server_ip"))
                writer.uint32(/* id 6, wireType 5 =*/53).fixed32(message.target_game_server_ip);
            if (message.target_game_server_port != null && Object.hasOwnProperty.call(message, "target_game_server_port"))
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.target_game_server_port);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCReportAbuse message, length delimited. Does not implicitly {@link CMsgGCReportAbuse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {ICMsgGCReportAbuse} message CMsgGCReportAbuse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCReportAbuse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCReportAbuse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCReportAbuse} CMsgGCReportAbuse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCReportAbuse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCReportAbuse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.target_steam_id = reader.fixed64();
                        break;
                    }
                case 4: {
                        message.description = reader.string();
                        break;
                    }
                case 5: {
                        message.gid = reader.uint64();
                        break;
                    }
                case 2: {
                        message.abuse_type = reader.uint32();
                        break;
                    }
                case 3: {
                        message.content_type = reader.uint32();
                        break;
                    }
                case 6: {
                        message.target_game_server_ip = reader.fixed32();
                        break;
                    }
                case 7: {
                        message.target_game_server_port = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCReportAbuse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCReportAbuse} CMsgGCReportAbuse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCReportAbuse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCReportAbuse message.
         * @function verify
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCReportAbuse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.target_steam_id != null && message.hasOwnProperty("target_steam_id"))
                if (!$util.isInteger(message.target_steam_id) && !(message.target_steam_id && $util.isInteger(message.target_steam_id.low) && $util.isInteger(message.target_steam_id.high)))
                    return "target_steam_id: integer|Long expected";
            if (message.description != null && message.hasOwnProperty("description"))
                if (!$util.isString(message.description))
                    return "description: string expected";
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (!$util.isInteger(message.gid) && !(message.gid && $util.isInteger(message.gid.low) && $util.isInteger(message.gid.high)))
                    return "gid: integer|Long expected";
            if (message.abuse_type != null && message.hasOwnProperty("abuse_type"))
                if (!$util.isInteger(message.abuse_type))
                    return "abuse_type: integer expected";
            if (message.content_type != null && message.hasOwnProperty("content_type"))
                if (!$util.isInteger(message.content_type))
                    return "content_type: integer expected";
            if (message.target_game_server_ip != null && message.hasOwnProperty("target_game_server_ip"))
                if (!$util.isInteger(message.target_game_server_ip))
                    return "target_game_server_ip: integer expected";
            if (message.target_game_server_port != null && message.hasOwnProperty("target_game_server_port"))
                if (!$util.isInteger(message.target_game_server_port))
                    return "target_game_server_port: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCReportAbuse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCReportAbuse} CMsgGCReportAbuse
         */
        CMsgGCReportAbuse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCReportAbuse)
                return object;
            var message = new $root.CMsgGCReportAbuse();
            if (object.target_steam_id != null)
                if ($util.Long)
                    (message.target_steam_id = $util.Long.fromValue(object.target_steam_id)).unsigned = false;
                else if (typeof object.target_steam_id === "string")
                    message.target_steam_id = parseInt(object.target_steam_id, 10);
                else if (typeof object.target_steam_id === "number")
                    message.target_steam_id = object.target_steam_id;
                else if (typeof object.target_steam_id === "object")
                    message.target_steam_id = new $util.LongBits(object.target_steam_id.low >>> 0, object.target_steam_id.high >>> 0).toNumber();
            if (object.description != null)
                message.description = String(object.description);
            if (object.gid != null)
                if ($util.Long)
                    (message.gid = $util.Long.fromValue(object.gid)).unsigned = true;
                else if (typeof object.gid === "string")
                    message.gid = parseInt(object.gid, 10);
                else if (typeof object.gid === "number")
                    message.gid = object.gid;
                else if (typeof object.gid === "object")
                    message.gid = new $util.LongBits(object.gid.low >>> 0, object.gid.high >>> 0).toNumber(true);
            if (object.abuse_type != null)
                message.abuse_type = object.abuse_type >>> 0;
            if (object.content_type != null)
                message.content_type = object.content_type >>> 0;
            if (object.target_game_server_ip != null)
                message.target_game_server_ip = object.target_game_server_ip >>> 0;
            if (object.target_game_server_port != null)
                message.target_game_server_port = object.target_game_server_port >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCReportAbuse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {CMsgGCReportAbuse} message CMsgGCReportAbuse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCReportAbuse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.target_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.target_steam_id = options.longs === String ? "0" : 0;
                object.abuse_type = 0;
                object.content_type = 0;
                object.description = "";
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.gid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.gid = options.longs === String ? "0" : 0;
                object.target_game_server_ip = 0;
                object.target_game_server_port = 0;
            }
            if (message.target_steam_id != null && message.hasOwnProperty("target_steam_id"))
                if (typeof message.target_steam_id === "number")
                    object.target_steam_id = options.longs === String ? String(message.target_steam_id) : message.target_steam_id;
                else
                    object.target_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.target_steam_id) : options.longs === Number ? new $util.LongBits(message.target_steam_id.low >>> 0, message.target_steam_id.high >>> 0).toNumber() : message.target_steam_id;
            if (message.abuse_type != null && message.hasOwnProperty("abuse_type"))
                object.abuse_type = message.abuse_type;
            if (message.content_type != null && message.hasOwnProperty("content_type"))
                object.content_type = message.content_type;
            if (message.description != null && message.hasOwnProperty("description"))
                object.description = message.description;
            if (message.gid != null && message.hasOwnProperty("gid"))
                if (typeof message.gid === "number")
                    object.gid = options.longs === String ? String(message.gid) : message.gid;
                else
                    object.gid = options.longs === String ? $util.Long.prototype.toString.call(message.gid) : options.longs === Number ? new $util.LongBits(message.gid.low >>> 0, message.gid.high >>> 0).toNumber(true) : message.gid;
            if (message.target_game_server_ip != null && message.hasOwnProperty("target_game_server_ip"))
                object.target_game_server_ip = message.target_game_server_ip;
            if (message.target_game_server_port != null && message.hasOwnProperty("target_game_server_port"))
                object.target_game_server_port = message.target_game_server_port;
            return object;
        };
    
        /**
         * Converts this CMsgGCReportAbuse to JSON.
         * @function toJSON
         * @memberof CMsgGCReportAbuse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCReportAbuse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCReportAbuse
         * @function getTypeUrl
         * @memberof CMsgGCReportAbuse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCReportAbuse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCReportAbuse";
        };
    
        return CMsgGCReportAbuse;
    })();
    
    $root.CMsgGCReportAbuseResponse = (function() {
    
        /**
         * Properties of a CMsgGCReportAbuseResponse.
         * @exports ICMsgGCReportAbuseResponse
         * @interface ICMsgGCReportAbuseResponse
         * @property {number|Long|null} [target_steam_id] CMsgGCReportAbuseResponse target_steam_id
         * @property {number|null} [result] CMsgGCReportAbuseResponse result
         * @property {string|null} [error_message] CMsgGCReportAbuseResponse error_message
         */
    
        /**
         * Constructs a new CMsgGCReportAbuseResponse.
         * @exports CMsgGCReportAbuseResponse
         * @classdesc Represents a CMsgGCReportAbuseResponse.
         * @implements ICMsgGCReportAbuseResponse
         * @constructor
         * @param {ICMsgGCReportAbuseResponse=} [properties] Properties to set
         */
        function CMsgGCReportAbuseResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCReportAbuseResponse target_steam_id.
         * @member {number|Long} target_steam_id
         * @memberof CMsgGCReportAbuseResponse
         * @instance
         */
        CMsgGCReportAbuseResponse.prototype.target_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCReportAbuseResponse result.
         * @member {number} result
         * @memberof CMsgGCReportAbuseResponse
         * @instance
         */
        CMsgGCReportAbuseResponse.prototype.result = 0;
    
        /**
         * CMsgGCReportAbuseResponse error_message.
         * @member {string} error_message
         * @memberof CMsgGCReportAbuseResponse
         * @instance
         */
        CMsgGCReportAbuseResponse.prototype.error_message = "";
    
        /**
         * Creates a new CMsgGCReportAbuseResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {ICMsgGCReportAbuseResponse=} [properties] Properties to set
         * @returns {CMsgGCReportAbuseResponse} CMsgGCReportAbuseResponse instance
         */
        CMsgGCReportAbuseResponse.create = function create(properties) {
            return new CMsgGCReportAbuseResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCReportAbuseResponse message. Does not implicitly {@link CMsgGCReportAbuseResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {ICMsgGCReportAbuseResponse} message CMsgGCReportAbuseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCReportAbuseResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.target_steam_id != null && Object.hasOwnProperty.call(message, "target_steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.target_steam_id);
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.result);
            if (message.error_message != null && Object.hasOwnProperty.call(message, "error_message"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.error_message);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCReportAbuseResponse message, length delimited. Does not implicitly {@link CMsgGCReportAbuseResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {ICMsgGCReportAbuseResponse} message CMsgGCReportAbuseResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCReportAbuseResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCReportAbuseResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCReportAbuseResponse} CMsgGCReportAbuseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCReportAbuseResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCReportAbuseResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.target_steam_id = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.result = reader.uint32();
                        break;
                    }
                case 3: {
                        message.error_message = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCReportAbuseResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCReportAbuseResponse} CMsgGCReportAbuseResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCReportAbuseResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCReportAbuseResponse message.
         * @function verify
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCReportAbuseResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.target_steam_id != null && message.hasOwnProperty("target_steam_id"))
                if (!$util.isInteger(message.target_steam_id) && !(message.target_steam_id && $util.isInteger(message.target_steam_id.low) && $util.isInteger(message.target_steam_id.high)))
                    return "target_steam_id: integer|Long expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                if (!$util.isString(message.error_message))
                    return "error_message: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCReportAbuseResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCReportAbuseResponse} CMsgGCReportAbuseResponse
         */
        CMsgGCReportAbuseResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCReportAbuseResponse)
                return object;
            var message = new $root.CMsgGCReportAbuseResponse();
            if (object.target_steam_id != null)
                if ($util.Long)
                    (message.target_steam_id = $util.Long.fromValue(object.target_steam_id)).unsigned = false;
                else if (typeof object.target_steam_id === "string")
                    message.target_steam_id = parseInt(object.target_steam_id, 10);
                else if (typeof object.target_steam_id === "number")
                    message.target_steam_id = object.target_steam_id;
                else if (typeof object.target_steam_id === "object")
                    message.target_steam_id = new $util.LongBits(object.target_steam_id.low >>> 0, object.target_steam_id.high >>> 0).toNumber();
            if (object.result != null)
                message.result = object.result >>> 0;
            if (object.error_message != null)
                message.error_message = String(object.error_message);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCReportAbuseResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {CMsgGCReportAbuseResponse} message CMsgGCReportAbuseResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCReportAbuseResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.target_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.target_steam_id = options.longs === String ? "0" : 0;
                object.result = 0;
                object.error_message = "";
            }
            if (message.target_steam_id != null && message.hasOwnProperty("target_steam_id"))
                if (typeof message.target_steam_id === "number")
                    object.target_steam_id = options.longs === String ? String(message.target_steam_id) : message.target_steam_id;
                else
                    object.target_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.target_steam_id) : options.longs === Number ? new $util.LongBits(message.target_steam_id.low >>> 0, message.target_steam_id.high >>> 0).toNumber() : message.target_steam_id;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                object.error_message = message.error_message;
            return object;
        };
    
        /**
         * Converts this CMsgGCReportAbuseResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCReportAbuseResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCReportAbuseResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCReportAbuseResponse
         * @function getTypeUrl
         * @memberof CMsgGCReportAbuseResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCReportAbuseResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCReportAbuseResponse";
        };
    
        return CMsgGCReportAbuseResponse;
    })();
    
    $root.CMsgGCNameItemNotification = (function() {
    
        /**
         * Properties of a CMsgGCNameItemNotification.
         * @exports ICMsgGCNameItemNotification
         * @interface ICMsgGCNameItemNotification
         * @property {number|Long|null} [player_steamid] CMsgGCNameItemNotification player_steamid
         * @property {number|null} [item_def_index] CMsgGCNameItemNotification item_def_index
         * @property {string|null} [item_name_custom] CMsgGCNameItemNotification item_name_custom
         */
    
        /**
         * Constructs a new CMsgGCNameItemNotification.
         * @exports CMsgGCNameItemNotification
         * @classdesc Represents a CMsgGCNameItemNotification.
         * @implements ICMsgGCNameItemNotification
         * @constructor
         * @param {ICMsgGCNameItemNotification=} [properties] Properties to set
         */
        function CMsgGCNameItemNotification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCNameItemNotification player_steamid.
         * @member {number|Long} player_steamid
         * @memberof CMsgGCNameItemNotification
         * @instance
         */
        CMsgGCNameItemNotification.prototype.player_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCNameItemNotification item_def_index.
         * @member {number} item_def_index
         * @memberof CMsgGCNameItemNotification
         * @instance
         */
        CMsgGCNameItemNotification.prototype.item_def_index = 0;
    
        /**
         * CMsgGCNameItemNotification item_name_custom.
         * @member {string} item_name_custom
         * @memberof CMsgGCNameItemNotification
         * @instance
         */
        CMsgGCNameItemNotification.prototype.item_name_custom = "";
    
        /**
         * Creates a new CMsgGCNameItemNotification instance using the specified properties.
         * @function create
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {ICMsgGCNameItemNotification=} [properties] Properties to set
         * @returns {CMsgGCNameItemNotification} CMsgGCNameItemNotification instance
         */
        CMsgGCNameItemNotification.create = function create(properties) {
            return new CMsgGCNameItemNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgGCNameItemNotification message. Does not implicitly {@link CMsgGCNameItemNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {ICMsgGCNameItemNotification} message CMsgGCNameItemNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCNameItemNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.player_steamid != null && Object.hasOwnProperty.call(message, "player_steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.player_steamid);
            if (message.item_def_index != null && Object.hasOwnProperty.call(message, "item_def_index"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.item_def_index);
            if (message.item_name_custom != null && Object.hasOwnProperty.call(message, "item_name_custom"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.item_name_custom);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCNameItemNotification message, length delimited. Does not implicitly {@link CMsgGCNameItemNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {ICMsgGCNameItemNotification} message CMsgGCNameItemNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCNameItemNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCNameItemNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCNameItemNotification} CMsgGCNameItemNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCNameItemNotification.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCNameItemNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.player_steamid = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.item_def_index = reader.uint32();
                        break;
                    }
                case 3: {
                        message.item_name_custom = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCNameItemNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCNameItemNotification} CMsgGCNameItemNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCNameItemNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCNameItemNotification message.
         * @function verify
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCNameItemNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.player_steamid != null && message.hasOwnProperty("player_steamid"))
                if (!$util.isInteger(message.player_steamid) && !(message.player_steamid && $util.isInteger(message.player_steamid.low) && $util.isInteger(message.player_steamid.high)))
                    return "player_steamid: integer|Long expected";
            if (message.item_def_index != null && message.hasOwnProperty("item_def_index"))
                if (!$util.isInteger(message.item_def_index))
                    return "item_def_index: integer expected";
            if (message.item_name_custom != null && message.hasOwnProperty("item_name_custom"))
                if (!$util.isString(message.item_name_custom))
                    return "item_name_custom: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCNameItemNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCNameItemNotification} CMsgGCNameItemNotification
         */
        CMsgGCNameItemNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCNameItemNotification)
                return object;
            var message = new $root.CMsgGCNameItemNotification();
            if (object.player_steamid != null)
                if ($util.Long)
                    (message.player_steamid = $util.Long.fromValue(object.player_steamid)).unsigned = false;
                else if (typeof object.player_steamid === "string")
                    message.player_steamid = parseInt(object.player_steamid, 10);
                else if (typeof object.player_steamid === "number")
                    message.player_steamid = object.player_steamid;
                else if (typeof object.player_steamid === "object")
                    message.player_steamid = new $util.LongBits(object.player_steamid.low >>> 0, object.player_steamid.high >>> 0).toNumber();
            if (object.item_def_index != null)
                message.item_def_index = object.item_def_index >>> 0;
            if (object.item_name_custom != null)
                message.item_name_custom = String(object.item_name_custom);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCNameItemNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {CMsgGCNameItemNotification} message CMsgGCNameItemNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCNameItemNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.player_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.player_steamid = options.longs === String ? "0" : 0;
                object.item_def_index = 0;
                object.item_name_custom = "";
            }
            if (message.player_steamid != null && message.hasOwnProperty("player_steamid"))
                if (typeof message.player_steamid === "number")
                    object.player_steamid = options.longs === String ? String(message.player_steamid) : message.player_steamid;
                else
                    object.player_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.player_steamid) : options.longs === Number ? new $util.LongBits(message.player_steamid.low >>> 0, message.player_steamid.high >>> 0).toNumber() : message.player_steamid;
            if (message.item_def_index != null && message.hasOwnProperty("item_def_index"))
                object.item_def_index = message.item_def_index;
            if (message.item_name_custom != null && message.hasOwnProperty("item_name_custom"))
                object.item_name_custom = message.item_name_custom;
            return object;
        };
    
        /**
         * Converts this CMsgGCNameItemNotification to JSON.
         * @function toJSON
         * @memberof CMsgGCNameItemNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCNameItemNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCNameItemNotification
         * @function getTypeUrl
         * @memberof CMsgGCNameItemNotification
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCNameItemNotification.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCNameItemNotification";
        };
    
        return CMsgGCNameItemNotification;
    })();
    
    $root.CMsgGCClientDisplayNotification = (function() {
    
        /**
         * Properties of a CMsgGCClientDisplayNotification.
         * @exports ICMsgGCClientDisplayNotification
         * @interface ICMsgGCClientDisplayNotification
         * @property {string|null} [notification_title_localization_key] CMsgGCClientDisplayNotification notification_title_localization_key
         * @property {string|null} [notification_body_localization_key] CMsgGCClientDisplayNotification notification_body_localization_key
         * @property {Array.<string>|null} [body_substring_keys] CMsgGCClientDisplayNotification body_substring_keys
         * @property {Array.<string>|null} [body_substring_values] CMsgGCClientDisplayNotification body_substring_values
         */
    
        /**
         * Constructs a new CMsgGCClientDisplayNotification.
         * @exports CMsgGCClientDisplayNotification
         * @classdesc Represents a CMsgGCClientDisplayNotification.
         * @implements ICMsgGCClientDisplayNotification
         * @constructor
         * @param {ICMsgGCClientDisplayNotification=} [properties] Properties to set
         */
        function CMsgGCClientDisplayNotification(properties) {
            this.body_substring_keys = [];
            this.body_substring_values = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCClientDisplayNotification notification_title_localization_key.
         * @member {string} notification_title_localization_key
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         */
        CMsgGCClientDisplayNotification.prototype.notification_title_localization_key = "";
    
        /**
         * CMsgGCClientDisplayNotification notification_body_localization_key.
         * @member {string} notification_body_localization_key
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         */
        CMsgGCClientDisplayNotification.prototype.notification_body_localization_key = "";
    
        /**
         * CMsgGCClientDisplayNotification body_substring_keys.
         * @member {Array.<string>} body_substring_keys
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         */
        CMsgGCClientDisplayNotification.prototype.body_substring_keys = $util.emptyArray;
    
        /**
         * CMsgGCClientDisplayNotification body_substring_values.
         * @member {Array.<string>} body_substring_values
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         */
        CMsgGCClientDisplayNotification.prototype.body_substring_values = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCClientDisplayNotification instance using the specified properties.
         * @function create
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {ICMsgGCClientDisplayNotification=} [properties] Properties to set
         * @returns {CMsgGCClientDisplayNotification} CMsgGCClientDisplayNotification instance
         */
        CMsgGCClientDisplayNotification.create = function create(properties) {
            return new CMsgGCClientDisplayNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgGCClientDisplayNotification message. Does not implicitly {@link CMsgGCClientDisplayNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {ICMsgGCClientDisplayNotification} message CMsgGCClientDisplayNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClientDisplayNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.notification_title_localization_key != null && Object.hasOwnProperty.call(message, "notification_title_localization_key"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.notification_title_localization_key);
            if (message.notification_body_localization_key != null && Object.hasOwnProperty.call(message, "notification_body_localization_key"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.notification_body_localization_key);
            if (message.body_substring_keys != null && message.body_substring_keys.length)
                for (var i = 0; i < message.body_substring_keys.length; ++i)
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.body_substring_keys[i]);
            if (message.body_substring_values != null && message.body_substring_values.length)
                for (var i = 0; i < message.body_substring_values.length; ++i)
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.body_substring_values[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCClientDisplayNotification message, length delimited. Does not implicitly {@link CMsgGCClientDisplayNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {ICMsgGCClientDisplayNotification} message CMsgGCClientDisplayNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClientDisplayNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCClientDisplayNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCClientDisplayNotification} CMsgGCClientDisplayNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClientDisplayNotification.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCClientDisplayNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.notification_title_localization_key = reader.string();
                        break;
                    }
                case 2: {
                        message.notification_body_localization_key = reader.string();
                        break;
                    }
                case 3: {
                        if (!(message.body_substring_keys && message.body_substring_keys.length))
                            message.body_substring_keys = [];
                        message.body_substring_keys.push(reader.string());
                        break;
                    }
                case 4: {
                        if (!(message.body_substring_values && message.body_substring_values.length))
                            message.body_substring_values = [];
                        message.body_substring_values.push(reader.string());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCClientDisplayNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCClientDisplayNotification} CMsgGCClientDisplayNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClientDisplayNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCClientDisplayNotification message.
         * @function verify
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCClientDisplayNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.notification_title_localization_key != null && message.hasOwnProperty("notification_title_localization_key"))
                if (!$util.isString(message.notification_title_localization_key))
                    return "notification_title_localization_key: string expected";
            if (message.notification_body_localization_key != null && message.hasOwnProperty("notification_body_localization_key"))
                if (!$util.isString(message.notification_body_localization_key))
                    return "notification_body_localization_key: string expected";
            if (message.body_substring_keys != null && message.hasOwnProperty("body_substring_keys")) {
                if (!Array.isArray(message.body_substring_keys))
                    return "body_substring_keys: array expected";
                for (var i = 0; i < message.body_substring_keys.length; ++i)
                    if (!$util.isString(message.body_substring_keys[i]))
                        return "body_substring_keys: string[] expected";
            }
            if (message.body_substring_values != null && message.hasOwnProperty("body_substring_values")) {
                if (!Array.isArray(message.body_substring_values))
                    return "body_substring_values: array expected";
                for (var i = 0; i < message.body_substring_values.length; ++i)
                    if (!$util.isString(message.body_substring_values[i]))
                        return "body_substring_values: string[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCClientDisplayNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCClientDisplayNotification} CMsgGCClientDisplayNotification
         */
        CMsgGCClientDisplayNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCClientDisplayNotification)
                return object;
            var message = new $root.CMsgGCClientDisplayNotification();
            if (object.notification_title_localization_key != null)
                message.notification_title_localization_key = String(object.notification_title_localization_key);
            if (object.notification_body_localization_key != null)
                message.notification_body_localization_key = String(object.notification_body_localization_key);
            if (object.body_substring_keys) {
                if (!Array.isArray(object.body_substring_keys))
                    throw TypeError(".CMsgGCClientDisplayNotification.body_substring_keys: array expected");
                message.body_substring_keys = [];
                for (var i = 0; i < object.body_substring_keys.length; ++i)
                    message.body_substring_keys[i] = String(object.body_substring_keys[i]);
            }
            if (object.body_substring_values) {
                if (!Array.isArray(object.body_substring_values))
                    throw TypeError(".CMsgGCClientDisplayNotification.body_substring_values: array expected");
                message.body_substring_values = [];
                for (var i = 0; i < object.body_substring_values.length; ++i)
                    message.body_substring_values[i] = String(object.body_substring_values[i]);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCClientDisplayNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {CMsgGCClientDisplayNotification} message CMsgGCClientDisplayNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCClientDisplayNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults) {
                object.body_substring_keys = [];
                object.body_substring_values = [];
            }
            if (options.defaults) {
                object.notification_title_localization_key = "";
                object.notification_body_localization_key = "";
            }
            if (message.notification_title_localization_key != null && message.hasOwnProperty("notification_title_localization_key"))
                object.notification_title_localization_key = message.notification_title_localization_key;
            if (message.notification_body_localization_key != null && message.hasOwnProperty("notification_body_localization_key"))
                object.notification_body_localization_key = message.notification_body_localization_key;
            if (message.body_substring_keys && message.body_substring_keys.length) {
                object.body_substring_keys = [];
                for (var j = 0; j < message.body_substring_keys.length; ++j)
                    object.body_substring_keys[j] = message.body_substring_keys[j];
            }
            if (message.body_substring_values && message.body_substring_values.length) {
                object.body_substring_values = [];
                for (var j = 0; j < message.body_substring_values.length; ++j)
                    object.body_substring_values[j] = message.body_substring_values[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCClientDisplayNotification to JSON.
         * @function toJSON
         * @memberof CMsgGCClientDisplayNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCClientDisplayNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCClientDisplayNotification
         * @function getTypeUrl
         * @memberof CMsgGCClientDisplayNotification
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCClientDisplayNotification.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCClientDisplayNotification";
        };
    
        return CMsgGCClientDisplayNotification;
    })();
    
    $root.CMsgGCShowItemsPickedUp = (function() {
    
        /**
         * Properties of a CMsgGCShowItemsPickedUp.
         * @exports ICMsgGCShowItemsPickedUp
         * @interface ICMsgGCShowItemsPickedUp
         * @property {number|Long|null} [player_steamid] CMsgGCShowItemsPickedUp player_steamid
         */
    
        /**
         * Constructs a new CMsgGCShowItemsPickedUp.
         * @exports CMsgGCShowItemsPickedUp
         * @classdesc Represents a CMsgGCShowItemsPickedUp.
         * @implements ICMsgGCShowItemsPickedUp
         * @constructor
         * @param {ICMsgGCShowItemsPickedUp=} [properties] Properties to set
         */
        function CMsgGCShowItemsPickedUp(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCShowItemsPickedUp player_steamid.
         * @member {number|Long} player_steamid
         * @memberof CMsgGCShowItemsPickedUp
         * @instance
         */
        CMsgGCShowItemsPickedUp.prototype.player_steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCShowItemsPickedUp instance using the specified properties.
         * @function create
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {ICMsgGCShowItemsPickedUp=} [properties] Properties to set
         * @returns {CMsgGCShowItemsPickedUp} CMsgGCShowItemsPickedUp instance
         */
        CMsgGCShowItemsPickedUp.create = function create(properties) {
            return new CMsgGCShowItemsPickedUp(properties);
        };
    
        /**
         * Encodes the specified CMsgGCShowItemsPickedUp message. Does not implicitly {@link CMsgGCShowItemsPickedUp.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {ICMsgGCShowItemsPickedUp} message CMsgGCShowItemsPickedUp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCShowItemsPickedUp.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.player_steamid != null && Object.hasOwnProperty.call(message, "player_steamid"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.player_steamid);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCShowItemsPickedUp message, length delimited. Does not implicitly {@link CMsgGCShowItemsPickedUp.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {ICMsgGCShowItemsPickedUp} message CMsgGCShowItemsPickedUp message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCShowItemsPickedUp.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCShowItemsPickedUp message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCShowItemsPickedUp} CMsgGCShowItemsPickedUp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCShowItemsPickedUp.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCShowItemsPickedUp();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.player_steamid = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCShowItemsPickedUp message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCShowItemsPickedUp} CMsgGCShowItemsPickedUp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCShowItemsPickedUp.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCShowItemsPickedUp message.
         * @function verify
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCShowItemsPickedUp.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.player_steamid != null && message.hasOwnProperty("player_steamid"))
                if (!$util.isInteger(message.player_steamid) && !(message.player_steamid && $util.isInteger(message.player_steamid.low) && $util.isInteger(message.player_steamid.high)))
                    return "player_steamid: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCShowItemsPickedUp message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCShowItemsPickedUp} CMsgGCShowItemsPickedUp
         */
        CMsgGCShowItemsPickedUp.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCShowItemsPickedUp)
                return object;
            var message = new $root.CMsgGCShowItemsPickedUp();
            if (object.player_steamid != null)
                if ($util.Long)
                    (message.player_steamid = $util.Long.fromValue(object.player_steamid)).unsigned = false;
                else if (typeof object.player_steamid === "string")
                    message.player_steamid = parseInt(object.player_steamid, 10);
                else if (typeof object.player_steamid === "number")
                    message.player_steamid = object.player_steamid;
                else if (typeof object.player_steamid === "object")
                    message.player_steamid = new $util.LongBits(object.player_steamid.low >>> 0, object.player_steamid.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCShowItemsPickedUp message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {CMsgGCShowItemsPickedUp} message CMsgGCShowItemsPickedUp
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCShowItemsPickedUp.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.player_steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.player_steamid = options.longs === String ? "0" : 0;
            if (message.player_steamid != null && message.hasOwnProperty("player_steamid"))
                if (typeof message.player_steamid === "number")
                    object.player_steamid = options.longs === String ? String(message.player_steamid) : message.player_steamid;
                else
                    object.player_steamid = options.longs === String ? $util.Long.prototype.toString.call(message.player_steamid) : options.longs === Number ? new $util.LongBits(message.player_steamid.low >>> 0, message.player_steamid.high >>> 0).toNumber() : message.player_steamid;
            return object;
        };
    
        /**
         * Converts this CMsgGCShowItemsPickedUp to JSON.
         * @function toJSON
         * @memberof CMsgGCShowItemsPickedUp
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCShowItemsPickedUp.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCShowItemsPickedUp
         * @function getTypeUrl
         * @memberof CMsgGCShowItemsPickedUp
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCShowItemsPickedUp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCShowItemsPickedUp";
        };
    
        return CMsgGCShowItemsPickedUp;
    })();
    
    $root.CMsgGCIncrementKillCountResponse = (function() {
    
        /**
         * Properties of a CMsgGCIncrementKillCountResponse.
         * @exports ICMsgGCIncrementKillCountResponse
         * @interface ICMsgGCIncrementKillCountResponse
         * @property {number|null} [killer_account_id] CMsgGCIncrementKillCountResponse killer_account_id
         * @property {number|null} [num_kills] CMsgGCIncrementKillCountResponse num_kills
         * @property {number|null} [item_def] CMsgGCIncrementKillCountResponse item_def
         * @property {number|null} [level_type] CMsgGCIncrementKillCountResponse level_type
         */
    
        /**
         * Constructs a new CMsgGCIncrementKillCountResponse.
         * @exports CMsgGCIncrementKillCountResponse
         * @classdesc Represents a CMsgGCIncrementKillCountResponse.
         * @implements ICMsgGCIncrementKillCountResponse
         * @constructor
         * @param {ICMsgGCIncrementKillCountResponse=} [properties] Properties to set
         */
        function CMsgGCIncrementKillCountResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCIncrementKillCountResponse killer_account_id.
         * @member {number} killer_account_id
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         */
        CMsgGCIncrementKillCountResponse.prototype.killer_account_id = 0;
    
        /**
         * CMsgGCIncrementKillCountResponse num_kills.
         * @member {number} num_kills
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         */
        CMsgGCIncrementKillCountResponse.prototype.num_kills = 0;
    
        /**
         * CMsgGCIncrementKillCountResponse item_def.
         * @member {number} item_def
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         */
        CMsgGCIncrementKillCountResponse.prototype.item_def = 0;
    
        /**
         * CMsgGCIncrementKillCountResponse level_type.
         * @member {number} level_type
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         */
        CMsgGCIncrementKillCountResponse.prototype.level_type = 0;
    
        /**
         * Creates a new CMsgGCIncrementKillCountResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {ICMsgGCIncrementKillCountResponse=} [properties] Properties to set
         * @returns {CMsgGCIncrementKillCountResponse} CMsgGCIncrementKillCountResponse instance
         */
        CMsgGCIncrementKillCountResponse.create = function create(properties) {
            return new CMsgGCIncrementKillCountResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCIncrementKillCountResponse message. Does not implicitly {@link CMsgGCIncrementKillCountResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {ICMsgGCIncrementKillCountResponse} message CMsgGCIncrementKillCountResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCIncrementKillCountResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.killer_account_id != null && Object.hasOwnProperty.call(message, "killer_account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.killer_account_id);
            if (message.num_kills != null && Object.hasOwnProperty.call(message, "num_kills"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.num_kills);
            if (message.item_def != null && Object.hasOwnProperty.call(message, "item_def"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.item_def);
            if (message.level_type != null && Object.hasOwnProperty.call(message, "level_type"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.level_type);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCIncrementKillCountResponse message, length delimited. Does not implicitly {@link CMsgGCIncrementKillCountResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {ICMsgGCIncrementKillCountResponse} message CMsgGCIncrementKillCountResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCIncrementKillCountResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCIncrementKillCountResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCIncrementKillCountResponse} CMsgGCIncrementKillCountResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCIncrementKillCountResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCIncrementKillCountResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.killer_account_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.num_kills = reader.uint32();
                        break;
                    }
                case 3: {
                        message.item_def = reader.uint32();
                        break;
                    }
                case 4: {
                        message.level_type = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCIncrementKillCountResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCIncrementKillCountResponse} CMsgGCIncrementKillCountResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCIncrementKillCountResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCIncrementKillCountResponse message.
         * @function verify
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCIncrementKillCountResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.killer_account_id != null && message.hasOwnProperty("killer_account_id"))
                if (!$util.isInteger(message.killer_account_id))
                    return "killer_account_id: integer expected";
            if (message.num_kills != null && message.hasOwnProperty("num_kills"))
                if (!$util.isInteger(message.num_kills))
                    return "num_kills: integer expected";
            if (message.item_def != null && message.hasOwnProperty("item_def"))
                if (!$util.isInteger(message.item_def))
                    return "item_def: integer expected";
            if (message.level_type != null && message.hasOwnProperty("level_type"))
                if (!$util.isInteger(message.level_type))
                    return "level_type: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCIncrementKillCountResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCIncrementKillCountResponse} CMsgGCIncrementKillCountResponse
         */
        CMsgGCIncrementKillCountResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCIncrementKillCountResponse)
                return object;
            var message = new $root.CMsgGCIncrementKillCountResponse();
            if (object.killer_account_id != null)
                message.killer_account_id = object.killer_account_id >>> 0;
            if (object.num_kills != null)
                message.num_kills = object.num_kills >>> 0;
            if (object.item_def != null)
                message.item_def = object.item_def >>> 0;
            if (object.level_type != null)
                message.level_type = object.level_type >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCIncrementKillCountResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {CMsgGCIncrementKillCountResponse} message CMsgGCIncrementKillCountResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCIncrementKillCountResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.killer_account_id = 0;
                object.num_kills = 0;
                object.item_def = 0;
                object.level_type = 0;
            }
            if (message.killer_account_id != null && message.hasOwnProperty("killer_account_id"))
                object.killer_account_id = message.killer_account_id;
            if (message.num_kills != null && message.hasOwnProperty("num_kills"))
                object.num_kills = message.num_kills;
            if (message.item_def != null && message.hasOwnProperty("item_def"))
                object.item_def = message.item_def;
            if (message.level_type != null && message.hasOwnProperty("level_type"))
                object.level_type = message.level_type;
            return object;
        };
    
        /**
         * Converts this CMsgGCIncrementKillCountResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCIncrementKillCountResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCIncrementKillCountResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCIncrementKillCountResponse
         * @function getTypeUrl
         * @memberof CMsgGCIncrementKillCountResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCIncrementKillCountResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCIncrementKillCountResponse";
        };
    
        return CMsgGCIncrementKillCountResponse;
    })();
    
    $root.CSOEconItemDropRateBonus = (function() {
    
        /**
         * Properties of a CSOEconItemDropRateBonus.
         * @exports ICSOEconItemDropRateBonus
         * @interface ICSOEconItemDropRateBonus
         * @property {number|null} [account_id] CSOEconItemDropRateBonus account_id
         * @property {number|null} [expiration_date] CSOEconItemDropRateBonus expiration_date
         * @property {number|null} [bonus] CSOEconItemDropRateBonus bonus
         * @property {number|null} [bonus_count] CSOEconItemDropRateBonus bonus_count
         * @property {number|Long|null} [item_id] CSOEconItemDropRateBonus item_id
         * @property {number|null} [def_index] CSOEconItemDropRateBonus def_index
         */
    
        /**
         * Constructs a new CSOEconItemDropRateBonus.
         * @exports CSOEconItemDropRateBonus
         * @classdesc Represents a CSOEconItemDropRateBonus.
         * @implements ICSOEconItemDropRateBonus
         * @constructor
         * @param {ICSOEconItemDropRateBonus=} [properties] Properties to set
         */
        function CSOEconItemDropRateBonus(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemDropRateBonus account_id.
         * @member {number} account_id
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.account_id = 0;
    
        /**
         * CSOEconItemDropRateBonus expiration_date.
         * @member {number} expiration_date
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.expiration_date = 0;
    
        /**
         * CSOEconItemDropRateBonus bonus.
         * @member {number} bonus
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.bonus = 0;
    
        /**
         * CSOEconItemDropRateBonus bonus_count.
         * @member {number} bonus_count
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.bonus_count = 0;
    
        /**
         * CSOEconItemDropRateBonus item_id.
         * @member {number|Long} item_id
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconItemDropRateBonus def_index.
         * @member {number} def_index
         * @memberof CSOEconItemDropRateBonus
         * @instance
         */
        CSOEconItemDropRateBonus.prototype.def_index = 0;
    
        /**
         * Creates a new CSOEconItemDropRateBonus instance using the specified properties.
         * @function create
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {ICSOEconItemDropRateBonus=} [properties] Properties to set
         * @returns {CSOEconItemDropRateBonus} CSOEconItemDropRateBonus instance
         */
        CSOEconItemDropRateBonus.create = function create(properties) {
            return new CSOEconItemDropRateBonus(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemDropRateBonus message. Does not implicitly {@link CSOEconItemDropRateBonus.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {ICSOEconItemDropRateBonus} message CSOEconItemDropRateBonus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemDropRateBonus.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.account_id);
            if (message.expiration_date != null && Object.hasOwnProperty.call(message, "expiration_date"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.expiration_date);
            if (message.bonus != null && Object.hasOwnProperty.call(message, "bonus"))
                writer.uint32(/* id 3, wireType 5 =*/29).float(message.bonus);
            if (message.bonus_count != null && Object.hasOwnProperty.call(message, "bonus_count"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.bonus_count);
            if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.item_id);
            if (message.def_index != null && Object.hasOwnProperty.call(message, "def_index"))
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.def_index);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemDropRateBonus message, length delimited. Does not implicitly {@link CSOEconItemDropRateBonus.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {ICSOEconItemDropRateBonus} message CSOEconItemDropRateBonus message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemDropRateBonus.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemDropRateBonus message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemDropRateBonus} CSOEconItemDropRateBonus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemDropRateBonus.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemDropRateBonus();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.account_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.expiration_date = reader.fixed32();
                        break;
                    }
                case 3: {
                        message.bonus = reader.float();
                        break;
                    }
                case 4: {
                        message.bonus_count = reader.uint32();
                        break;
                    }
                case 5: {
                        message.item_id = reader.uint64();
                        break;
                    }
                case 6: {
                        message.def_index = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemDropRateBonus message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemDropRateBonus} CSOEconItemDropRateBonus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemDropRateBonus.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemDropRateBonus message.
         * @function verify
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemDropRateBonus.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                if (!$util.isInteger(message.account_id))
                    return "account_id: integer expected";
            if (message.expiration_date != null && message.hasOwnProperty("expiration_date"))
                if (!$util.isInteger(message.expiration_date))
                    return "expiration_date: integer expected";
            if (message.bonus != null && message.hasOwnProperty("bonus"))
                if (typeof message.bonus !== "number")
                    return "bonus: number expected";
            if (message.bonus_count != null && message.hasOwnProperty("bonus_count"))
                if (!$util.isInteger(message.bonus_count))
                    return "bonus_count: integer expected";
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                    return "item_id: integer|Long expected";
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                if (!$util.isInteger(message.def_index))
                    return "def_index: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemDropRateBonus message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemDropRateBonus} CSOEconItemDropRateBonus
         */
        CSOEconItemDropRateBonus.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemDropRateBonus)
                return object;
            var message = new $root.CSOEconItemDropRateBonus();
            if (object.account_id != null)
                message.account_id = object.account_id >>> 0;
            if (object.expiration_date != null)
                message.expiration_date = object.expiration_date >>> 0;
            if (object.bonus != null)
                message.bonus = Number(object.bonus);
            if (object.bonus_count != null)
                message.bonus_count = object.bonus_count >>> 0;
            if (object.item_id != null)
                if ($util.Long)
                    (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                else if (typeof object.item_id === "string")
                    message.item_id = parseInt(object.item_id, 10);
                else if (typeof object.item_id === "number")
                    message.item_id = object.item_id;
                else if (typeof object.item_id === "object")
                    message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
            if (object.def_index != null)
                message.def_index = object.def_index >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemDropRateBonus message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {CSOEconItemDropRateBonus} message CSOEconItemDropRateBonus
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemDropRateBonus.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_id = 0;
                object.expiration_date = 0;
                object.bonus = 0;
                object.bonus_count = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_id = options.longs === String ? "0" : 0;
                object.def_index = 0;
            }
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                object.account_id = message.account_id;
            if (message.expiration_date != null && message.hasOwnProperty("expiration_date"))
                object.expiration_date = message.expiration_date;
            if (message.bonus != null && message.hasOwnProperty("bonus"))
                object.bonus = options.json && !isFinite(message.bonus) ? String(message.bonus) : message.bonus;
            if (message.bonus_count != null && message.hasOwnProperty("bonus_count"))
                object.bonus_count = message.bonus_count;
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (typeof message.item_id === "number")
                    object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                else
                    object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
            if (message.def_index != null && message.hasOwnProperty("def_index"))
                object.def_index = message.def_index;
            return object;
        };
    
        /**
         * Converts this CSOEconItemDropRateBonus to JSON.
         * @function toJSON
         * @memberof CSOEconItemDropRateBonus
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemDropRateBonus.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemDropRateBonus
         * @function getTypeUrl
         * @memberof CSOEconItemDropRateBonus
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemDropRateBonus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemDropRateBonus";
        };
    
        return CSOEconItemDropRateBonus;
    })();
    
    $root.CSOEconItemLeagueViewPass = (function() {
    
        /**
         * Properties of a CSOEconItemLeagueViewPass.
         * @exports ICSOEconItemLeagueViewPass
         * @interface ICSOEconItemLeagueViewPass
         * @property {number|null} [account_id] CSOEconItemLeagueViewPass account_id
         * @property {number|null} [league_id] CSOEconItemLeagueViewPass league_id
         * @property {number|null} [admin] CSOEconItemLeagueViewPass admin
         * @property {number|null} [itemindex] CSOEconItemLeagueViewPass itemindex
         */
    
        /**
         * Constructs a new CSOEconItemLeagueViewPass.
         * @exports CSOEconItemLeagueViewPass
         * @classdesc Represents a CSOEconItemLeagueViewPass.
         * @implements ICSOEconItemLeagueViewPass
         * @constructor
         * @param {ICSOEconItemLeagueViewPass=} [properties] Properties to set
         */
        function CSOEconItemLeagueViewPass(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemLeagueViewPass account_id.
         * @member {number} account_id
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         */
        CSOEconItemLeagueViewPass.prototype.account_id = 0;
    
        /**
         * CSOEconItemLeagueViewPass league_id.
         * @member {number} league_id
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         */
        CSOEconItemLeagueViewPass.prototype.league_id = 0;
    
        /**
         * CSOEconItemLeagueViewPass admin.
         * @member {number} admin
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         */
        CSOEconItemLeagueViewPass.prototype.admin = 0;
    
        /**
         * CSOEconItemLeagueViewPass itemindex.
         * @member {number} itemindex
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         */
        CSOEconItemLeagueViewPass.prototype.itemindex = 0;
    
        /**
         * Creates a new CSOEconItemLeagueViewPass instance using the specified properties.
         * @function create
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {ICSOEconItemLeagueViewPass=} [properties] Properties to set
         * @returns {CSOEconItemLeagueViewPass} CSOEconItemLeagueViewPass instance
         */
        CSOEconItemLeagueViewPass.create = function create(properties) {
            return new CSOEconItemLeagueViewPass(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemLeagueViewPass message. Does not implicitly {@link CSOEconItemLeagueViewPass.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {ICSOEconItemLeagueViewPass} message CSOEconItemLeagueViewPass message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemLeagueViewPass.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.account_id);
            if (message.league_id != null && Object.hasOwnProperty.call(message, "league_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.league_id);
            if (message.admin != null && Object.hasOwnProperty.call(message, "admin"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.admin);
            if (message.itemindex != null && Object.hasOwnProperty.call(message, "itemindex"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.itemindex);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemLeagueViewPass message, length delimited. Does not implicitly {@link CSOEconItemLeagueViewPass.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {ICSOEconItemLeagueViewPass} message CSOEconItemLeagueViewPass message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemLeagueViewPass.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemLeagueViewPass message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemLeagueViewPass} CSOEconItemLeagueViewPass
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemLeagueViewPass.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemLeagueViewPass();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.account_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.league_id = reader.uint32();
                        break;
                    }
                case 3: {
                        message.admin = reader.uint32();
                        break;
                    }
                case 4: {
                        message.itemindex = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemLeagueViewPass message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemLeagueViewPass} CSOEconItemLeagueViewPass
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemLeagueViewPass.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemLeagueViewPass message.
         * @function verify
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemLeagueViewPass.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                if (!$util.isInteger(message.account_id))
                    return "account_id: integer expected";
            if (message.league_id != null && message.hasOwnProperty("league_id"))
                if (!$util.isInteger(message.league_id))
                    return "league_id: integer expected";
            if (message.admin != null && message.hasOwnProperty("admin"))
                if (!$util.isInteger(message.admin))
                    return "admin: integer expected";
            if (message.itemindex != null && message.hasOwnProperty("itemindex"))
                if (!$util.isInteger(message.itemindex))
                    return "itemindex: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemLeagueViewPass message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemLeagueViewPass} CSOEconItemLeagueViewPass
         */
        CSOEconItemLeagueViewPass.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemLeagueViewPass)
                return object;
            var message = new $root.CSOEconItemLeagueViewPass();
            if (object.account_id != null)
                message.account_id = object.account_id >>> 0;
            if (object.league_id != null)
                message.league_id = object.league_id >>> 0;
            if (object.admin != null)
                message.admin = object.admin >>> 0;
            if (object.itemindex != null)
                message.itemindex = object.itemindex >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemLeagueViewPass message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {CSOEconItemLeagueViewPass} message CSOEconItemLeagueViewPass
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemLeagueViewPass.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_id = 0;
                object.league_id = 0;
                object.admin = 0;
                object.itemindex = 0;
            }
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                object.account_id = message.account_id;
            if (message.league_id != null && message.hasOwnProperty("league_id"))
                object.league_id = message.league_id;
            if (message.admin != null && message.hasOwnProperty("admin"))
                object.admin = message.admin;
            if (message.itemindex != null && message.hasOwnProperty("itemindex"))
                object.itemindex = message.itemindex;
            return object;
        };
    
        /**
         * Converts this CSOEconItemLeagueViewPass to JSON.
         * @function toJSON
         * @memberof CSOEconItemLeagueViewPass
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemLeagueViewPass.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemLeagueViewPass
         * @function getTypeUrl
         * @memberof CSOEconItemLeagueViewPass
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemLeagueViewPass.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemLeagueViewPass";
        };
    
        return CSOEconItemLeagueViewPass;
    })();
    
    $root.CSOEconItemEventTicket = (function() {
    
        /**
         * Properties of a CSOEconItemEventTicket.
         * @exports ICSOEconItemEventTicket
         * @interface ICSOEconItemEventTicket
         * @property {number|null} [account_id] CSOEconItemEventTicket account_id
         * @property {number|null} [event_id] CSOEconItemEventTicket event_id
         * @property {number|Long|null} [item_id] CSOEconItemEventTicket item_id
         */
    
        /**
         * Constructs a new CSOEconItemEventTicket.
         * @exports CSOEconItemEventTicket
         * @classdesc Represents a CSOEconItemEventTicket.
         * @implements ICSOEconItemEventTicket
         * @constructor
         * @param {ICSOEconItemEventTicket=} [properties] Properties to set
         */
        function CSOEconItemEventTicket(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconItemEventTicket account_id.
         * @member {number} account_id
         * @memberof CSOEconItemEventTicket
         * @instance
         */
        CSOEconItemEventTicket.prototype.account_id = 0;
    
        /**
         * CSOEconItemEventTicket event_id.
         * @member {number} event_id
         * @memberof CSOEconItemEventTicket
         * @instance
         */
        CSOEconItemEventTicket.prototype.event_id = 0;
    
        /**
         * CSOEconItemEventTicket item_id.
         * @member {number|Long} item_id
         * @memberof CSOEconItemEventTicket
         * @instance
         */
        CSOEconItemEventTicket.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CSOEconItemEventTicket instance using the specified properties.
         * @function create
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {ICSOEconItemEventTicket=} [properties] Properties to set
         * @returns {CSOEconItemEventTicket} CSOEconItemEventTicket instance
         */
        CSOEconItemEventTicket.create = function create(properties) {
            return new CSOEconItemEventTicket(properties);
        };
    
        /**
         * Encodes the specified CSOEconItemEventTicket message. Does not implicitly {@link CSOEconItemEventTicket.verify|verify} messages.
         * @function encode
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {ICSOEconItemEventTicket} message CSOEconItemEventTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemEventTicket.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.account_id);
            if (message.event_id != null && Object.hasOwnProperty.call(message, "event_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.event_id);
            if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconItemEventTicket message, length delimited. Does not implicitly {@link CSOEconItemEventTicket.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {ICSOEconItemEventTicket} message CSOEconItemEventTicket message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconItemEventTicket.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconItemEventTicket message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconItemEventTicket} CSOEconItemEventTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemEventTicket.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconItemEventTicket();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.account_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.event_id = reader.uint32();
                        break;
                    }
                case 3: {
                        message.item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconItemEventTicket message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconItemEventTicket} CSOEconItemEventTicket
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconItemEventTicket.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconItemEventTicket message.
         * @function verify
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconItemEventTicket.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                if (!$util.isInteger(message.account_id))
                    return "account_id: integer expected";
            if (message.event_id != null && message.hasOwnProperty("event_id"))
                if (!$util.isInteger(message.event_id))
                    return "event_id: integer expected";
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                    return "item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CSOEconItemEventTicket message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconItemEventTicket} CSOEconItemEventTicket
         */
        CSOEconItemEventTicket.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconItemEventTicket)
                return object;
            var message = new $root.CSOEconItemEventTicket();
            if (object.account_id != null)
                message.account_id = object.account_id >>> 0;
            if (object.event_id != null)
                message.event_id = object.event_id >>> 0;
            if (object.item_id != null)
                if ($util.Long)
                    (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                else if (typeof object.item_id === "string")
                    message.item_id = parseInt(object.item_id, 10);
                else if (typeof object.item_id === "number")
                    message.item_id = object.item_id;
                else if (typeof object.item_id === "object")
                    message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconItemEventTicket message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {CSOEconItemEventTicket} message CSOEconItemEventTicket
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconItemEventTicket.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_id = 0;
                object.event_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_id = options.longs === String ? "0" : 0;
            }
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                object.account_id = message.account_id;
            if (message.event_id != null && message.hasOwnProperty("event_id"))
                object.event_id = message.event_id;
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (typeof message.item_id === "number")
                    object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                else
                    object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
            return object;
        };
    
        /**
         * Converts this CSOEconItemEventTicket to JSON.
         * @function toJSON
         * @memberof CSOEconItemEventTicket
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconItemEventTicket.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconItemEventTicket
         * @function getTypeUrl
         * @memberof CSOEconItemEventTicket
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconItemEventTicket.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconItemEventTicket";
        };
    
        return CSOEconItemEventTicket;
    })();
    
    $root.CMsgGCItemPreviewItemBoughtNotification = (function() {
    
        /**
         * Properties of a CMsgGCItemPreviewItemBoughtNotification.
         * @exports ICMsgGCItemPreviewItemBoughtNotification
         * @interface ICMsgGCItemPreviewItemBoughtNotification
         * @property {number|null} [item_def_index] CMsgGCItemPreviewItemBoughtNotification item_def_index
         */
    
        /**
         * Constructs a new CMsgGCItemPreviewItemBoughtNotification.
         * @exports CMsgGCItemPreviewItemBoughtNotification
         * @classdesc Represents a CMsgGCItemPreviewItemBoughtNotification.
         * @implements ICMsgGCItemPreviewItemBoughtNotification
         * @constructor
         * @param {ICMsgGCItemPreviewItemBoughtNotification=} [properties] Properties to set
         */
        function CMsgGCItemPreviewItemBoughtNotification(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCItemPreviewItemBoughtNotification item_def_index.
         * @member {number} item_def_index
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @instance
         */
        CMsgGCItemPreviewItemBoughtNotification.prototype.item_def_index = 0;
    
        /**
         * Creates a new CMsgGCItemPreviewItemBoughtNotification instance using the specified properties.
         * @function create
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {ICMsgGCItemPreviewItemBoughtNotification=} [properties] Properties to set
         * @returns {CMsgGCItemPreviewItemBoughtNotification} CMsgGCItemPreviewItemBoughtNotification instance
         */
        CMsgGCItemPreviewItemBoughtNotification.create = function create(properties) {
            return new CMsgGCItemPreviewItemBoughtNotification(properties);
        };
    
        /**
         * Encodes the specified CMsgGCItemPreviewItemBoughtNotification message. Does not implicitly {@link CMsgGCItemPreviewItemBoughtNotification.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {ICMsgGCItemPreviewItemBoughtNotification} message CMsgGCItemPreviewItemBoughtNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCItemPreviewItemBoughtNotification.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.item_def_index != null && Object.hasOwnProperty.call(message, "item_def_index"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.item_def_index);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCItemPreviewItemBoughtNotification message, length delimited. Does not implicitly {@link CMsgGCItemPreviewItemBoughtNotification.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {ICMsgGCItemPreviewItemBoughtNotification} message CMsgGCItemPreviewItemBoughtNotification message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCItemPreviewItemBoughtNotification.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCItemPreviewItemBoughtNotification message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCItemPreviewItemBoughtNotification} CMsgGCItemPreviewItemBoughtNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCItemPreviewItemBoughtNotification.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCItemPreviewItemBoughtNotification();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.item_def_index = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCItemPreviewItemBoughtNotification message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCItemPreviewItemBoughtNotification} CMsgGCItemPreviewItemBoughtNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCItemPreviewItemBoughtNotification.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCItemPreviewItemBoughtNotification message.
         * @function verify
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCItemPreviewItemBoughtNotification.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.item_def_index != null && message.hasOwnProperty("item_def_index"))
                if (!$util.isInteger(message.item_def_index))
                    return "item_def_index: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCItemPreviewItemBoughtNotification message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCItemPreviewItemBoughtNotification} CMsgGCItemPreviewItemBoughtNotification
         */
        CMsgGCItemPreviewItemBoughtNotification.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCItemPreviewItemBoughtNotification)
                return object;
            var message = new $root.CMsgGCItemPreviewItemBoughtNotification();
            if (object.item_def_index != null)
                message.item_def_index = object.item_def_index >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCItemPreviewItemBoughtNotification message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {CMsgGCItemPreviewItemBoughtNotification} message CMsgGCItemPreviewItemBoughtNotification
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCItemPreviewItemBoughtNotification.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.item_def_index = 0;
            if (message.item_def_index != null && message.hasOwnProperty("item_def_index"))
                object.item_def_index = message.item_def_index;
            return object;
        };
    
        /**
         * Converts this CMsgGCItemPreviewItemBoughtNotification to JSON.
         * @function toJSON
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCItemPreviewItemBoughtNotification.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCItemPreviewItemBoughtNotification
         * @function getTypeUrl
         * @memberof CMsgGCItemPreviewItemBoughtNotification
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCItemPreviewItemBoughtNotification.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCItemPreviewItemBoughtNotification";
        };
    
        return CMsgGCItemPreviewItemBoughtNotification;
    })();
    
    $root.CMsgGCStorePurchaseCancel = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseCancel.
         * @exports ICMsgGCStorePurchaseCancel
         * @interface ICMsgGCStorePurchaseCancel
         * @property {number|Long|null} [txn_id] CMsgGCStorePurchaseCancel txn_id
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseCancel.
         * @exports CMsgGCStorePurchaseCancel
         * @classdesc Represents a CMsgGCStorePurchaseCancel.
         * @implements ICMsgGCStorePurchaseCancel
         * @constructor
         * @param {ICMsgGCStorePurchaseCancel=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseCancel(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseCancel txn_id.
         * @member {number|Long} txn_id
         * @memberof CMsgGCStorePurchaseCancel
         * @instance
         */
        CMsgGCStorePurchaseCancel.prototype.txn_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgGCStorePurchaseCancel instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {ICMsgGCStorePurchaseCancel=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseCancel} CMsgGCStorePurchaseCancel instance
         */
        CMsgGCStorePurchaseCancel.create = function create(properties) {
            return new CMsgGCStorePurchaseCancel(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseCancel message. Does not implicitly {@link CMsgGCStorePurchaseCancel.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {ICMsgGCStorePurchaseCancel} message CMsgGCStorePurchaseCancel message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseCancel.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.txn_id != null && Object.hasOwnProperty.call(message, "txn_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.txn_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseCancel message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseCancel.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {ICMsgGCStorePurchaseCancel} message CMsgGCStorePurchaseCancel message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseCancel.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseCancel message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseCancel} CMsgGCStorePurchaseCancel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseCancel.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseCancel();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.txn_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseCancel message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseCancel} CMsgGCStorePurchaseCancel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseCancel.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseCancel message.
         * @function verify
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseCancel.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.txn_id != null && message.hasOwnProperty("txn_id"))
                if (!$util.isInteger(message.txn_id) && !(message.txn_id && $util.isInteger(message.txn_id.low) && $util.isInteger(message.txn_id.high)))
                    return "txn_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseCancel message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseCancel} CMsgGCStorePurchaseCancel
         */
        CMsgGCStorePurchaseCancel.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseCancel)
                return object;
            var message = new $root.CMsgGCStorePurchaseCancel();
            if (object.txn_id != null)
                if ($util.Long)
                    (message.txn_id = $util.Long.fromValue(object.txn_id)).unsigned = true;
                else if (typeof object.txn_id === "string")
                    message.txn_id = parseInt(object.txn_id, 10);
                else if (typeof object.txn_id === "number")
                    message.txn_id = object.txn_id;
                else if (typeof object.txn_id === "object")
                    message.txn_id = new $util.LongBits(object.txn_id.low >>> 0, object.txn_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseCancel message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {CMsgGCStorePurchaseCancel} message CMsgGCStorePurchaseCancel
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseCancel.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.txn_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.txn_id = options.longs === String ? "0" : 0;
            if (message.txn_id != null && message.hasOwnProperty("txn_id"))
                if (typeof message.txn_id === "number")
                    object.txn_id = options.longs === String ? String(message.txn_id) : message.txn_id;
                else
                    object.txn_id = options.longs === String ? $util.Long.prototype.toString.call(message.txn_id) : options.longs === Number ? new $util.LongBits(message.txn_id.low >>> 0, message.txn_id.high >>> 0).toNumber(true) : message.txn_id;
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseCancel to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseCancel
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseCancel.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseCancel
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseCancel
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseCancel.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseCancel";
        };
    
        return CMsgGCStorePurchaseCancel;
    })();
    
    $root.CMsgGCStorePurchaseCancelResponse = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseCancelResponse.
         * @exports ICMsgGCStorePurchaseCancelResponse
         * @interface ICMsgGCStorePurchaseCancelResponse
         * @property {number|null} [result] CMsgGCStorePurchaseCancelResponse result
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseCancelResponse.
         * @exports CMsgGCStorePurchaseCancelResponse
         * @classdesc Represents a CMsgGCStorePurchaseCancelResponse.
         * @implements ICMsgGCStorePurchaseCancelResponse
         * @constructor
         * @param {ICMsgGCStorePurchaseCancelResponse=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseCancelResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseCancelResponse result.
         * @member {number} result
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @instance
         */
        CMsgGCStorePurchaseCancelResponse.prototype.result = 0;
    
        /**
         * Creates a new CMsgGCStorePurchaseCancelResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {ICMsgGCStorePurchaseCancelResponse=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseCancelResponse} CMsgGCStorePurchaseCancelResponse instance
         */
        CMsgGCStorePurchaseCancelResponse.create = function create(properties) {
            return new CMsgGCStorePurchaseCancelResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseCancelResponse message. Does not implicitly {@link CMsgGCStorePurchaseCancelResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {ICMsgGCStorePurchaseCancelResponse} message CMsgGCStorePurchaseCancelResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseCancelResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseCancelResponse message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseCancelResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {ICMsgGCStorePurchaseCancelResponse} message CMsgGCStorePurchaseCancelResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseCancelResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseCancelResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseCancelResponse} CMsgGCStorePurchaseCancelResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseCancelResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseCancelResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.result = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseCancelResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseCancelResponse} CMsgGCStorePurchaseCancelResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseCancelResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseCancelResponse message.
         * @function verify
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseCancelResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseCancelResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseCancelResponse} CMsgGCStorePurchaseCancelResponse
         */
        CMsgGCStorePurchaseCancelResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseCancelResponse)
                return object;
            var message = new $root.CMsgGCStorePurchaseCancelResponse();
            if (object.result != null)
                message.result = object.result >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseCancelResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {CMsgGCStorePurchaseCancelResponse} message CMsgGCStorePurchaseCancelResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseCancelResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.result = 0;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseCancelResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseCancelResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseCancelResponse
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseCancelResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseCancelResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseCancelResponse";
        };
    
        return CMsgGCStorePurchaseCancelResponse;
    })();
    
    $root.CMsgGCStorePurchaseFinalize = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseFinalize.
         * @exports ICMsgGCStorePurchaseFinalize
         * @interface ICMsgGCStorePurchaseFinalize
         * @property {number|Long|null} [txn_id] CMsgGCStorePurchaseFinalize txn_id
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseFinalize.
         * @exports CMsgGCStorePurchaseFinalize
         * @classdesc Represents a CMsgGCStorePurchaseFinalize.
         * @implements ICMsgGCStorePurchaseFinalize
         * @constructor
         * @param {ICMsgGCStorePurchaseFinalize=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseFinalize(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseFinalize txn_id.
         * @member {number|Long} txn_id
         * @memberof CMsgGCStorePurchaseFinalize
         * @instance
         */
        CMsgGCStorePurchaseFinalize.prototype.txn_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgGCStorePurchaseFinalize instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {ICMsgGCStorePurchaseFinalize=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseFinalize} CMsgGCStorePurchaseFinalize instance
         */
        CMsgGCStorePurchaseFinalize.create = function create(properties) {
            return new CMsgGCStorePurchaseFinalize(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseFinalize message. Does not implicitly {@link CMsgGCStorePurchaseFinalize.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {ICMsgGCStorePurchaseFinalize} message CMsgGCStorePurchaseFinalize message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseFinalize.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.txn_id != null && Object.hasOwnProperty.call(message, "txn_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.txn_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseFinalize message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseFinalize.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {ICMsgGCStorePurchaseFinalize} message CMsgGCStorePurchaseFinalize message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseFinalize.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseFinalize message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseFinalize} CMsgGCStorePurchaseFinalize
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseFinalize.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseFinalize();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.txn_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseFinalize message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseFinalize} CMsgGCStorePurchaseFinalize
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseFinalize.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseFinalize message.
         * @function verify
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseFinalize.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.txn_id != null && message.hasOwnProperty("txn_id"))
                if (!$util.isInteger(message.txn_id) && !(message.txn_id && $util.isInteger(message.txn_id.low) && $util.isInteger(message.txn_id.high)))
                    return "txn_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseFinalize message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseFinalize} CMsgGCStorePurchaseFinalize
         */
        CMsgGCStorePurchaseFinalize.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseFinalize)
                return object;
            var message = new $root.CMsgGCStorePurchaseFinalize();
            if (object.txn_id != null)
                if ($util.Long)
                    (message.txn_id = $util.Long.fromValue(object.txn_id)).unsigned = true;
                else if (typeof object.txn_id === "string")
                    message.txn_id = parseInt(object.txn_id, 10);
                else if (typeof object.txn_id === "number")
                    message.txn_id = object.txn_id;
                else if (typeof object.txn_id === "object")
                    message.txn_id = new $util.LongBits(object.txn_id.low >>> 0, object.txn_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseFinalize message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {CMsgGCStorePurchaseFinalize} message CMsgGCStorePurchaseFinalize
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseFinalize.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.txn_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.txn_id = options.longs === String ? "0" : 0;
            if (message.txn_id != null && message.hasOwnProperty("txn_id"))
                if (typeof message.txn_id === "number")
                    object.txn_id = options.longs === String ? String(message.txn_id) : message.txn_id;
                else
                    object.txn_id = options.longs === String ? $util.Long.prototype.toString.call(message.txn_id) : options.longs === Number ? new $util.LongBits(message.txn_id.low >>> 0, message.txn_id.high >>> 0).toNumber(true) : message.txn_id;
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseFinalize to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseFinalize
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseFinalize.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseFinalize
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseFinalize
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseFinalize.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseFinalize";
        };
    
        return CMsgGCStorePurchaseFinalize;
    })();
    
    $root.CMsgGCStorePurchaseFinalizeResponse = (function() {
    
        /**
         * Properties of a CMsgGCStorePurchaseFinalizeResponse.
         * @exports ICMsgGCStorePurchaseFinalizeResponse
         * @interface ICMsgGCStorePurchaseFinalizeResponse
         * @property {number|null} [result] CMsgGCStorePurchaseFinalizeResponse result
         * @property {Array.<number|Long>|null} [item_ids] CMsgGCStorePurchaseFinalizeResponse item_ids
         */
    
        /**
         * Constructs a new CMsgGCStorePurchaseFinalizeResponse.
         * @exports CMsgGCStorePurchaseFinalizeResponse
         * @classdesc Represents a CMsgGCStorePurchaseFinalizeResponse.
         * @implements ICMsgGCStorePurchaseFinalizeResponse
         * @constructor
         * @param {ICMsgGCStorePurchaseFinalizeResponse=} [properties] Properties to set
         */
        function CMsgGCStorePurchaseFinalizeResponse(properties) {
            this.item_ids = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCStorePurchaseFinalizeResponse result.
         * @member {number} result
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @instance
         */
        CMsgGCStorePurchaseFinalizeResponse.prototype.result = 0;
    
        /**
         * CMsgGCStorePurchaseFinalizeResponse item_ids.
         * @member {Array.<number|Long>} item_ids
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @instance
         */
        CMsgGCStorePurchaseFinalizeResponse.prototype.item_ids = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCStorePurchaseFinalizeResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {ICMsgGCStorePurchaseFinalizeResponse=} [properties] Properties to set
         * @returns {CMsgGCStorePurchaseFinalizeResponse} CMsgGCStorePurchaseFinalizeResponse instance
         */
        CMsgGCStorePurchaseFinalizeResponse.create = function create(properties) {
            return new CMsgGCStorePurchaseFinalizeResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseFinalizeResponse message. Does not implicitly {@link CMsgGCStorePurchaseFinalizeResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {ICMsgGCStorePurchaseFinalizeResponse} message CMsgGCStorePurchaseFinalizeResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseFinalizeResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
            if (message.item_ids != null && message.item_ids.length)
                for (var i = 0; i < message.item_ids.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.item_ids[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCStorePurchaseFinalizeResponse message, length delimited. Does not implicitly {@link CMsgGCStorePurchaseFinalizeResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {ICMsgGCStorePurchaseFinalizeResponse} message CMsgGCStorePurchaseFinalizeResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCStorePurchaseFinalizeResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseFinalizeResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCStorePurchaseFinalizeResponse} CMsgGCStorePurchaseFinalizeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseFinalizeResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCStorePurchaseFinalizeResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.result = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.item_ids && message.item_ids.length))
                            message.item_ids = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.item_ids.push(reader.uint64());
                        } else
                            message.item_ids.push(reader.uint64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCStorePurchaseFinalizeResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCStorePurchaseFinalizeResponse} CMsgGCStorePurchaseFinalizeResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCStorePurchaseFinalizeResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCStorePurchaseFinalizeResponse message.
         * @function verify
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCStorePurchaseFinalizeResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.result != null && message.hasOwnProperty("result"))
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
            if (message.item_ids != null && message.hasOwnProperty("item_ids")) {
                if (!Array.isArray(message.item_ids))
                    return "item_ids: array expected";
                for (var i = 0; i < message.item_ids.length; ++i)
                    if (!$util.isInteger(message.item_ids[i]) && !(message.item_ids[i] && $util.isInteger(message.item_ids[i].low) && $util.isInteger(message.item_ids[i].high)))
                        return "item_ids: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCStorePurchaseFinalizeResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCStorePurchaseFinalizeResponse} CMsgGCStorePurchaseFinalizeResponse
         */
        CMsgGCStorePurchaseFinalizeResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCStorePurchaseFinalizeResponse)
                return object;
            var message = new $root.CMsgGCStorePurchaseFinalizeResponse();
            if (object.result != null)
                message.result = object.result >>> 0;
            if (object.item_ids) {
                if (!Array.isArray(object.item_ids))
                    throw TypeError(".CMsgGCStorePurchaseFinalizeResponse.item_ids: array expected");
                message.item_ids = [];
                for (var i = 0; i < object.item_ids.length; ++i)
                    if ($util.Long)
                        (message.item_ids[i] = $util.Long.fromValue(object.item_ids[i])).unsigned = true;
                    else if (typeof object.item_ids[i] === "string")
                        message.item_ids[i] = parseInt(object.item_ids[i], 10);
                    else if (typeof object.item_ids[i] === "number")
                        message.item_ids[i] = object.item_ids[i];
                    else if (typeof object.item_ids[i] === "object")
                        message.item_ids[i] = new $util.LongBits(object.item_ids[i].low >>> 0, object.item_ids[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCStorePurchaseFinalizeResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {CMsgGCStorePurchaseFinalizeResponse} message CMsgGCStorePurchaseFinalizeResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCStorePurchaseFinalizeResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.item_ids = [];
            if (options.defaults)
                object.result = 0;
            if (message.result != null && message.hasOwnProperty("result"))
                object.result = message.result;
            if (message.item_ids && message.item_ids.length) {
                object.item_ids = [];
                for (var j = 0; j < message.item_ids.length; ++j)
                    if (typeof message.item_ids[j] === "number")
                        object.item_ids[j] = options.longs === String ? String(message.item_ids[j]) : message.item_ids[j];
                    else
                        object.item_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.item_ids[j]) : options.longs === Number ? new $util.LongBits(message.item_ids[j].low >>> 0, message.item_ids[j].high >>> 0).toNumber(true) : message.item_ids[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCStorePurchaseFinalizeResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCStorePurchaseFinalizeResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCStorePurchaseFinalizeResponse
         * @function getTypeUrl
         * @memberof CMsgGCStorePurchaseFinalizeResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCStorePurchaseFinalizeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCStorePurchaseFinalizeResponse";
        };
    
        return CMsgGCStorePurchaseFinalizeResponse;
    })();
    
    $root.CMsgGCBannedWordListRequest = (function() {
    
        /**
         * Properties of a CMsgGCBannedWordListRequest.
         * @exports ICMsgGCBannedWordListRequest
         * @interface ICMsgGCBannedWordListRequest
         * @property {number|null} [ban_list_group_id] CMsgGCBannedWordListRequest ban_list_group_id
         * @property {number|null} [word_id] CMsgGCBannedWordListRequest word_id
         */
    
        /**
         * Constructs a new CMsgGCBannedWordListRequest.
         * @exports CMsgGCBannedWordListRequest
         * @classdesc Represents a CMsgGCBannedWordListRequest.
         * @implements ICMsgGCBannedWordListRequest
         * @constructor
         * @param {ICMsgGCBannedWordListRequest=} [properties] Properties to set
         */
        function CMsgGCBannedWordListRequest(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCBannedWordListRequest ban_list_group_id.
         * @member {number} ban_list_group_id
         * @memberof CMsgGCBannedWordListRequest
         * @instance
         */
        CMsgGCBannedWordListRequest.prototype.ban_list_group_id = 0;
    
        /**
         * CMsgGCBannedWordListRequest word_id.
         * @member {number} word_id
         * @memberof CMsgGCBannedWordListRequest
         * @instance
         */
        CMsgGCBannedWordListRequest.prototype.word_id = 0;
    
        /**
         * Creates a new CMsgGCBannedWordListRequest instance using the specified properties.
         * @function create
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {ICMsgGCBannedWordListRequest=} [properties] Properties to set
         * @returns {CMsgGCBannedWordListRequest} CMsgGCBannedWordListRequest instance
         */
        CMsgGCBannedWordListRequest.create = function create(properties) {
            return new CMsgGCBannedWordListRequest(properties);
        };
    
        /**
         * Encodes the specified CMsgGCBannedWordListRequest message. Does not implicitly {@link CMsgGCBannedWordListRequest.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {ICMsgGCBannedWordListRequest} message CMsgGCBannedWordListRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWordListRequest.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ban_list_group_id != null && Object.hasOwnProperty.call(message, "ban_list_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ban_list_group_id);
            if (message.word_id != null && Object.hasOwnProperty.call(message, "word_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.word_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCBannedWordListRequest message, length delimited. Does not implicitly {@link CMsgGCBannedWordListRequest.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {ICMsgGCBannedWordListRequest} message CMsgGCBannedWordListRequest message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWordListRequest.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCBannedWordListRequest message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCBannedWordListRequest} CMsgGCBannedWordListRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWordListRequest.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCBannedWordListRequest();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.ban_list_group_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.word_id = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCBannedWordListRequest message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCBannedWordListRequest} CMsgGCBannedWordListRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWordListRequest.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCBannedWordListRequest message.
         * @function verify
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCBannedWordListRequest.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ban_list_group_id != null && message.hasOwnProperty("ban_list_group_id"))
                if (!$util.isInteger(message.ban_list_group_id))
                    return "ban_list_group_id: integer expected";
            if (message.word_id != null && message.hasOwnProperty("word_id"))
                if (!$util.isInteger(message.word_id))
                    return "word_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCBannedWordListRequest message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCBannedWordListRequest} CMsgGCBannedWordListRequest
         */
        CMsgGCBannedWordListRequest.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCBannedWordListRequest)
                return object;
            var message = new $root.CMsgGCBannedWordListRequest();
            if (object.ban_list_group_id != null)
                message.ban_list_group_id = object.ban_list_group_id >>> 0;
            if (object.word_id != null)
                message.word_id = object.word_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCBannedWordListRequest message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {CMsgGCBannedWordListRequest} message CMsgGCBannedWordListRequest
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCBannedWordListRequest.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.ban_list_group_id = 0;
                object.word_id = 0;
            }
            if (message.ban_list_group_id != null && message.hasOwnProperty("ban_list_group_id"))
                object.ban_list_group_id = message.ban_list_group_id;
            if (message.word_id != null && message.hasOwnProperty("word_id"))
                object.word_id = message.word_id;
            return object;
        };
    
        /**
         * Converts this CMsgGCBannedWordListRequest to JSON.
         * @function toJSON
         * @memberof CMsgGCBannedWordListRequest
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCBannedWordListRequest.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCBannedWordListRequest
         * @function getTypeUrl
         * @memberof CMsgGCBannedWordListRequest
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCBannedWordListRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCBannedWordListRequest";
        };
    
        return CMsgGCBannedWordListRequest;
    })();
    
    $root.CMsgGCRequestAnnouncements = (function() {
    
        /**
         * Properties of a CMsgGCRequestAnnouncements.
         * @exports ICMsgGCRequestAnnouncements
         * @interface ICMsgGCRequestAnnouncements
         */
    
        /**
         * Constructs a new CMsgGCRequestAnnouncements.
         * @exports CMsgGCRequestAnnouncements
         * @classdesc Represents a CMsgGCRequestAnnouncements.
         * @implements ICMsgGCRequestAnnouncements
         * @constructor
         * @param {ICMsgGCRequestAnnouncements=} [properties] Properties to set
         */
        function CMsgGCRequestAnnouncements(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgGCRequestAnnouncements instance using the specified properties.
         * @function create
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {ICMsgGCRequestAnnouncements=} [properties] Properties to set
         * @returns {CMsgGCRequestAnnouncements} CMsgGCRequestAnnouncements instance
         */
        CMsgGCRequestAnnouncements.create = function create(properties) {
            return new CMsgGCRequestAnnouncements(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRequestAnnouncements message. Does not implicitly {@link CMsgGCRequestAnnouncements.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {ICMsgGCRequestAnnouncements} message CMsgGCRequestAnnouncements message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestAnnouncements.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRequestAnnouncements message, length delimited. Does not implicitly {@link CMsgGCRequestAnnouncements.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {ICMsgGCRequestAnnouncements} message CMsgGCRequestAnnouncements message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestAnnouncements.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRequestAnnouncements message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRequestAnnouncements} CMsgGCRequestAnnouncements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestAnnouncements.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRequestAnnouncements();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRequestAnnouncements message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRequestAnnouncements} CMsgGCRequestAnnouncements
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestAnnouncements.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRequestAnnouncements message.
         * @function verify
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRequestAnnouncements.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRequestAnnouncements message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRequestAnnouncements} CMsgGCRequestAnnouncements
         */
        CMsgGCRequestAnnouncements.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRequestAnnouncements)
                return object;
            return new $root.CMsgGCRequestAnnouncements();
        };
    
        /**
         * Creates a plain object from a CMsgGCRequestAnnouncements message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {CMsgGCRequestAnnouncements} message CMsgGCRequestAnnouncements
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRequestAnnouncements.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgGCRequestAnnouncements to JSON.
         * @function toJSON
         * @memberof CMsgGCRequestAnnouncements
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRequestAnnouncements.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRequestAnnouncements
         * @function getTypeUrl
         * @memberof CMsgGCRequestAnnouncements
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRequestAnnouncements.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRequestAnnouncements";
        };
    
        return CMsgGCRequestAnnouncements;
    })();
    
    $root.CMsgGCRequestAnnouncementsResponse = (function() {
    
        /**
         * Properties of a CMsgGCRequestAnnouncementsResponse.
         * @exports ICMsgGCRequestAnnouncementsResponse
         * @interface ICMsgGCRequestAnnouncementsResponse
         * @property {string|null} [announcement_title] CMsgGCRequestAnnouncementsResponse announcement_title
         * @property {string|null} [announcement] CMsgGCRequestAnnouncementsResponse announcement
         * @property {string|null} [nextmatch_title] CMsgGCRequestAnnouncementsResponse nextmatch_title
         * @property {string|null} [nextmatch] CMsgGCRequestAnnouncementsResponse nextmatch
         */
    
        /**
         * Constructs a new CMsgGCRequestAnnouncementsResponse.
         * @exports CMsgGCRequestAnnouncementsResponse
         * @classdesc Represents a CMsgGCRequestAnnouncementsResponse.
         * @implements ICMsgGCRequestAnnouncementsResponse
         * @constructor
         * @param {ICMsgGCRequestAnnouncementsResponse=} [properties] Properties to set
         */
        function CMsgGCRequestAnnouncementsResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCRequestAnnouncementsResponse announcement_title.
         * @member {string} announcement_title
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         */
        CMsgGCRequestAnnouncementsResponse.prototype.announcement_title = "";
    
        /**
         * CMsgGCRequestAnnouncementsResponse announcement.
         * @member {string} announcement
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         */
        CMsgGCRequestAnnouncementsResponse.prototype.announcement = "";
    
        /**
         * CMsgGCRequestAnnouncementsResponse nextmatch_title.
         * @member {string} nextmatch_title
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         */
        CMsgGCRequestAnnouncementsResponse.prototype.nextmatch_title = "";
    
        /**
         * CMsgGCRequestAnnouncementsResponse nextmatch.
         * @member {string} nextmatch
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         */
        CMsgGCRequestAnnouncementsResponse.prototype.nextmatch = "";
    
        /**
         * Creates a new CMsgGCRequestAnnouncementsResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {ICMsgGCRequestAnnouncementsResponse=} [properties] Properties to set
         * @returns {CMsgGCRequestAnnouncementsResponse} CMsgGCRequestAnnouncementsResponse instance
         */
        CMsgGCRequestAnnouncementsResponse.create = function create(properties) {
            return new CMsgGCRequestAnnouncementsResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCRequestAnnouncementsResponse message. Does not implicitly {@link CMsgGCRequestAnnouncementsResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {ICMsgGCRequestAnnouncementsResponse} message CMsgGCRequestAnnouncementsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestAnnouncementsResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.announcement_title != null && Object.hasOwnProperty.call(message, "announcement_title"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.announcement_title);
            if (message.announcement != null && Object.hasOwnProperty.call(message, "announcement"))
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.announcement);
            if (message.nextmatch_title != null && Object.hasOwnProperty.call(message, "nextmatch_title"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextmatch_title);
            if (message.nextmatch != null && Object.hasOwnProperty.call(message, "nextmatch"))
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.nextmatch);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCRequestAnnouncementsResponse message, length delimited. Does not implicitly {@link CMsgGCRequestAnnouncementsResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {ICMsgGCRequestAnnouncementsResponse} message CMsgGCRequestAnnouncementsResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCRequestAnnouncementsResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCRequestAnnouncementsResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCRequestAnnouncementsResponse} CMsgGCRequestAnnouncementsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestAnnouncementsResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCRequestAnnouncementsResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.announcement_title = reader.string();
                        break;
                    }
                case 2: {
                        message.announcement = reader.string();
                        break;
                    }
                case 3: {
                        message.nextmatch_title = reader.string();
                        break;
                    }
                case 4: {
                        message.nextmatch = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCRequestAnnouncementsResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCRequestAnnouncementsResponse} CMsgGCRequestAnnouncementsResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCRequestAnnouncementsResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCRequestAnnouncementsResponse message.
         * @function verify
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCRequestAnnouncementsResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.announcement_title != null && message.hasOwnProperty("announcement_title"))
                if (!$util.isString(message.announcement_title))
                    return "announcement_title: string expected";
            if (message.announcement != null && message.hasOwnProperty("announcement"))
                if (!$util.isString(message.announcement))
                    return "announcement: string expected";
            if (message.nextmatch_title != null && message.hasOwnProperty("nextmatch_title"))
                if (!$util.isString(message.nextmatch_title))
                    return "nextmatch_title: string expected";
            if (message.nextmatch != null && message.hasOwnProperty("nextmatch"))
                if (!$util.isString(message.nextmatch))
                    return "nextmatch: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCRequestAnnouncementsResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCRequestAnnouncementsResponse} CMsgGCRequestAnnouncementsResponse
         */
        CMsgGCRequestAnnouncementsResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCRequestAnnouncementsResponse)
                return object;
            var message = new $root.CMsgGCRequestAnnouncementsResponse();
            if (object.announcement_title != null)
                message.announcement_title = String(object.announcement_title);
            if (object.announcement != null)
                message.announcement = String(object.announcement);
            if (object.nextmatch_title != null)
                message.nextmatch_title = String(object.nextmatch_title);
            if (object.nextmatch != null)
                message.nextmatch = String(object.nextmatch);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCRequestAnnouncementsResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {CMsgGCRequestAnnouncementsResponse} message CMsgGCRequestAnnouncementsResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCRequestAnnouncementsResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.announcement_title = "";
                object.announcement = "";
                object.nextmatch_title = "";
                object.nextmatch = "";
            }
            if (message.announcement_title != null && message.hasOwnProperty("announcement_title"))
                object.announcement_title = message.announcement_title;
            if (message.announcement != null && message.hasOwnProperty("announcement"))
                object.announcement = message.announcement;
            if (message.nextmatch_title != null && message.hasOwnProperty("nextmatch_title"))
                object.nextmatch_title = message.nextmatch_title;
            if (message.nextmatch != null && message.hasOwnProperty("nextmatch"))
                object.nextmatch = message.nextmatch;
            return object;
        };
    
        /**
         * Converts this CMsgGCRequestAnnouncementsResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCRequestAnnouncementsResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCRequestAnnouncementsResponse
         * @function getTypeUrl
         * @memberof CMsgGCRequestAnnouncementsResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCRequestAnnouncementsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCRequestAnnouncementsResponse";
        };
    
        return CMsgGCRequestAnnouncementsResponse;
    })();
    
    $root.CMsgGCBannedWord = (function() {
    
        /**
         * Properties of a CMsgGCBannedWord.
         * @exports ICMsgGCBannedWord
         * @interface ICMsgGCBannedWord
         * @property {number|null} [word_id] CMsgGCBannedWord word_id
         * @property {GC_BannedWordType|null} [word_type] CMsgGCBannedWord word_type
         * @property {string|null} [word] CMsgGCBannedWord word
         */
    
        /**
         * Constructs a new CMsgGCBannedWord.
         * @exports CMsgGCBannedWord
         * @classdesc Represents a CMsgGCBannedWord.
         * @implements ICMsgGCBannedWord
         * @constructor
         * @param {ICMsgGCBannedWord=} [properties] Properties to set
         */
        function CMsgGCBannedWord(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCBannedWord word_id.
         * @member {number} word_id
         * @memberof CMsgGCBannedWord
         * @instance
         */
        CMsgGCBannedWord.prototype.word_id = 0;
    
        /**
         * CMsgGCBannedWord word_type.
         * @member {GC_BannedWordType} word_type
         * @memberof CMsgGCBannedWord
         * @instance
         */
        CMsgGCBannedWord.prototype.word_type = 0;
    
        /**
         * CMsgGCBannedWord word.
         * @member {string} word
         * @memberof CMsgGCBannedWord
         * @instance
         */
        CMsgGCBannedWord.prototype.word = "";
    
        /**
         * Creates a new CMsgGCBannedWord instance using the specified properties.
         * @function create
         * @memberof CMsgGCBannedWord
         * @static
         * @param {ICMsgGCBannedWord=} [properties] Properties to set
         * @returns {CMsgGCBannedWord} CMsgGCBannedWord instance
         */
        CMsgGCBannedWord.create = function create(properties) {
            return new CMsgGCBannedWord(properties);
        };
    
        /**
         * Encodes the specified CMsgGCBannedWord message. Does not implicitly {@link CMsgGCBannedWord.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCBannedWord
         * @static
         * @param {ICMsgGCBannedWord} message CMsgGCBannedWord message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWord.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.word_id != null && Object.hasOwnProperty.call(message, "word_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.word_id);
            if (message.word_type != null && Object.hasOwnProperty.call(message, "word_type"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.word_type);
            if (message.word != null && Object.hasOwnProperty.call(message, "word"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.word);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCBannedWord message, length delimited. Does not implicitly {@link CMsgGCBannedWord.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCBannedWord
         * @static
         * @param {ICMsgGCBannedWord} message CMsgGCBannedWord message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWord.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCBannedWord message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCBannedWord
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCBannedWord} CMsgGCBannedWord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWord.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCBannedWord();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.word_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.word_type = reader.int32();
                        break;
                    }
                case 3: {
                        message.word = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCBannedWord message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCBannedWord
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCBannedWord} CMsgGCBannedWord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWord.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCBannedWord message.
         * @function verify
         * @memberof CMsgGCBannedWord
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCBannedWord.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.word_id != null && message.hasOwnProperty("word_id"))
                if (!$util.isInteger(message.word_id))
                    return "word_id: integer expected";
            if (message.word_type != null && message.hasOwnProperty("word_type"))
                switch (message.word_type) {
                default:
                    return "word_type: enum value expected";
                case 0:
                case 1:
                    break;
                }
            if (message.word != null && message.hasOwnProperty("word"))
                if (!$util.isString(message.word))
                    return "word: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCBannedWord message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCBannedWord
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCBannedWord} CMsgGCBannedWord
         */
        CMsgGCBannedWord.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCBannedWord)
                return object;
            var message = new $root.CMsgGCBannedWord();
            if (object.word_id != null)
                message.word_id = object.word_id >>> 0;
            switch (object.word_type) {
            default:
                if (typeof object.word_type === "number") {
                    message.word_type = object.word_type;
                    break;
                }
                break;
            case "GC_BANNED_WORD_DISABLE_WORD":
            case 0:
                message.word_type = 0;
                break;
            case "GC_BANNED_WORD_ENABLE_WORD":
            case 1:
                message.word_type = 1;
                break;
            }
            if (object.word != null)
                message.word = String(object.word);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCBannedWord message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCBannedWord
         * @static
         * @param {CMsgGCBannedWord} message CMsgGCBannedWord
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCBannedWord.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.word_id = 0;
                object.word_type = options.enums === String ? "GC_BANNED_WORD_DISABLE_WORD" : 0;
                object.word = "";
            }
            if (message.word_id != null && message.hasOwnProperty("word_id"))
                object.word_id = message.word_id;
            if (message.word_type != null && message.hasOwnProperty("word_type"))
                object.word_type = options.enums === String ? $root.GC_BannedWordType[message.word_type] === undefined ? message.word_type : $root.GC_BannedWordType[message.word_type] : message.word_type;
            if (message.word != null && message.hasOwnProperty("word"))
                object.word = message.word;
            return object;
        };
    
        /**
         * Converts this CMsgGCBannedWord to JSON.
         * @function toJSON
         * @memberof CMsgGCBannedWord
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCBannedWord.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCBannedWord
         * @function getTypeUrl
         * @memberof CMsgGCBannedWord
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCBannedWord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCBannedWord";
        };
    
        return CMsgGCBannedWord;
    })();
    
    $root.CMsgGCBannedWordListResponse = (function() {
    
        /**
         * Properties of a CMsgGCBannedWordListResponse.
         * @exports ICMsgGCBannedWordListResponse
         * @interface ICMsgGCBannedWordListResponse
         * @property {number|null} [ban_list_group_id] CMsgGCBannedWordListResponse ban_list_group_id
         * @property {Array.<ICMsgGCBannedWord>|null} [word_list] CMsgGCBannedWordListResponse word_list
         */
    
        /**
         * Constructs a new CMsgGCBannedWordListResponse.
         * @exports CMsgGCBannedWordListResponse
         * @classdesc Represents a CMsgGCBannedWordListResponse.
         * @implements ICMsgGCBannedWordListResponse
         * @constructor
         * @param {ICMsgGCBannedWordListResponse=} [properties] Properties to set
         */
        function CMsgGCBannedWordListResponse(properties) {
            this.word_list = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCBannedWordListResponse ban_list_group_id.
         * @member {number} ban_list_group_id
         * @memberof CMsgGCBannedWordListResponse
         * @instance
         */
        CMsgGCBannedWordListResponse.prototype.ban_list_group_id = 0;
    
        /**
         * CMsgGCBannedWordListResponse word_list.
         * @member {Array.<ICMsgGCBannedWord>} word_list
         * @memberof CMsgGCBannedWordListResponse
         * @instance
         */
        CMsgGCBannedWordListResponse.prototype.word_list = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCBannedWordListResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {ICMsgGCBannedWordListResponse=} [properties] Properties to set
         * @returns {CMsgGCBannedWordListResponse} CMsgGCBannedWordListResponse instance
         */
        CMsgGCBannedWordListResponse.create = function create(properties) {
            return new CMsgGCBannedWordListResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCBannedWordListResponse message. Does not implicitly {@link CMsgGCBannedWordListResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {ICMsgGCBannedWordListResponse} message CMsgGCBannedWordListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWordListResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.ban_list_group_id != null && Object.hasOwnProperty.call(message, "ban_list_group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ban_list_group_id);
            if (message.word_list != null && message.word_list.length)
                for (var i = 0; i < message.word_list.length; ++i)
                    $root.CMsgGCBannedWord.encode(message.word_list[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCBannedWordListResponse message, length delimited. Does not implicitly {@link CMsgGCBannedWordListResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {ICMsgGCBannedWordListResponse} message CMsgGCBannedWordListResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCBannedWordListResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCBannedWordListResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCBannedWordListResponse} CMsgGCBannedWordListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWordListResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCBannedWordListResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.ban_list_group_id = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.word_list && message.word_list.length))
                            message.word_list = [];
                        message.word_list.push($root.CMsgGCBannedWord.decode(reader, reader.uint32()));
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCBannedWordListResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCBannedWordListResponse} CMsgGCBannedWordListResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCBannedWordListResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCBannedWordListResponse message.
         * @function verify
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCBannedWordListResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.ban_list_group_id != null && message.hasOwnProperty("ban_list_group_id"))
                if (!$util.isInteger(message.ban_list_group_id))
                    return "ban_list_group_id: integer expected";
            if (message.word_list != null && message.hasOwnProperty("word_list")) {
                if (!Array.isArray(message.word_list))
                    return "word_list: array expected";
                for (var i = 0; i < message.word_list.length; ++i) {
                    var error = $root.CMsgGCBannedWord.verify(message.word_list[i]);
                    if (error)
                        return "word_list." + error;
                }
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCBannedWordListResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCBannedWordListResponse} CMsgGCBannedWordListResponse
         */
        CMsgGCBannedWordListResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCBannedWordListResponse)
                return object;
            var message = new $root.CMsgGCBannedWordListResponse();
            if (object.ban_list_group_id != null)
                message.ban_list_group_id = object.ban_list_group_id >>> 0;
            if (object.word_list) {
                if (!Array.isArray(object.word_list))
                    throw TypeError(".CMsgGCBannedWordListResponse.word_list: array expected");
                message.word_list = [];
                for (var i = 0; i < object.word_list.length; ++i) {
                    if (typeof object.word_list[i] !== "object")
                        throw TypeError(".CMsgGCBannedWordListResponse.word_list: object expected");
                    message.word_list[i] = $root.CMsgGCBannedWord.fromObject(object.word_list[i]);
                }
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCBannedWordListResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {CMsgGCBannedWordListResponse} message CMsgGCBannedWordListResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCBannedWordListResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.word_list = [];
            if (options.defaults)
                object.ban_list_group_id = 0;
            if (message.ban_list_group_id != null && message.hasOwnProperty("ban_list_group_id"))
                object.ban_list_group_id = message.ban_list_group_id;
            if (message.word_list && message.word_list.length) {
                object.word_list = [];
                for (var j = 0; j < message.word_list.length; ++j)
                    object.word_list[j] = $root.CMsgGCBannedWord.toObject(message.word_list[j], options);
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCBannedWordListResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCBannedWordListResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCBannedWordListResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCBannedWordListResponse
         * @function getTypeUrl
         * @memberof CMsgGCBannedWordListResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCBannedWordListResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCBannedWordListResponse";
        };
    
        return CMsgGCBannedWordListResponse;
    })();
    
    $root.CMsgGCToGCBannedWordListBroadcast = (function() {
    
        /**
         * Properties of a CMsgGCToGCBannedWordListBroadcast.
         * @exports ICMsgGCToGCBannedWordListBroadcast
         * @interface ICMsgGCToGCBannedWordListBroadcast
         * @property {ICMsgGCBannedWordListResponse|null} [broadcast] CMsgGCToGCBannedWordListBroadcast broadcast
         */
    
        /**
         * Constructs a new CMsgGCToGCBannedWordListBroadcast.
         * @exports CMsgGCToGCBannedWordListBroadcast
         * @classdesc Represents a CMsgGCToGCBannedWordListBroadcast.
         * @implements ICMsgGCToGCBannedWordListBroadcast
         * @constructor
         * @param {ICMsgGCToGCBannedWordListBroadcast=} [properties] Properties to set
         */
        function CMsgGCToGCBannedWordListBroadcast(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCBannedWordListBroadcast broadcast.
         * @member {ICMsgGCBannedWordListResponse|null|undefined} broadcast
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @instance
         */
        CMsgGCToGCBannedWordListBroadcast.prototype.broadcast = null;
    
        /**
         * Creates a new CMsgGCToGCBannedWordListBroadcast instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {ICMsgGCToGCBannedWordListBroadcast=} [properties] Properties to set
         * @returns {CMsgGCToGCBannedWordListBroadcast} CMsgGCToGCBannedWordListBroadcast instance
         */
        CMsgGCToGCBannedWordListBroadcast.create = function create(properties) {
            return new CMsgGCToGCBannedWordListBroadcast(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCBannedWordListBroadcast message. Does not implicitly {@link CMsgGCToGCBannedWordListBroadcast.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {ICMsgGCToGCBannedWordListBroadcast} message CMsgGCToGCBannedWordListBroadcast message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBannedWordListBroadcast.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.broadcast != null && Object.hasOwnProperty.call(message, "broadcast"))
                $root.CMsgGCBannedWordListResponse.encode(message.broadcast, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCBannedWordListBroadcast message, length delimited. Does not implicitly {@link CMsgGCToGCBannedWordListBroadcast.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {ICMsgGCToGCBannedWordListBroadcast} message CMsgGCToGCBannedWordListBroadcast message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBannedWordListBroadcast.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCBannedWordListBroadcast message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCBannedWordListBroadcast} CMsgGCToGCBannedWordListBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBannedWordListBroadcast.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCBannedWordListBroadcast();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.broadcast = $root.CMsgGCBannedWordListResponse.decode(reader, reader.uint32());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCBannedWordListBroadcast message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCBannedWordListBroadcast} CMsgGCToGCBannedWordListBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBannedWordListBroadcast.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCBannedWordListBroadcast message.
         * @function verify
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCBannedWordListBroadcast.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.broadcast != null && message.hasOwnProperty("broadcast")) {
                var error = $root.CMsgGCBannedWordListResponse.verify(message.broadcast);
                if (error)
                    return "broadcast." + error;
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCBannedWordListBroadcast message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCBannedWordListBroadcast} CMsgGCToGCBannedWordListBroadcast
         */
        CMsgGCToGCBannedWordListBroadcast.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCBannedWordListBroadcast)
                return object;
            var message = new $root.CMsgGCToGCBannedWordListBroadcast();
            if (object.broadcast != null) {
                if (typeof object.broadcast !== "object")
                    throw TypeError(".CMsgGCToGCBannedWordListBroadcast.broadcast: object expected");
                message.broadcast = $root.CMsgGCBannedWordListResponse.fromObject(object.broadcast);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCBannedWordListBroadcast message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {CMsgGCToGCBannedWordListBroadcast} message CMsgGCToGCBannedWordListBroadcast
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCBannedWordListBroadcast.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.broadcast = null;
            if (message.broadcast != null && message.hasOwnProperty("broadcast"))
                object.broadcast = $root.CMsgGCBannedWordListResponse.toObject(message.broadcast, options);
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCBannedWordListBroadcast to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCBannedWordListBroadcast.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCBannedWordListBroadcast
         * @function getTypeUrl
         * @memberof CMsgGCToGCBannedWordListBroadcast
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCBannedWordListBroadcast.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCBannedWordListBroadcast";
        };
    
        return CMsgGCToGCBannedWordListBroadcast;
    })();
    
    $root.CMsgGCToGCBannedWordListUpdated = (function() {
    
        /**
         * Properties of a CMsgGCToGCBannedWordListUpdated.
         * @exports ICMsgGCToGCBannedWordListUpdated
         * @interface ICMsgGCToGCBannedWordListUpdated
         * @property {number|null} [group_id] CMsgGCToGCBannedWordListUpdated group_id
         */
    
        /**
         * Constructs a new CMsgGCToGCBannedWordListUpdated.
         * @exports CMsgGCToGCBannedWordListUpdated
         * @classdesc Represents a CMsgGCToGCBannedWordListUpdated.
         * @implements ICMsgGCToGCBannedWordListUpdated
         * @constructor
         * @param {ICMsgGCToGCBannedWordListUpdated=} [properties] Properties to set
         */
        function CMsgGCToGCBannedWordListUpdated(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCBannedWordListUpdated group_id.
         * @member {number} group_id
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @instance
         */
        CMsgGCToGCBannedWordListUpdated.prototype.group_id = 0;
    
        /**
         * Creates a new CMsgGCToGCBannedWordListUpdated instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {ICMsgGCToGCBannedWordListUpdated=} [properties] Properties to set
         * @returns {CMsgGCToGCBannedWordListUpdated} CMsgGCToGCBannedWordListUpdated instance
         */
        CMsgGCToGCBannedWordListUpdated.create = function create(properties) {
            return new CMsgGCToGCBannedWordListUpdated(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCBannedWordListUpdated message. Does not implicitly {@link CMsgGCToGCBannedWordListUpdated.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {ICMsgGCToGCBannedWordListUpdated} message CMsgGCToGCBannedWordListUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBannedWordListUpdated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.group_id != null && Object.hasOwnProperty.call(message, "group_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.group_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCBannedWordListUpdated message, length delimited. Does not implicitly {@link CMsgGCToGCBannedWordListUpdated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {ICMsgGCToGCBannedWordListUpdated} message CMsgGCToGCBannedWordListUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBannedWordListUpdated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCBannedWordListUpdated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCBannedWordListUpdated} CMsgGCToGCBannedWordListUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBannedWordListUpdated.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCBannedWordListUpdated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.group_id = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCBannedWordListUpdated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCBannedWordListUpdated} CMsgGCToGCBannedWordListUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBannedWordListUpdated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCBannedWordListUpdated message.
         * @function verify
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCBannedWordListUpdated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.group_id != null && message.hasOwnProperty("group_id"))
                if (!$util.isInteger(message.group_id))
                    return "group_id: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCBannedWordListUpdated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCBannedWordListUpdated} CMsgGCToGCBannedWordListUpdated
         */
        CMsgGCToGCBannedWordListUpdated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCBannedWordListUpdated)
                return object;
            var message = new $root.CMsgGCToGCBannedWordListUpdated();
            if (object.group_id != null)
                message.group_id = object.group_id >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCBannedWordListUpdated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {CMsgGCToGCBannedWordListUpdated} message CMsgGCToGCBannedWordListUpdated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCBannedWordListUpdated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.group_id = 0;
            if (message.group_id != null && message.hasOwnProperty("group_id"))
                object.group_id = message.group_id;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCBannedWordListUpdated to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCBannedWordListUpdated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCBannedWordListUpdated
         * @function getTypeUrl
         * @memberof CMsgGCToGCBannedWordListUpdated
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCBannedWordListUpdated.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCBannedWordListUpdated";
        };
    
        return CMsgGCToGCBannedWordListUpdated;
    })();
    
    $root.CMsgGCToGCDirtySDOCache = (function() {
    
        /**
         * Properties of a CMsgGCToGCDirtySDOCache.
         * @exports ICMsgGCToGCDirtySDOCache
         * @interface ICMsgGCToGCDirtySDOCache
         * @property {number|null} [sdo_type] CMsgGCToGCDirtySDOCache sdo_type
         * @property {number|Long|null} [key_uint64] CMsgGCToGCDirtySDOCache key_uint64
         */
    
        /**
         * Constructs a new CMsgGCToGCDirtySDOCache.
         * @exports CMsgGCToGCDirtySDOCache
         * @classdesc Represents a CMsgGCToGCDirtySDOCache.
         * @implements ICMsgGCToGCDirtySDOCache
         * @constructor
         * @param {ICMsgGCToGCDirtySDOCache=} [properties] Properties to set
         */
        function CMsgGCToGCDirtySDOCache(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCDirtySDOCache sdo_type.
         * @member {number} sdo_type
         * @memberof CMsgGCToGCDirtySDOCache
         * @instance
         */
        CMsgGCToGCDirtySDOCache.prototype.sdo_type = 0;
    
        /**
         * CMsgGCToGCDirtySDOCache key_uint64.
         * @member {number|Long} key_uint64
         * @memberof CMsgGCToGCDirtySDOCache
         * @instance
         */
        CMsgGCToGCDirtySDOCache.prototype.key_uint64 = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgGCToGCDirtySDOCache instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {ICMsgGCToGCDirtySDOCache=} [properties] Properties to set
         * @returns {CMsgGCToGCDirtySDOCache} CMsgGCToGCDirtySDOCache instance
         */
        CMsgGCToGCDirtySDOCache.create = function create(properties) {
            return new CMsgGCToGCDirtySDOCache(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCDirtySDOCache message. Does not implicitly {@link CMsgGCToGCDirtySDOCache.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {ICMsgGCToGCDirtySDOCache} message CMsgGCToGCDirtySDOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCDirtySDOCache.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sdo_type != null && Object.hasOwnProperty.call(message, "sdo_type"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sdo_type);
            if (message.key_uint64 != null && Object.hasOwnProperty.call(message, "key_uint64"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.key_uint64);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCDirtySDOCache message, length delimited. Does not implicitly {@link CMsgGCToGCDirtySDOCache.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {ICMsgGCToGCDirtySDOCache} message CMsgGCToGCDirtySDOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCDirtySDOCache.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCDirtySDOCache message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCDirtySDOCache} CMsgGCToGCDirtySDOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCDirtySDOCache.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCDirtySDOCache();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.sdo_type = reader.uint32();
                        break;
                    }
                case 2: {
                        message.key_uint64 = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCDirtySDOCache message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCDirtySDOCache} CMsgGCToGCDirtySDOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCDirtySDOCache.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCDirtySDOCache message.
         * @function verify
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCDirtySDOCache.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sdo_type != null && message.hasOwnProperty("sdo_type"))
                if (!$util.isInteger(message.sdo_type))
                    return "sdo_type: integer expected";
            if (message.key_uint64 != null && message.hasOwnProperty("key_uint64"))
                if (!$util.isInteger(message.key_uint64) && !(message.key_uint64 && $util.isInteger(message.key_uint64.low) && $util.isInteger(message.key_uint64.high)))
                    return "key_uint64: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCDirtySDOCache message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCDirtySDOCache} CMsgGCToGCDirtySDOCache
         */
        CMsgGCToGCDirtySDOCache.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCDirtySDOCache)
                return object;
            var message = new $root.CMsgGCToGCDirtySDOCache();
            if (object.sdo_type != null)
                message.sdo_type = object.sdo_type >>> 0;
            if (object.key_uint64 != null)
                if ($util.Long)
                    (message.key_uint64 = $util.Long.fromValue(object.key_uint64)).unsigned = true;
                else if (typeof object.key_uint64 === "string")
                    message.key_uint64 = parseInt(object.key_uint64, 10);
                else if (typeof object.key_uint64 === "number")
                    message.key_uint64 = object.key_uint64;
                else if (typeof object.key_uint64 === "object")
                    message.key_uint64 = new $util.LongBits(object.key_uint64.low >>> 0, object.key_uint64.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCDirtySDOCache message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {CMsgGCToGCDirtySDOCache} message CMsgGCToGCDirtySDOCache
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCDirtySDOCache.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.sdo_type = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.key_uint64 = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.key_uint64 = options.longs === String ? "0" : 0;
            }
            if (message.sdo_type != null && message.hasOwnProperty("sdo_type"))
                object.sdo_type = message.sdo_type;
            if (message.key_uint64 != null && message.hasOwnProperty("key_uint64"))
                if (typeof message.key_uint64 === "number")
                    object.key_uint64 = options.longs === String ? String(message.key_uint64) : message.key_uint64;
                else
                    object.key_uint64 = options.longs === String ? $util.Long.prototype.toString.call(message.key_uint64) : options.longs === Number ? new $util.LongBits(message.key_uint64.low >>> 0, message.key_uint64.high >>> 0).toNumber(true) : message.key_uint64;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCDirtySDOCache to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCDirtySDOCache
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCDirtySDOCache.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCDirtySDOCache
         * @function getTypeUrl
         * @memberof CMsgGCToGCDirtySDOCache
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCDirtySDOCache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCDirtySDOCache";
        };
    
        return CMsgGCToGCDirtySDOCache;
    })();
    
    $root.CMsgGCToGCDirtyMultipleSDOCache = (function() {
    
        /**
         * Properties of a CMsgGCToGCDirtyMultipleSDOCache.
         * @exports ICMsgGCToGCDirtyMultipleSDOCache
         * @interface ICMsgGCToGCDirtyMultipleSDOCache
         * @property {number|null} [sdo_type] CMsgGCToGCDirtyMultipleSDOCache sdo_type
         * @property {Array.<number|Long>|null} [key_uint64] CMsgGCToGCDirtyMultipleSDOCache key_uint64
         */
    
        /**
         * Constructs a new CMsgGCToGCDirtyMultipleSDOCache.
         * @exports CMsgGCToGCDirtyMultipleSDOCache
         * @classdesc Represents a CMsgGCToGCDirtyMultipleSDOCache.
         * @implements ICMsgGCToGCDirtyMultipleSDOCache
         * @constructor
         * @param {ICMsgGCToGCDirtyMultipleSDOCache=} [properties] Properties to set
         */
        function CMsgGCToGCDirtyMultipleSDOCache(properties) {
            this.key_uint64 = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCDirtyMultipleSDOCache sdo_type.
         * @member {number} sdo_type
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @instance
         */
        CMsgGCToGCDirtyMultipleSDOCache.prototype.sdo_type = 0;
    
        /**
         * CMsgGCToGCDirtyMultipleSDOCache key_uint64.
         * @member {Array.<number|Long>} key_uint64
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @instance
         */
        CMsgGCToGCDirtyMultipleSDOCache.prototype.key_uint64 = $util.emptyArray;
    
        /**
         * Creates a new CMsgGCToGCDirtyMultipleSDOCache instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {ICMsgGCToGCDirtyMultipleSDOCache=} [properties] Properties to set
         * @returns {CMsgGCToGCDirtyMultipleSDOCache} CMsgGCToGCDirtyMultipleSDOCache instance
         */
        CMsgGCToGCDirtyMultipleSDOCache.create = function create(properties) {
            return new CMsgGCToGCDirtyMultipleSDOCache(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCDirtyMultipleSDOCache message. Does not implicitly {@link CMsgGCToGCDirtyMultipleSDOCache.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {ICMsgGCToGCDirtyMultipleSDOCache} message CMsgGCToGCDirtyMultipleSDOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCDirtyMultipleSDOCache.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.sdo_type != null && Object.hasOwnProperty.call(message, "sdo_type"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sdo_type);
            if (message.key_uint64 != null && message.key_uint64.length)
                for (var i = 0; i < message.key_uint64.length; ++i)
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.key_uint64[i]);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCDirtyMultipleSDOCache message, length delimited. Does not implicitly {@link CMsgGCToGCDirtyMultipleSDOCache.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {ICMsgGCToGCDirtyMultipleSDOCache} message CMsgGCToGCDirtyMultipleSDOCache message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCDirtyMultipleSDOCache.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCDirtyMultipleSDOCache message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCDirtyMultipleSDOCache} CMsgGCToGCDirtyMultipleSDOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCDirtyMultipleSDOCache.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCDirtyMultipleSDOCache();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.sdo_type = reader.uint32();
                        break;
                    }
                case 2: {
                        if (!(message.key_uint64 && message.key_uint64.length))
                            message.key_uint64 = [];
                        if ((tag & 7) === 2) {
                            var end2 = reader.uint32() + reader.pos;
                            while (reader.pos < end2)
                                message.key_uint64.push(reader.uint64());
                        } else
                            message.key_uint64.push(reader.uint64());
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCDirtyMultipleSDOCache message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCDirtyMultipleSDOCache} CMsgGCToGCDirtyMultipleSDOCache
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCDirtyMultipleSDOCache.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCDirtyMultipleSDOCache message.
         * @function verify
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCDirtyMultipleSDOCache.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.sdo_type != null && message.hasOwnProperty("sdo_type"))
                if (!$util.isInteger(message.sdo_type))
                    return "sdo_type: integer expected";
            if (message.key_uint64 != null && message.hasOwnProperty("key_uint64")) {
                if (!Array.isArray(message.key_uint64))
                    return "key_uint64: array expected";
                for (var i = 0; i < message.key_uint64.length; ++i)
                    if (!$util.isInteger(message.key_uint64[i]) && !(message.key_uint64[i] && $util.isInteger(message.key_uint64[i].low) && $util.isInteger(message.key_uint64[i].high)))
                        return "key_uint64: integer|Long[] expected";
            }
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCDirtyMultipleSDOCache message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCDirtyMultipleSDOCache} CMsgGCToGCDirtyMultipleSDOCache
         */
        CMsgGCToGCDirtyMultipleSDOCache.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCDirtyMultipleSDOCache)
                return object;
            var message = new $root.CMsgGCToGCDirtyMultipleSDOCache();
            if (object.sdo_type != null)
                message.sdo_type = object.sdo_type >>> 0;
            if (object.key_uint64) {
                if (!Array.isArray(object.key_uint64))
                    throw TypeError(".CMsgGCToGCDirtyMultipleSDOCache.key_uint64: array expected");
                message.key_uint64 = [];
                for (var i = 0; i < object.key_uint64.length; ++i)
                    if ($util.Long)
                        (message.key_uint64[i] = $util.Long.fromValue(object.key_uint64[i])).unsigned = true;
                    else if (typeof object.key_uint64[i] === "string")
                        message.key_uint64[i] = parseInt(object.key_uint64[i], 10);
                    else if (typeof object.key_uint64[i] === "number")
                        message.key_uint64[i] = object.key_uint64[i];
                    else if (typeof object.key_uint64[i] === "object")
                        message.key_uint64[i] = new $util.LongBits(object.key_uint64[i].low >>> 0, object.key_uint64[i].high >>> 0).toNumber(true);
            }
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCDirtyMultipleSDOCache message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {CMsgGCToGCDirtyMultipleSDOCache} message CMsgGCToGCDirtyMultipleSDOCache
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCDirtyMultipleSDOCache.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.key_uint64 = [];
            if (options.defaults)
                object.sdo_type = 0;
            if (message.sdo_type != null && message.hasOwnProperty("sdo_type"))
                object.sdo_type = message.sdo_type;
            if (message.key_uint64 && message.key_uint64.length) {
                object.key_uint64 = [];
                for (var j = 0; j < message.key_uint64.length; ++j)
                    if (typeof message.key_uint64[j] === "number")
                        object.key_uint64[j] = options.longs === String ? String(message.key_uint64[j]) : message.key_uint64[j];
                    else
                        object.key_uint64[j] = options.longs === String ? $util.Long.prototype.toString.call(message.key_uint64[j]) : options.longs === Number ? new $util.LongBits(message.key_uint64[j].low >>> 0, message.key_uint64[j].high >>> 0).toNumber(true) : message.key_uint64[j];
            }
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCDirtyMultipleSDOCache to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCDirtyMultipleSDOCache.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCDirtyMultipleSDOCache
         * @function getTypeUrl
         * @memberof CMsgGCToGCDirtyMultipleSDOCache
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCDirtyMultipleSDOCache.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCDirtyMultipleSDOCache";
        };
    
        return CMsgGCToGCDirtyMultipleSDOCache;
    })();
    
    $root.CMsgGCCollectItem = (function() {
    
        /**
         * Properties of a CMsgGCCollectItem.
         * @exports ICMsgGCCollectItem
         * @interface ICMsgGCCollectItem
         * @property {number|Long|null} [collection_item_id] CMsgGCCollectItem collection_item_id
         * @property {number|Long|null} [subject_item_id] CMsgGCCollectItem subject_item_id
         */
    
        /**
         * Constructs a new CMsgGCCollectItem.
         * @exports CMsgGCCollectItem
         * @classdesc Represents a CMsgGCCollectItem.
         * @implements ICMsgGCCollectItem
         * @constructor
         * @param {ICMsgGCCollectItem=} [properties] Properties to set
         */
        function CMsgGCCollectItem(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCCollectItem collection_item_id.
         * @member {number|Long} collection_item_id
         * @memberof CMsgGCCollectItem
         * @instance
         */
        CMsgGCCollectItem.prototype.collection_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgGCCollectItem subject_item_id.
         * @member {number|Long} subject_item_id
         * @memberof CMsgGCCollectItem
         * @instance
         */
        CMsgGCCollectItem.prototype.subject_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgGCCollectItem instance using the specified properties.
         * @function create
         * @memberof CMsgGCCollectItem
         * @static
         * @param {ICMsgGCCollectItem=} [properties] Properties to set
         * @returns {CMsgGCCollectItem} CMsgGCCollectItem instance
         */
        CMsgGCCollectItem.create = function create(properties) {
            return new CMsgGCCollectItem(properties);
        };
    
        /**
         * Encodes the specified CMsgGCCollectItem message. Does not implicitly {@link CMsgGCCollectItem.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCCollectItem
         * @static
         * @param {ICMsgGCCollectItem} message CMsgGCCollectItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCollectItem.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.collection_item_id != null && Object.hasOwnProperty.call(message, "collection_item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.collection_item_id);
            if (message.subject_item_id != null && Object.hasOwnProperty.call(message, "subject_item_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.subject_item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCCollectItem message, length delimited. Does not implicitly {@link CMsgGCCollectItem.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCCollectItem
         * @static
         * @param {ICMsgGCCollectItem} message CMsgGCCollectItem message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCCollectItem.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCCollectItem message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCCollectItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCCollectItem} CMsgGCCollectItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCollectItem.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCCollectItem();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.collection_item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.subject_item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCCollectItem message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCCollectItem
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCCollectItem} CMsgGCCollectItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCCollectItem.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCCollectItem message.
         * @function verify
         * @memberof CMsgGCCollectItem
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCCollectItem.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.collection_item_id != null && message.hasOwnProperty("collection_item_id"))
                if (!$util.isInteger(message.collection_item_id) && !(message.collection_item_id && $util.isInteger(message.collection_item_id.low) && $util.isInteger(message.collection_item_id.high)))
                    return "collection_item_id: integer|Long expected";
            if (message.subject_item_id != null && message.hasOwnProperty("subject_item_id"))
                if (!$util.isInteger(message.subject_item_id) && !(message.subject_item_id && $util.isInteger(message.subject_item_id.low) && $util.isInteger(message.subject_item_id.high)))
                    return "subject_item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCCollectItem message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCCollectItem
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCCollectItem} CMsgGCCollectItem
         */
        CMsgGCCollectItem.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCCollectItem)
                return object;
            var message = new $root.CMsgGCCollectItem();
            if (object.collection_item_id != null)
                if ($util.Long)
                    (message.collection_item_id = $util.Long.fromValue(object.collection_item_id)).unsigned = true;
                else if (typeof object.collection_item_id === "string")
                    message.collection_item_id = parseInt(object.collection_item_id, 10);
                else if (typeof object.collection_item_id === "number")
                    message.collection_item_id = object.collection_item_id;
                else if (typeof object.collection_item_id === "object")
                    message.collection_item_id = new $util.LongBits(object.collection_item_id.low >>> 0, object.collection_item_id.high >>> 0).toNumber(true);
            if (object.subject_item_id != null)
                if ($util.Long)
                    (message.subject_item_id = $util.Long.fromValue(object.subject_item_id)).unsigned = true;
                else if (typeof object.subject_item_id === "string")
                    message.subject_item_id = parseInt(object.subject_item_id, 10);
                else if (typeof object.subject_item_id === "number")
                    message.subject_item_id = object.subject_item_id;
                else if (typeof object.subject_item_id === "object")
                    message.subject_item_id = new $util.LongBits(object.subject_item_id.low >>> 0, object.subject_item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCCollectItem message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCCollectItem
         * @static
         * @param {CMsgGCCollectItem} message CMsgGCCollectItem
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCCollectItem.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.collection_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.collection_item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.subject_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.subject_item_id = options.longs === String ? "0" : 0;
            }
            if (message.collection_item_id != null && message.hasOwnProperty("collection_item_id"))
                if (typeof message.collection_item_id === "number")
                    object.collection_item_id = options.longs === String ? String(message.collection_item_id) : message.collection_item_id;
                else
                    object.collection_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.collection_item_id) : options.longs === Number ? new $util.LongBits(message.collection_item_id.low >>> 0, message.collection_item_id.high >>> 0).toNumber(true) : message.collection_item_id;
            if (message.subject_item_id != null && message.hasOwnProperty("subject_item_id"))
                if (typeof message.subject_item_id === "number")
                    object.subject_item_id = options.longs === String ? String(message.subject_item_id) : message.subject_item_id;
                else
                    object.subject_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.subject_item_id) : options.longs === Number ? new $util.LongBits(message.subject_item_id.low >>> 0, message.subject_item_id.high >>> 0).toNumber(true) : message.subject_item_id;
            return object;
        };
    
        /**
         * Converts this CMsgGCCollectItem to JSON.
         * @function toJSON
         * @memberof CMsgGCCollectItem
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCCollectItem.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCCollectItem
         * @function getTypeUrl
         * @memberof CMsgGCCollectItem
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCCollectItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCCollectItem";
        };
    
        return CMsgGCCollectItem;
    })();
    
    $root.CMsgSDONoMemcached = (function() {
    
        /**
         * Properties of a CMsgSDONoMemcached.
         * @exports ICMsgSDONoMemcached
         * @interface ICMsgSDONoMemcached
         */
    
        /**
         * Constructs a new CMsgSDONoMemcached.
         * @exports CMsgSDONoMemcached
         * @classdesc Represents a CMsgSDONoMemcached.
         * @implements ICMsgSDONoMemcached
         * @constructor
         * @param {ICMsgSDONoMemcached=} [properties] Properties to set
         */
        function CMsgSDONoMemcached(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgSDONoMemcached instance using the specified properties.
         * @function create
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {ICMsgSDONoMemcached=} [properties] Properties to set
         * @returns {CMsgSDONoMemcached} CMsgSDONoMemcached instance
         */
        CMsgSDONoMemcached.create = function create(properties) {
            return new CMsgSDONoMemcached(properties);
        };
    
        /**
         * Encodes the specified CMsgSDONoMemcached message. Does not implicitly {@link CMsgSDONoMemcached.verify|verify} messages.
         * @function encode
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {ICMsgSDONoMemcached} message CMsgSDONoMemcached message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSDONoMemcached.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgSDONoMemcached message, length delimited. Does not implicitly {@link CMsgSDONoMemcached.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {ICMsgSDONoMemcached} message CMsgSDONoMemcached message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgSDONoMemcached.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgSDONoMemcached message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgSDONoMemcached} CMsgSDONoMemcached
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSDONoMemcached.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgSDONoMemcached();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgSDONoMemcached message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgSDONoMemcached} CMsgSDONoMemcached
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgSDONoMemcached.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgSDONoMemcached message.
         * @function verify
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgSDONoMemcached.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgSDONoMemcached message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgSDONoMemcached} CMsgSDONoMemcached
         */
        CMsgSDONoMemcached.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgSDONoMemcached)
                return object;
            return new $root.CMsgSDONoMemcached();
        };
    
        /**
         * Creates a plain object from a CMsgSDONoMemcached message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {CMsgSDONoMemcached} message CMsgSDONoMemcached
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgSDONoMemcached.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgSDONoMemcached to JSON.
         * @function toJSON
         * @memberof CMsgSDONoMemcached
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgSDONoMemcached.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgSDONoMemcached
         * @function getTypeUrl
         * @memberof CMsgSDONoMemcached
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgSDONoMemcached.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgSDONoMemcached";
        };
    
        return CMsgSDONoMemcached;
    })();
    
    $root.CMsgGCToGCUpdateSQLKeyValue = (function() {
    
        /**
         * Properties of a CMsgGCToGCUpdateSQLKeyValue.
         * @exports ICMsgGCToGCUpdateSQLKeyValue
         * @interface ICMsgGCToGCUpdateSQLKeyValue
         * @property {string|null} [key_name] CMsgGCToGCUpdateSQLKeyValue key_name
         */
    
        /**
         * Constructs a new CMsgGCToGCUpdateSQLKeyValue.
         * @exports CMsgGCToGCUpdateSQLKeyValue
         * @classdesc Represents a CMsgGCToGCUpdateSQLKeyValue.
         * @implements ICMsgGCToGCUpdateSQLKeyValue
         * @constructor
         * @param {ICMsgGCToGCUpdateSQLKeyValue=} [properties] Properties to set
         */
        function CMsgGCToGCUpdateSQLKeyValue(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCUpdateSQLKeyValue key_name.
         * @member {string} key_name
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @instance
         */
        CMsgGCToGCUpdateSQLKeyValue.prototype.key_name = "";
    
        /**
         * Creates a new CMsgGCToGCUpdateSQLKeyValue instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {ICMsgGCToGCUpdateSQLKeyValue=} [properties] Properties to set
         * @returns {CMsgGCToGCUpdateSQLKeyValue} CMsgGCToGCUpdateSQLKeyValue instance
         */
        CMsgGCToGCUpdateSQLKeyValue.create = function create(properties) {
            return new CMsgGCToGCUpdateSQLKeyValue(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCUpdateSQLKeyValue message. Does not implicitly {@link CMsgGCToGCUpdateSQLKeyValue.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {ICMsgGCToGCUpdateSQLKeyValue} message CMsgGCToGCUpdateSQLKeyValue message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCUpdateSQLKeyValue.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.key_name != null && Object.hasOwnProperty.call(message, "key_name"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key_name);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCUpdateSQLKeyValue message, length delimited. Does not implicitly {@link CMsgGCToGCUpdateSQLKeyValue.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {ICMsgGCToGCUpdateSQLKeyValue} message CMsgGCToGCUpdateSQLKeyValue message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCUpdateSQLKeyValue.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCUpdateSQLKeyValue message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCUpdateSQLKeyValue} CMsgGCToGCUpdateSQLKeyValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCUpdateSQLKeyValue.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCUpdateSQLKeyValue();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.key_name = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCUpdateSQLKeyValue message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCUpdateSQLKeyValue} CMsgGCToGCUpdateSQLKeyValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCUpdateSQLKeyValue.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCUpdateSQLKeyValue message.
         * @function verify
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCUpdateSQLKeyValue.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.key_name != null && message.hasOwnProperty("key_name"))
                if (!$util.isString(message.key_name))
                    return "key_name: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCUpdateSQLKeyValue message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCUpdateSQLKeyValue} CMsgGCToGCUpdateSQLKeyValue
         */
        CMsgGCToGCUpdateSQLKeyValue.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCUpdateSQLKeyValue)
                return object;
            var message = new $root.CMsgGCToGCUpdateSQLKeyValue();
            if (object.key_name != null)
                message.key_name = String(object.key_name);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCUpdateSQLKeyValue message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {CMsgGCToGCUpdateSQLKeyValue} message CMsgGCToGCUpdateSQLKeyValue
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCUpdateSQLKeyValue.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.key_name = "";
            if (message.key_name != null && message.hasOwnProperty("key_name"))
                object.key_name = message.key_name;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCUpdateSQLKeyValue to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCUpdateSQLKeyValue.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCUpdateSQLKeyValue
         * @function getTypeUrl
         * @memberof CMsgGCToGCUpdateSQLKeyValue
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCUpdateSQLKeyValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCUpdateSQLKeyValue";
        };
    
        return CMsgGCToGCUpdateSQLKeyValue;
    })();
    
    $root.CMsgGCToGCIsTrustedServer = (function() {
    
        /**
         * Properties of a CMsgGCToGCIsTrustedServer.
         * @exports ICMsgGCToGCIsTrustedServer
         * @interface ICMsgGCToGCIsTrustedServer
         * @property {number|Long|null} [steam_id] CMsgGCToGCIsTrustedServer steam_id
         */
    
        /**
         * Constructs a new CMsgGCToGCIsTrustedServer.
         * @exports CMsgGCToGCIsTrustedServer
         * @classdesc Represents a CMsgGCToGCIsTrustedServer.
         * @implements ICMsgGCToGCIsTrustedServer
         * @constructor
         * @param {ICMsgGCToGCIsTrustedServer=} [properties] Properties to set
         */
        function CMsgGCToGCIsTrustedServer(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCIsTrustedServer steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgGCToGCIsTrustedServer
         * @instance
         */
        CMsgGCToGCIsTrustedServer.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGCToGCIsTrustedServer instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {ICMsgGCToGCIsTrustedServer=} [properties] Properties to set
         * @returns {CMsgGCToGCIsTrustedServer} CMsgGCToGCIsTrustedServer instance
         */
        CMsgGCToGCIsTrustedServer.create = function create(properties) {
            return new CMsgGCToGCIsTrustedServer(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCIsTrustedServer message. Does not implicitly {@link CMsgGCToGCIsTrustedServer.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {ICMsgGCToGCIsTrustedServer} message CMsgGCToGCIsTrustedServer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCIsTrustedServer.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCIsTrustedServer message, length delimited. Does not implicitly {@link CMsgGCToGCIsTrustedServer.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {ICMsgGCToGCIsTrustedServer} message CMsgGCToGCIsTrustedServer message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCIsTrustedServer.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCIsTrustedServer message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCIsTrustedServer} CMsgGCToGCIsTrustedServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCIsTrustedServer.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCIsTrustedServer();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.steam_id = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCIsTrustedServer message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCIsTrustedServer} CMsgGCToGCIsTrustedServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCIsTrustedServer.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCIsTrustedServer message.
         * @function verify
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCIsTrustedServer.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCIsTrustedServer message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCIsTrustedServer} CMsgGCToGCIsTrustedServer
         */
        CMsgGCToGCIsTrustedServer.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCIsTrustedServer)
                return object;
            var message = new $root.CMsgGCToGCIsTrustedServer();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCIsTrustedServer message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {CMsgGCToGCIsTrustedServer} message CMsgGCToGCIsTrustedServer
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCIsTrustedServer.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCIsTrustedServer to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCIsTrustedServer
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCIsTrustedServer.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCIsTrustedServer
         * @function getTypeUrl
         * @memberof CMsgGCToGCIsTrustedServer
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCIsTrustedServer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCIsTrustedServer";
        };
    
        return CMsgGCToGCIsTrustedServer;
    })();
    
    $root.CMsgGCToGCIsTrustedServerResponse = (function() {
    
        /**
         * Properties of a CMsgGCToGCIsTrustedServerResponse.
         * @exports ICMsgGCToGCIsTrustedServerResponse
         * @interface ICMsgGCToGCIsTrustedServerResponse
         * @property {boolean|null} [is_trusted] CMsgGCToGCIsTrustedServerResponse is_trusted
         */
    
        /**
         * Constructs a new CMsgGCToGCIsTrustedServerResponse.
         * @exports CMsgGCToGCIsTrustedServerResponse
         * @classdesc Represents a CMsgGCToGCIsTrustedServerResponse.
         * @implements ICMsgGCToGCIsTrustedServerResponse
         * @constructor
         * @param {ICMsgGCToGCIsTrustedServerResponse=} [properties] Properties to set
         */
        function CMsgGCToGCIsTrustedServerResponse(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCIsTrustedServerResponse is_trusted.
         * @member {boolean} is_trusted
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @instance
         */
        CMsgGCToGCIsTrustedServerResponse.prototype.is_trusted = false;
    
        /**
         * Creates a new CMsgGCToGCIsTrustedServerResponse instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {ICMsgGCToGCIsTrustedServerResponse=} [properties] Properties to set
         * @returns {CMsgGCToGCIsTrustedServerResponse} CMsgGCToGCIsTrustedServerResponse instance
         */
        CMsgGCToGCIsTrustedServerResponse.create = function create(properties) {
            return new CMsgGCToGCIsTrustedServerResponse(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCIsTrustedServerResponse message. Does not implicitly {@link CMsgGCToGCIsTrustedServerResponse.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {ICMsgGCToGCIsTrustedServerResponse} message CMsgGCToGCIsTrustedServerResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCIsTrustedServerResponse.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.is_trusted != null && Object.hasOwnProperty.call(message, "is_trusted"))
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.is_trusted);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCIsTrustedServerResponse message, length delimited. Does not implicitly {@link CMsgGCToGCIsTrustedServerResponse.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {ICMsgGCToGCIsTrustedServerResponse} message CMsgGCToGCIsTrustedServerResponse message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCIsTrustedServerResponse.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCIsTrustedServerResponse message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCIsTrustedServerResponse} CMsgGCToGCIsTrustedServerResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCIsTrustedServerResponse.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCIsTrustedServerResponse();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.is_trusted = reader.bool();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCIsTrustedServerResponse message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCIsTrustedServerResponse} CMsgGCToGCIsTrustedServerResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCIsTrustedServerResponse.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCIsTrustedServerResponse message.
         * @function verify
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCIsTrustedServerResponse.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.is_trusted != null && message.hasOwnProperty("is_trusted"))
                if (typeof message.is_trusted !== "boolean")
                    return "is_trusted: boolean expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCIsTrustedServerResponse message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCIsTrustedServerResponse} CMsgGCToGCIsTrustedServerResponse
         */
        CMsgGCToGCIsTrustedServerResponse.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCIsTrustedServerResponse)
                return object;
            var message = new $root.CMsgGCToGCIsTrustedServerResponse();
            if (object.is_trusted != null)
                message.is_trusted = Boolean(object.is_trusted);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCIsTrustedServerResponse message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {CMsgGCToGCIsTrustedServerResponse} message CMsgGCToGCIsTrustedServerResponse
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCIsTrustedServerResponse.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.is_trusted = false;
            if (message.is_trusted != null && message.hasOwnProperty("is_trusted"))
                object.is_trusted = message.is_trusted;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCIsTrustedServerResponse to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCIsTrustedServerResponse.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCIsTrustedServerResponse
         * @function getTypeUrl
         * @memberof CMsgGCToGCIsTrustedServerResponse
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCIsTrustedServerResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCIsTrustedServerResponse";
        };
    
        return CMsgGCToGCIsTrustedServerResponse;
    })();
    
    $root.CMsgGCToGCBroadcastConsoleCommand = (function() {
    
        /**
         * Properties of a CMsgGCToGCBroadcastConsoleCommand.
         * @exports ICMsgGCToGCBroadcastConsoleCommand
         * @interface ICMsgGCToGCBroadcastConsoleCommand
         * @property {string|null} [con_command] CMsgGCToGCBroadcastConsoleCommand con_command
         */
    
        /**
         * Constructs a new CMsgGCToGCBroadcastConsoleCommand.
         * @exports CMsgGCToGCBroadcastConsoleCommand
         * @classdesc Represents a CMsgGCToGCBroadcastConsoleCommand.
         * @implements ICMsgGCToGCBroadcastConsoleCommand
         * @constructor
         * @param {ICMsgGCToGCBroadcastConsoleCommand=} [properties] Properties to set
         */
        function CMsgGCToGCBroadcastConsoleCommand(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCBroadcastConsoleCommand con_command.
         * @member {string} con_command
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @instance
         */
        CMsgGCToGCBroadcastConsoleCommand.prototype.con_command = "";
    
        /**
         * Creates a new CMsgGCToGCBroadcastConsoleCommand instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {ICMsgGCToGCBroadcastConsoleCommand=} [properties] Properties to set
         * @returns {CMsgGCToGCBroadcastConsoleCommand} CMsgGCToGCBroadcastConsoleCommand instance
         */
        CMsgGCToGCBroadcastConsoleCommand.create = function create(properties) {
            return new CMsgGCToGCBroadcastConsoleCommand(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCBroadcastConsoleCommand message. Does not implicitly {@link CMsgGCToGCBroadcastConsoleCommand.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {ICMsgGCToGCBroadcastConsoleCommand} message CMsgGCToGCBroadcastConsoleCommand message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBroadcastConsoleCommand.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.con_command != null && Object.hasOwnProperty.call(message, "con_command"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.con_command);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCBroadcastConsoleCommand message, length delimited. Does not implicitly {@link CMsgGCToGCBroadcastConsoleCommand.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {ICMsgGCToGCBroadcastConsoleCommand} message CMsgGCToGCBroadcastConsoleCommand message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCBroadcastConsoleCommand.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCBroadcastConsoleCommand message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCBroadcastConsoleCommand} CMsgGCToGCBroadcastConsoleCommand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBroadcastConsoleCommand.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCBroadcastConsoleCommand();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.con_command = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCBroadcastConsoleCommand message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCBroadcastConsoleCommand} CMsgGCToGCBroadcastConsoleCommand
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCBroadcastConsoleCommand.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCBroadcastConsoleCommand message.
         * @function verify
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCBroadcastConsoleCommand.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.con_command != null && message.hasOwnProperty("con_command"))
                if (!$util.isString(message.con_command))
                    return "con_command: string expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCBroadcastConsoleCommand message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCBroadcastConsoleCommand} CMsgGCToGCBroadcastConsoleCommand
         */
        CMsgGCToGCBroadcastConsoleCommand.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCBroadcastConsoleCommand)
                return object;
            var message = new $root.CMsgGCToGCBroadcastConsoleCommand();
            if (object.con_command != null)
                message.con_command = String(object.con_command);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCBroadcastConsoleCommand message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {CMsgGCToGCBroadcastConsoleCommand} message CMsgGCToGCBroadcastConsoleCommand
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCBroadcastConsoleCommand.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.con_command = "";
            if (message.con_command != null && message.hasOwnProperty("con_command"))
                object.con_command = message.con_command;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCBroadcastConsoleCommand to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCBroadcastConsoleCommand.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCBroadcastConsoleCommand
         * @function getTypeUrl
         * @memberof CMsgGCToGCBroadcastConsoleCommand
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCBroadcastConsoleCommand.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCBroadcastConsoleCommand";
        };
    
        return CMsgGCToGCBroadcastConsoleCommand;
    })();
    
    $root.CMsgGCServerVersionUpdated = (function() {
    
        /**
         * Properties of a CMsgGCServerVersionUpdated.
         * @exports ICMsgGCServerVersionUpdated
         * @interface ICMsgGCServerVersionUpdated
         * @property {number|null} [server_version] CMsgGCServerVersionUpdated server_version
         */
    
        /**
         * Constructs a new CMsgGCServerVersionUpdated.
         * @exports CMsgGCServerVersionUpdated
         * @classdesc Represents a CMsgGCServerVersionUpdated.
         * @implements ICMsgGCServerVersionUpdated
         * @constructor
         * @param {ICMsgGCServerVersionUpdated=} [properties] Properties to set
         */
        function CMsgGCServerVersionUpdated(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCServerVersionUpdated server_version.
         * @member {number} server_version
         * @memberof CMsgGCServerVersionUpdated
         * @instance
         */
        CMsgGCServerVersionUpdated.prototype.server_version = 0;
    
        /**
         * Creates a new CMsgGCServerVersionUpdated instance using the specified properties.
         * @function create
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {ICMsgGCServerVersionUpdated=} [properties] Properties to set
         * @returns {CMsgGCServerVersionUpdated} CMsgGCServerVersionUpdated instance
         */
        CMsgGCServerVersionUpdated.create = function create(properties) {
            return new CMsgGCServerVersionUpdated(properties);
        };
    
        /**
         * Encodes the specified CMsgGCServerVersionUpdated message. Does not implicitly {@link CMsgGCServerVersionUpdated.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {ICMsgGCServerVersionUpdated} message CMsgGCServerVersionUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCServerVersionUpdated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.server_version != null && Object.hasOwnProperty.call(message, "server_version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.server_version);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCServerVersionUpdated message, length delimited. Does not implicitly {@link CMsgGCServerVersionUpdated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {ICMsgGCServerVersionUpdated} message CMsgGCServerVersionUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCServerVersionUpdated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCServerVersionUpdated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCServerVersionUpdated} CMsgGCServerVersionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCServerVersionUpdated.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCServerVersionUpdated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.server_version = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCServerVersionUpdated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCServerVersionUpdated} CMsgGCServerVersionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCServerVersionUpdated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCServerVersionUpdated message.
         * @function verify
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCServerVersionUpdated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.server_version != null && message.hasOwnProperty("server_version"))
                if (!$util.isInteger(message.server_version))
                    return "server_version: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCServerVersionUpdated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCServerVersionUpdated} CMsgGCServerVersionUpdated
         */
        CMsgGCServerVersionUpdated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCServerVersionUpdated)
                return object;
            var message = new $root.CMsgGCServerVersionUpdated();
            if (object.server_version != null)
                message.server_version = object.server_version >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCServerVersionUpdated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {CMsgGCServerVersionUpdated} message CMsgGCServerVersionUpdated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCServerVersionUpdated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.server_version = 0;
            if (message.server_version != null && message.hasOwnProperty("server_version"))
                object.server_version = message.server_version;
            return object;
        };
    
        /**
         * Converts this CMsgGCServerVersionUpdated to JSON.
         * @function toJSON
         * @memberof CMsgGCServerVersionUpdated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCServerVersionUpdated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCServerVersionUpdated
         * @function getTypeUrl
         * @memberof CMsgGCServerVersionUpdated
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCServerVersionUpdated.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCServerVersionUpdated";
        };
    
        return CMsgGCServerVersionUpdated;
    })();
    
    $root.CMsgGCClientVersionUpdated = (function() {
    
        /**
         * Properties of a CMsgGCClientVersionUpdated.
         * @exports ICMsgGCClientVersionUpdated
         * @interface ICMsgGCClientVersionUpdated
         * @property {number|null} [client_version] CMsgGCClientVersionUpdated client_version
         */
    
        /**
         * Constructs a new CMsgGCClientVersionUpdated.
         * @exports CMsgGCClientVersionUpdated
         * @classdesc Represents a CMsgGCClientVersionUpdated.
         * @implements ICMsgGCClientVersionUpdated
         * @constructor
         * @param {ICMsgGCClientVersionUpdated=} [properties] Properties to set
         */
        function CMsgGCClientVersionUpdated(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCClientVersionUpdated client_version.
         * @member {number} client_version
         * @memberof CMsgGCClientVersionUpdated
         * @instance
         */
        CMsgGCClientVersionUpdated.prototype.client_version = 0;
    
        /**
         * Creates a new CMsgGCClientVersionUpdated instance using the specified properties.
         * @function create
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {ICMsgGCClientVersionUpdated=} [properties] Properties to set
         * @returns {CMsgGCClientVersionUpdated} CMsgGCClientVersionUpdated instance
         */
        CMsgGCClientVersionUpdated.create = function create(properties) {
            return new CMsgGCClientVersionUpdated(properties);
        };
    
        /**
         * Encodes the specified CMsgGCClientVersionUpdated message. Does not implicitly {@link CMsgGCClientVersionUpdated.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {ICMsgGCClientVersionUpdated} message CMsgGCClientVersionUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClientVersionUpdated.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.client_version != null && Object.hasOwnProperty.call(message, "client_version"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.client_version);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCClientVersionUpdated message, length delimited. Does not implicitly {@link CMsgGCClientVersionUpdated.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {ICMsgGCClientVersionUpdated} message CMsgGCClientVersionUpdated message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCClientVersionUpdated.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCClientVersionUpdated message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCClientVersionUpdated} CMsgGCClientVersionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClientVersionUpdated.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCClientVersionUpdated();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.client_version = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCClientVersionUpdated message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCClientVersionUpdated} CMsgGCClientVersionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCClientVersionUpdated.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCClientVersionUpdated message.
         * @function verify
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCClientVersionUpdated.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.client_version != null && message.hasOwnProperty("client_version"))
                if (!$util.isInteger(message.client_version))
                    return "client_version: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCClientVersionUpdated message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCClientVersionUpdated} CMsgGCClientVersionUpdated
         */
        CMsgGCClientVersionUpdated.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCClientVersionUpdated)
                return object;
            var message = new $root.CMsgGCClientVersionUpdated();
            if (object.client_version != null)
                message.client_version = object.client_version >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCClientVersionUpdated message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {CMsgGCClientVersionUpdated} message CMsgGCClientVersionUpdated
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCClientVersionUpdated.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.client_version = 0;
            if (message.client_version != null && message.hasOwnProperty("client_version"))
                object.client_version = message.client_version;
            return object;
        };
    
        /**
         * Converts this CMsgGCClientVersionUpdated to JSON.
         * @function toJSON
         * @memberof CMsgGCClientVersionUpdated
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCClientVersionUpdated.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCClientVersionUpdated
         * @function getTypeUrl
         * @memberof CMsgGCClientVersionUpdated
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCClientVersionUpdated.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCClientVersionUpdated";
        };
    
        return CMsgGCClientVersionUpdated;
    })();
    
    $root.CMsgGCToGCWebAPIAccountChanged = (function() {
    
        /**
         * Properties of a CMsgGCToGCWebAPIAccountChanged.
         * @exports ICMsgGCToGCWebAPIAccountChanged
         * @interface ICMsgGCToGCWebAPIAccountChanged
         */
    
        /**
         * Constructs a new CMsgGCToGCWebAPIAccountChanged.
         * @exports CMsgGCToGCWebAPIAccountChanged
         * @classdesc Represents a CMsgGCToGCWebAPIAccountChanged.
         * @implements ICMsgGCToGCWebAPIAccountChanged
         * @constructor
         * @param {ICMsgGCToGCWebAPIAccountChanged=} [properties] Properties to set
         */
        function CMsgGCToGCWebAPIAccountChanged(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * Creates a new CMsgGCToGCWebAPIAccountChanged instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {ICMsgGCToGCWebAPIAccountChanged=} [properties] Properties to set
         * @returns {CMsgGCToGCWebAPIAccountChanged} CMsgGCToGCWebAPIAccountChanged instance
         */
        CMsgGCToGCWebAPIAccountChanged.create = function create(properties) {
            return new CMsgGCToGCWebAPIAccountChanged(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCWebAPIAccountChanged message. Does not implicitly {@link CMsgGCToGCWebAPIAccountChanged.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {ICMsgGCToGCWebAPIAccountChanged} message CMsgGCToGCWebAPIAccountChanged message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCWebAPIAccountChanged.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCWebAPIAccountChanged message, length delimited. Does not implicitly {@link CMsgGCToGCWebAPIAccountChanged.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {ICMsgGCToGCWebAPIAccountChanged} message CMsgGCToGCWebAPIAccountChanged message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCWebAPIAccountChanged.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCWebAPIAccountChanged message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCWebAPIAccountChanged} CMsgGCToGCWebAPIAccountChanged
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCWebAPIAccountChanged.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCWebAPIAccountChanged();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCWebAPIAccountChanged message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCWebAPIAccountChanged} CMsgGCToGCWebAPIAccountChanged
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCWebAPIAccountChanged.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCWebAPIAccountChanged message.
         * @function verify
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCWebAPIAccountChanged.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCWebAPIAccountChanged message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCWebAPIAccountChanged} CMsgGCToGCWebAPIAccountChanged
         */
        CMsgGCToGCWebAPIAccountChanged.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCWebAPIAccountChanged)
                return object;
            return new $root.CMsgGCToGCWebAPIAccountChanged();
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCWebAPIAccountChanged message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {CMsgGCToGCWebAPIAccountChanged} message CMsgGCToGCWebAPIAccountChanged
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCWebAPIAccountChanged.toObject = function toObject() {
            return {};
        };
    
        /**
         * Converts this CMsgGCToGCWebAPIAccountChanged to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCWebAPIAccountChanged.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCWebAPIAccountChanged
         * @function getTypeUrl
         * @memberof CMsgGCToGCWebAPIAccountChanged
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCWebAPIAccountChanged.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCWebAPIAccountChanged";
        };
    
        return CMsgGCToGCWebAPIAccountChanged;
    })();
    
    $root.CMsgGCToGCRequestPassportItemGrant = (function() {
    
        /**
         * Properties of a CMsgGCToGCRequestPassportItemGrant.
         * @exports ICMsgGCToGCRequestPassportItemGrant
         * @interface ICMsgGCToGCRequestPassportItemGrant
         * @property {number|Long|null} [steam_id] CMsgGCToGCRequestPassportItemGrant steam_id
         * @property {number|null} [league_id] CMsgGCToGCRequestPassportItemGrant league_id
         * @property {number|null} [reward_flag] CMsgGCToGCRequestPassportItemGrant reward_flag
         */
    
        /**
         * Constructs a new CMsgGCToGCRequestPassportItemGrant.
         * @exports CMsgGCToGCRequestPassportItemGrant
         * @classdesc Represents a CMsgGCToGCRequestPassportItemGrant.
         * @implements ICMsgGCToGCRequestPassportItemGrant
         * @constructor
         * @param {ICMsgGCToGCRequestPassportItemGrant=} [properties] Properties to set
         */
        function CMsgGCToGCRequestPassportItemGrant(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGCToGCRequestPassportItemGrant steam_id.
         * @member {number|Long} steam_id
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @instance
         */
        CMsgGCToGCRequestPassportItemGrant.prototype.steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGCToGCRequestPassportItemGrant league_id.
         * @member {number} league_id
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @instance
         */
        CMsgGCToGCRequestPassportItemGrant.prototype.league_id = 0;
    
        /**
         * CMsgGCToGCRequestPassportItemGrant reward_flag.
         * @member {number} reward_flag
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @instance
         */
        CMsgGCToGCRequestPassportItemGrant.prototype.reward_flag = 0;
    
        /**
         * Creates a new CMsgGCToGCRequestPassportItemGrant instance using the specified properties.
         * @function create
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {ICMsgGCToGCRequestPassportItemGrant=} [properties] Properties to set
         * @returns {CMsgGCToGCRequestPassportItemGrant} CMsgGCToGCRequestPassportItemGrant instance
         */
        CMsgGCToGCRequestPassportItemGrant.create = function create(properties) {
            return new CMsgGCToGCRequestPassportItemGrant(properties);
        };
    
        /**
         * Encodes the specified CMsgGCToGCRequestPassportItemGrant message. Does not implicitly {@link CMsgGCToGCRequestPassportItemGrant.verify|verify} messages.
         * @function encode
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {ICMsgGCToGCRequestPassportItemGrant} message CMsgGCToGCRequestPassportItemGrant message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCRequestPassportItemGrant.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.steam_id != null && Object.hasOwnProperty.call(message, "steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.steam_id);
            if (message.league_id != null && Object.hasOwnProperty.call(message, "league_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.league_id);
            if (message.reward_flag != null && Object.hasOwnProperty.call(message, "reward_flag"))
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.reward_flag);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGCToGCRequestPassportItemGrant message, length delimited. Does not implicitly {@link CMsgGCToGCRequestPassportItemGrant.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {ICMsgGCToGCRequestPassportItemGrant} message CMsgGCToGCRequestPassportItemGrant message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGCToGCRequestPassportItemGrant.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGCToGCRequestPassportItemGrant message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGCToGCRequestPassportItemGrant} CMsgGCToGCRequestPassportItemGrant
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCRequestPassportItemGrant.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGCToGCRequestPassportItemGrant();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.steam_id = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.league_id = reader.uint32();
                        break;
                    }
                case 3: {
                        message.reward_flag = reader.int32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGCToGCRequestPassportItemGrant message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGCToGCRequestPassportItemGrant} CMsgGCToGCRequestPassportItemGrant
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGCToGCRequestPassportItemGrant.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGCToGCRequestPassportItemGrant message.
         * @function verify
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGCToGCRequestPassportItemGrant.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (!$util.isInteger(message.steam_id) && !(message.steam_id && $util.isInteger(message.steam_id.low) && $util.isInteger(message.steam_id.high)))
                    return "steam_id: integer|Long expected";
            if (message.league_id != null && message.hasOwnProperty("league_id"))
                if (!$util.isInteger(message.league_id))
                    return "league_id: integer expected";
            if (message.reward_flag != null && message.hasOwnProperty("reward_flag"))
                if (!$util.isInteger(message.reward_flag))
                    return "reward_flag: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgGCToGCRequestPassportItemGrant message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGCToGCRequestPassportItemGrant} CMsgGCToGCRequestPassportItemGrant
         */
        CMsgGCToGCRequestPassportItemGrant.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGCToGCRequestPassportItemGrant)
                return object;
            var message = new $root.CMsgGCToGCRequestPassportItemGrant();
            if (object.steam_id != null)
                if ($util.Long)
                    (message.steam_id = $util.Long.fromValue(object.steam_id)).unsigned = false;
                else if (typeof object.steam_id === "string")
                    message.steam_id = parseInt(object.steam_id, 10);
                else if (typeof object.steam_id === "number")
                    message.steam_id = object.steam_id;
                else if (typeof object.steam_id === "object")
                    message.steam_id = new $util.LongBits(object.steam_id.low >>> 0, object.steam_id.high >>> 0).toNumber();
            if (object.league_id != null)
                message.league_id = object.league_id >>> 0;
            if (object.reward_flag != null)
                message.reward_flag = object.reward_flag | 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGCToGCRequestPassportItemGrant message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {CMsgGCToGCRequestPassportItemGrant} message CMsgGCToGCRequestPassportItemGrant
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGCToGCRequestPassportItemGrant.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steam_id = options.longs === String ? "0" : 0;
                object.league_id = 0;
                object.reward_flag = 0;
            }
            if (message.steam_id != null && message.hasOwnProperty("steam_id"))
                if (typeof message.steam_id === "number")
                    object.steam_id = options.longs === String ? String(message.steam_id) : message.steam_id;
                else
                    object.steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.steam_id) : options.longs === Number ? new $util.LongBits(message.steam_id.low >>> 0, message.steam_id.high >>> 0).toNumber() : message.steam_id;
            if (message.league_id != null && message.hasOwnProperty("league_id"))
                object.league_id = message.league_id;
            if (message.reward_flag != null && message.hasOwnProperty("reward_flag"))
                object.reward_flag = message.reward_flag;
            return object;
        };
    
        /**
         * Converts this CMsgGCToGCRequestPassportItemGrant to JSON.
         * @function toJSON
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGCToGCRequestPassportItemGrant.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGCToGCRequestPassportItemGrant
         * @function getTypeUrl
         * @memberof CMsgGCToGCRequestPassportItemGrant
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGCToGCRequestPassportItemGrant.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGCToGCRequestPassportItemGrant";
        };
    
        return CMsgGCToGCRequestPassportItemGrant;
    })();
    
    $root.CMsgGameServerInfo = (function() {
    
        /**
         * Properties of a CMsgGameServerInfo.
         * @exports ICMsgGameServerInfo
         * @interface ICMsgGameServerInfo
         * @property {number|null} [server_public_ip_addr] CMsgGameServerInfo server_public_ip_addr
         * @property {number|null} [server_private_ip_addr] CMsgGameServerInfo server_private_ip_addr
         * @property {number|null} [server_port] CMsgGameServerInfo server_port
         * @property {number|null} [server_tv_port] CMsgGameServerInfo server_tv_port
         * @property {string|null} [server_key] CMsgGameServerInfo server_key
         * @property {boolean|null} [server_hibernation] CMsgGameServerInfo server_hibernation
         * @property {CMsgGameServerInfo.ServerType|null} [server_type] CMsgGameServerInfo server_type
         * @property {number|null} [server_region] CMsgGameServerInfo server_region
         * @property {number|null} [server_loadavg] CMsgGameServerInfo server_loadavg
         * @property {number|null} [server_tv_broadcast_time] CMsgGameServerInfo server_tv_broadcast_time
         * @property {number|null} [server_game_time] CMsgGameServerInfo server_game_time
         * @property {number|Long|null} [server_relay_connected_steam_id] CMsgGameServerInfo server_relay_connected_steam_id
         * @property {number|null} [relay_slots_max] CMsgGameServerInfo relay_slots_max
         * @property {number|null} [relays_connected] CMsgGameServerInfo relays_connected
         * @property {number|null} [relay_clients_connected] CMsgGameServerInfo relay_clients_connected
         * @property {number|Long|null} [relayed_game_server_steam_id] CMsgGameServerInfo relayed_game_server_steam_id
         * @property {number|null} [parent_relay_count] CMsgGameServerInfo parent_relay_count
         * @property {number|Long|null} [tv_secret_code] CMsgGameServerInfo tv_secret_code
         */
    
        /**
         * Constructs a new CMsgGameServerInfo.
         * @exports CMsgGameServerInfo
         * @classdesc Represents a CMsgGameServerInfo.
         * @implements ICMsgGameServerInfo
         * @constructor
         * @param {ICMsgGameServerInfo=} [properties] Properties to set
         */
        function CMsgGameServerInfo(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgGameServerInfo server_public_ip_addr.
         * @member {number} server_public_ip_addr
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_public_ip_addr = 0;
    
        /**
         * CMsgGameServerInfo server_private_ip_addr.
         * @member {number} server_private_ip_addr
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_private_ip_addr = 0;
    
        /**
         * CMsgGameServerInfo server_port.
         * @member {number} server_port
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_port = 0;
    
        /**
         * CMsgGameServerInfo server_tv_port.
         * @member {number} server_tv_port
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_tv_port = 0;
    
        /**
         * CMsgGameServerInfo server_key.
         * @member {string} server_key
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_key = "";
    
        /**
         * CMsgGameServerInfo server_hibernation.
         * @member {boolean} server_hibernation
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_hibernation = false;
    
        /**
         * CMsgGameServerInfo server_type.
         * @member {CMsgGameServerInfo.ServerType} server_type
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_type = 0;
    
        /**
         * CMsgGameServerInfo server_region.
         * @member {number} server_region
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_region = 0;
    
        /**
         * CMsgGameServerInfo server_loadavg.
         * @member {number} server_loadavg
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_loadavg = 0;
    
        /**
         * CMsgGameServerInfo server_tv_broadcast_time.
         * @member {number} server_tv_broadcast_time
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_tv_broadcast_time = 0;
    
        /**
         * CMsgGameServerInfo server_game_time.
         * @member {number} server_game_time
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_game_time = 0;
    
        /**
         * CMsgGameServerInfo server_relay_connected_steam_id.
         * @member {number|Long} server_relay_connected_steam_id
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.server_relay_connected_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGameServerInfo relay_slots_max.
         * @member {number} relay_slots_max
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.relay_slots_max = 0;
    
        /**
         * CMsgGameServerInfo relays_connected.
         * @member {number} relays_connected
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.relays_connected = 0;
    
        /**
         * CMsgGameServerInfo relay_clients_connected.
         * @member {number} relay_clients_connected
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.relay_clients_connected = 0;
    
        /**
         * CMsgGameServerInfo relayed_game_server_steam_id.
         * @member {number|Long} relayed_game_server_steam_id
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.relayed_game_server_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgGameServerInfo parent_relay_count.
         * @member {number} parent_relay_count
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.parent_relay_count = 0;
    
        /**
         * CMsgGameServerInfo tv_secret_code.
         * @member {number|Long} tv_secret_code
         * @memberof CMsgGameServerInfo
         * @instance
         */
        CMsgGameServerInfo.prototype.tv_secret_code = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * Creates a new CMsgGameServerInfo instance using the specified properties.
         * @function create
         * @memberof CMsgGameServerInfo
         * @static
         * @param {ICMsgGameServerInfo=} [properties] Properties to set
         * @returns {CMsgGameServerInfo} CMsgGameServerInfo instance
         */
        CMsgGameServerInfo.create = function create(properties) {
            return new CMsgGameServerInfo(properties);
        };
    
        /**
         * Encodes the specified CMsgGameServerInfo message. Does not implicitly {@link CMsgGameServerInfo.verify|verify} messages.
         * @function encode
         * @memberof CMsgGameServerInfo
         * @static
         * @param {ICMsgGameServerInfo} message CMsgGameServerInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGameServerInfo.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.server_public_ip_addr != null && Object.hasOwnProperty.call(message, "server_public_ip_addr"))
                writer.uint32(/* id 1, wireType 5 =*/13).fixed32(message.server_public_ip_addr);
            if (message.server_private_ip_addr != null && Object.hasOwnProperty.call(message, "server_private_ip_addr"))
                writer.uint32(/* id 2, wireType 5 =*/21).fixed32(message.server_private_ip_addr);
            if (message.server_port != null && Object.hasOwnProperty.call(message, "server_port"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.server_port);
            if (message.server_tv_port != null && Object.hasOwnProperty.call(message, "server_tv_port"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.server_tv_port);
            if (message.server_key != null && Object.hasOwnProperty.call(message, "server_key"))
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.server_key);
            if (message.server_hibernation != null && Object.hasOwnProperty.call(message, "server_hibernation"))
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.server_hibernation);
            if (message.server_type != null && Object.hasOwnProperty.call(message, "server_type"))
                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.server_type);
            if (message.server_region != null && Object.hasOwnProperty.call(message, "server_region"))
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.server_region);
            if (message.server_loadavg != null && Object.hasOwnProperty.call(message, "server_loadavg"))
                writer.uint32(/* id 9, wireType 5 =*/77).float(message.server_loadavg);
            if (message.server_tv_broadcast_time != null && Object.hasOwnProperty.call(message, "server_tv_broadcast_time"))
                writer.uint32(/* id 10, wireType 5 =*/85).float(message.server_tv_broadcast_time);
            if (message.server_game_time != null && Object.hasOwnProperty.call(message, "server_game_time"))
                writer.uint32(/* id 11, wireType 5 =*/93).float(message.server_game_time);
            if (message.server_relay_connected_steam_id != null && Object.hasOwnProperty.call(message, "server_relay_connected_steam_id"))
                writer.uint32(/* id 12, wireType 1 =*/97).fixed64(message.server_relay_connected_steam_id);
            if (message.relay_slots_max != null && Object.hasOwnProperty.call(message, "relay_slots_max"))
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.relay_slots_max);
            if (message.relays_connected != null && Object.hasOwnProperty.call(message, "relays_connected"))
                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.relays_connected);
            if (message.relay_clients_connected != null && Object.hasOwnProperty.call(message, "relay_clients_connected"))
                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.relay_clients_connected);
            if (message.relayed_game_server_steam_id != null && Object.hasOwnProperty.call(message, "relayed_game_server_steam_id"))
                writer.uint32(/* id 16, wireType 1 =*/129).fixed64(message.relayed_game_server_steam_id);
            if (message.parent_relay_count != null && Object.hasOwnProperty.call(message, "parent_relay_count"))
                writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.parent_relay_count);
            if (message.tv_secret_code != null && Object.hasOwnProperty.call(message, "tv_secret_code"))
                writer.uint32(/* id 18, wireType 1 =*/145).fixed64(message.tv_secret_code);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgGameServerInfo message, length delimited. Does not implicitly {@link CMsgGameServerInfo.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgGameServerInfo
         * @static
         * @param {ICMsgGameServerInfo} message CMsgGameServerInfo message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgGameServerInfo.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgGameServerInfo message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgGameServerInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgGameServerInfo} CMsgGameServerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGameServerInfo.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgGameServerInfo();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.server_public_ip_addr = reader.fixed32();
                        break;
                    }
                case 2: {
                        message.server_private_ip_addr = reader.fixed32();
                        break;
                    }
                case 3: {
                        message.server_port = reader.uint32();
                        break;
                    }
                case 4: {
                        message.server_tv_port = reader.uint32();
                        break;
                    }
                case 5: {
                        message.server_key = reader.string();
                        break;
                    }
                case 6: {
                        message.server_hibernation = reader.bool();
                        break;
                    }
                case 7: {
                        message.server_type = reader.int32();
                        break;
                    }
                case 8: {
                        message.server_region = reader.uint32();
                        break;
                    }
                case 9: {
                        message.server_loadavg = reader.float();
                        break;
                    }
                case 10: {
                        message.server_tv_broadcast_time = reader.float();
                        break;
                    }
                case 11: {
                        message.server_game_time = reader.float();
                        break;
                    }
                case 12: {
                        message.server_relay_connected_steam_id = reader.fixed64();
                        break;
                    }
                case 13: {
                        message.relay_slots_max = reader.uint32();
                        break;
                    }
                case 14: {
                        message.relays_connected = reader.int32();
                        break;
                    }
                case 15: {
                        message.relay_clients_connected = reader.int32();
                        break;
                    }
                case 16: {
                        message.relayed_game_server_steam_id = reader.fixed64();
                        break;
                    }
                case 17: {
                        message.parent_relay_count = reader.uint32();
                        break;
                    }
                case 18: {
                        message.tv_secret_code = reader.fixed64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgGameServerInfo message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgGameServerInfo
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgGameServerInfo} CMsgGameServerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgGameServerInfo.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgGameServerInfo message.
         * @function verify
         * @memberof CMsgGameServerInfo
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgGameServerInfo.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.server_public_ip_addr != null && message.hasOwnProperty("server_public_ip_addr"))
                if (!$util.isInteger(message.server_public_ip_addr))
                    return "server_public_ip_addr: integer expected";
            if (message.server_private_ip_addr != null && message.hasOwnProperty("server_private_ip_addr"))
                if (!$util.isInteger(message.server_private_ip_addr))
                    return "server_private_ip_addr: integer expected";
            if (message.server_port != null && message.hasOwnProperty("server_port"))
                if (!$util.isInteger(message.server_port))
                    return "server_port: integer expected";
            if (message.server_tv_port != null && message.hasOwnProperty("server_tv_port"))
                if (!$util.isInteger(message.server_tv_port))
                    return "server_tv_port: integer expected";
            if (message.server_key != null && message.hasOwnProperty("server_key"))
                if (!$util.isString(message.server_key))
                    return "server_key: string expected";
            if (message.server_hibernation != null && message.hasOwnProperty("server_hibernation"))
                if (typeof message.server_hibernation !== "boolean")
                    return "server_hibernation: boolean expected";
            if (message.server_type != null && message.hasOwnProperty("server_type"))
                switch (message.server_type) {
                default:
                    return "server_type: enum value expected";
                case 0:
                case 1:
                case 2:
                    break;
                }
            if (message.server_region != null && message.hasOwnProperty("server_region"))
                if (!$util.isInteger(message.server_region))
                    return "server_region: integer expected";
            if (message.server_loadavg != null && message.hasOwnProperty("server_loadavg"))
                if (typeof message.server_loadavg !== "number")
                    return "server_loadavg: number expected";
            if (message.server_tv_broadcast_time != null && message.hasOwnProperty("server_tv_broadcast_time"))
                if (typeof message.server_tv_broadcast_time !== "number")
                    return "server_tv_broadcast_time: number expected";
            if (message.server_game_time != null && message.hasOwnProperty("server_game_time"))
                if (typeof message.server_game_time !== "number")
                    return "server_game_time: number expected";
            if (message.server_relay_connected_steam_id != null && message.hasOwnProperty("server_relay_connected_steam_id"))
                if (!$util.isInteger(message.server_relay_connected_steam_id) && !(message.server_relay_connected_steam_id && $util.isInteger(message.server_relay_connected_steam_id.low) && $util.isInteger(message.server_relay_connected_steam_id.high)))
                    return "server_relay_connected_steam_id: integer|Long expected";
            if (message.relay_slots_max != null && message.hasOwnProperty("relay_slots_max"))
                if (!$util.isInteger(message.relay_slots_max))
                    return "relay_slots_max: integer expected";
            if (message.relays_connected != null && message.hasOwnProperty("relays_connected"))
                if (!$util.isInteger(message.relays_connected))
                    return "relays_connected: integer expected";
            if (message.relay_clients_connected != null && message.hasOwnProperty("relay_clients_connected"))
                if (!$util.isInteger(message.relay_clients_connected))
                    return "relay_clients_connected: integer expected";
            if (message.relayed_game_server_steam_id != null && message.hasOwnProperty("relayed_game_server_steam_id"))
                if (!$util.isInteger(message.relayed_game_server_steam_id) && !(message.relayed_game_server_steam_id && $util.isInteger(message.relayed_game_server_steam_id.low) && $util.isInteger(message.relayed_game_server_steam_id.high)))
                    return "relayed_game_server_steam_id: integer|Long expected";
            if (message.parent_relay_count != null && message.hasOwnProperty("parent_relay_count"))
                if (!$util.isInteger(message.parent_relay_count))
                    return "parent_relay_count: integer expected";
            if (message.tv_secret_code != null && message.hasOwnProperty("tv_secret_code"))
                if (!$util.isInteger(message.tv_secret_code) && !(message.tv_secret_code && $util.isInteger(message.tv_secret_code.low) && $util.isInteger(message.tv_secret_code.high)))
                    return "tv_secret_code: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgGameServerInfo message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgGameServerInfo
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgGameServerInfo} CMsgGameServerInfo
         */
        CMsgGameServerInfo.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgGameServerInfo)
                return object;
            var message = new $root.CMsgGameServerInfo();
            if (object.server_public_ip_addr != null)
                message.server_public_ip_addr = object.server_public_ip_addr >>> 0;
            if (object.server_private_ip_addr != null)
                message.server_private_ip_addr = object.server_private_ip_addr >>> 0;
            if (object.server_port != null)
                message.server_port = object.server_port >>> 0;
            if (object.server_tv_port != null)
                message.server_tv_port = object.server_tv_port >>> 0;
            if (object.server_key != null)
                message.server_key = String(object.server_key);
            if (object.server_hibernation != null)
                message.server_hibernation = Boolean(object.server_hibernation);
            switch (object.server_type) {
            default:
                if (typeof object.server_type === "number") {
                    message.server_type = object.server_type;
                    break;
                }
                break;
            case "UNSPECIFIED":
            case 0:
                message.server_type = 0;
                break;
            case "GAME":
            case 1:
                message.server_type = 1;
                break;
            case "PROXY":
            case 2:
                message.server_type = 2;
                break;
            }
            if (object.server_region != null)
                message.server_region = object.server_region >>> 0;
            if (object.server_loadavg != null)
                message.server_loadavg = Number(object.server_loadavg);
            if (object.server_tv_broadcast_time != null)
                message.server_tv_broadcast_time = Number(object.server_tv_broadcast_time);
            if (object.server_game_time != null)
                message.server_game_time = Number(object.server_game_time);
            if (object.server_relay_connected_steam_id != null)
                if ($util.Long)
                    (message.server_relay_connected_steam_id = $util.Long.fromValue(object.server_relay_connected_steam_id)).unsigned = false;
                else if (typeof object.server_relay_connected_steam_id === "string")
                    message.server_relay_connected_steam_id = parseInt(object.server_relay_connected_steam_id, 10);
                else if (typeof object.server_relay_connected_steam_id === "number")
                    message.server_relay_connected_steam_id = object.server_relay_connected_steam_id;
                else if (typeof object.server_relay_connected_steam_id === "object")
                    message.server_relay_connected_steam_id = new $util.LongBits(object.server_relay_connected_steam_id.low >>> 0, object.server_relay_connected_steam_id.high >>> 0).toNumber();
            if (object.relay_slots_max != null)
                message.relay_slots_max = object.relay_slots_max >>> 0;
            if (object.relays_connected != null)
                message.relays_connected = object.relays_connected | 0;
            if (object.relay_clients_connected != null)
                message.relay_clients_connected = object.relay_clients_connected | 0;
            if (object.relayed_game_server_steam_id != null)
                if ($util.Long)
                    (message.relayed_game_server_steam_id = $util.Long.fromValue(object.relayed_game_server_steam_id)).unsigned = false;
                else if (typeof object.relayed_game_server_steam_id === "string")
                    message.relayed_game_server_steam_id = parseInt(object.relayed_game_server_steam_id, 10);
                else if (typeof object.relayed_game_server_steam_id === "number")
                    message.relayed_game_server_steam_id = object.relayed_game_server_steam_id;
                else if (typeof object.relayed_game_server_steam_id === "object")
                    message.relayed_game_server_steam_id = new $util.LongBits(object.relayed_game_server_steam_id.low >>> 0, object.relayed_game_server_steam_id.high >>> 0).toNumber();
            if (object.parent_relay_count != null)
                message.parent_relay_count = object.parent_relay_count >>> 0;
            if (object.tv_secret_code != null)
                if ($util.Long)
                    (message.tv_secret_code = $util.Long.fromValue(object.tv_secret_code)).unsigned = false;
                else if (typeof object.tv_secret_code === "string")
                    message.tv_secret_code = parseInt(object.tv_secret_code, 10);
                else if (typeof object.tv_secret_code === "number")
                    message.tv_secret_code = object.tv_secret_code;
                else if (typeof object.tv_secret_code === "object")
                    message.tv_secret_code = new $util.LongBits(object.tv_secret_code.low >>> 0, object.tv_secret_code.high >>> 0).toNumber();
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgGameServerInfo message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgGameServerInfo
         * @static
         * @param {CMsgGameServerInfo} message CMsgGameServerInfo
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgGameServerInfo.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.server_public_ip_addr = 0;
                object.server_private_ip_addr = 0;
                object.server_port = 0;
                object.server_tv_port = 0;
                object.server_key = "";
                object.server_hibernation = false;
                object.server_type = options.enums === String ? "UNSPECIFIED" : 0;
                object.server_region = 0;
                object.server_loadavg = 0;
                object.server_tv_broadcast_time = 0;
                object.server_game_time = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.server_relay_connected_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.server_relay_connected_steam_id = options.longs === String ? "0" : 0;
                object.relay_slots_max = 0;
                object.relays_connected = 0;
                object.relay_clients_connected = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.relayed_game_server_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.relayed_game_server_steam_id = options.longs === String ? "0" : 0;
                object.parent_relay_count = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.tv_secret_code = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.tv_secret_code = options.longs === String ? "0" : 0;
            }
            if (message.server_public_ip_addr != null && message.hasOwnProperty("server_public_ip_addr"))
                object.server_public_ip_addr = message.server_public_ip_addr;
            if (message.server_private_ip_addr != null && message.hasOwnProperty("server_private_ip_addr"))
                object.server_private_ip_addr = message.server_private_ip_addr;
            if (message.server_port != null && message.hasOwnProperty("server_port"))
                object.server_port = message.server_port;
            if (message.server_tv_port != null && message.hasOwnProperty("server_tv_port"))
                object.server_tv_port = message.server_tv_port;
            if (message.server_key != null && message.hasOwnProperty("server_key"))
                object.server_key = message.server_key;
            if (message.server_hibernation != null && message.hasOwnProperty("server_hibernation"))
                object.server_hibernation = message.server_hibernation;
            if (message.server_type != null && message.hasOwnProperty("server_type"))
                object.server_type = options.enums === String ? $root.CMsgGameServerInfo.ServerType[message.server_type] === undefined ? message.server_type : $root.CMsgGameServerInfo.ServerType[message.server_type] : message.server_type;
            if (message.server_region != null && message.hasOwnProperty("server_region"))
                object.server_region = message.server_region;
            if (message.server_loadavg != null && message.hasOwnProperty("server_loadavg"))
                object.server_loadavg = options.json && !isFinite(message.server_loadavg) ? String(message.server_loadavg) : message.server_loadavg;
            if (message.server_tv_broadcast_time != null && message.hasOwnProperty("server_tv_broadcast_time"))
                object.server_tv_broadcast_time = options.json && !isFinite(message.server_tv_broadcast_time) ? String(message.server_tv_broadcast_time) : message.server_tv_broadcast_time;
            if (message.server_game_time != null && message.hasOwnProperty("server_game_time"))
                object.server_game_time = options.json && !isFinite(message.server_game_time) ? String(message.server_game_time) : message.server_game_time;
            if (message.server_relay_connected_steam_id != null && message.hasOwnProperty("server_relay_connected_steam_id"))
                if (typeof message.server_relay_connected_steam_id === "number")
                    object.server_relay_connected_steam_id = options.longs === String ? String(message.server_relay_connected_steam_id) : message.server_relay_connected_steam_id;
                else
                    object.server_relay_connected_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.server_relay_connected_steam_id) : options.longs === Number ? new $util.LongBits(message.server_relay_connected_steam_id.low >>> 0, message.server_relay_connected_steam_id.high >>> 0).toNumber() : message.server_relay_connected_steam_id;
            if (message.relay_slots_max != null && message.hasOwnProperty("relay_slots_max"))
                object.relay_slots_max = message.relay_slots_max;
            if (message.relays_connected != null && message.hasOwnProperty("relays_connected"))
                object.relays_connected = message.relays_connected;
            if (message.relay_clients_connected != null && message.hasOwnProperty("relay_clients_connected"))
                object.relay_clients_connected = message.relay_clients_connected;
            if (message.relayed_game_server_steam_id != null && message.hasOwnProperty("relayed_game_server_steam_id"))
                if (typeof message.relayed_game_server_steam_id === "number")
                    object.relayed_game_server_steam_id = options.longs === String ? String(message.relayed_game_server_steam_id) : message.relayed_game_server_steam_id;
                else
                    object.relayed_game_server_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.relayed_game_server_steam_id) : options.longs === Number ? new $util.LongBits(message.relayed_game_server_steam_id.low >>> 0, message.relayed_game_server_steam_id.high >>> 0).toNumber() : message.relayed_game_server_steam_id;
            if (message.parent_relay_count != null && message.hasOwnProperty("parent_relay_count"))
                object.parent_relay_count = message.parent_relay_count;
            if (message.tv_secret_code != null && message.hasOwnProperty("tv_secret_code"))
                if (typeof message.tv_secret_code === "number")
                    object.tv_secret_code = options.longs === String ? String(message.tv_secret_code) : message.tv_secret_code;
                else
                    object.tv_secret_code = options.longs === String ? $util.Long.prototype.toString.call(message.tv_secret_code) : options.longs === Number ? new $util.LongBits(message.tv_secret_code.low >>> 0, message.tv_secret_code.high >>> 0).toNumber() : message.tv_secret_code;
            return object;
        };
    
        /**
         * Converts this CMsgGameServerInfo to JSON.
         * @function toJSON
         * @memberof CMsgGameServerInfo
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgGameServerInfo.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgGameServerInfo
         * @function getTypeUrl
         * @memberof CMsgGameServerInfo
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgGameServerInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgGameServerInfo";
        };
    
        /**
         * ServerType enum.
         * @name CMsgGameServerInfo.ServerType
         * @enum {number}
         * @property {number} UNSPECIFIED=0 UNSPECIFIED value
         * @property {number} GAME=1 GAME value
         * @property {number} PROXY=2 PROXY value
         */
        CMsgGameServerInfo.ServerType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "UNSPECIFIED"] = 0;
            values[valuesById[1] = "GAME"] = 1;
            values[valuesById[2] = "PROXY"] = 2;
            return values;
        })();
    
        return CMsgGameServerInfo;
    })();
    
    $root.CSOEconEquipSlot = (function() {
    
        /**
         * Properties of a CSOEconEquipSlot.
         * @exports ICSOEconEquipSlot
         * @interface ICSOEconEquipSlot
         * @property {number|null} [account_id] CSOEconEquipSlot account_id
         * @property {number|null} [class_id] CSOEconEquipSlot class_id
         * @property {number|null} [slot_id] CSOEconEquipSlot slot_id
         * @property {number|Long|null} [item_id] CSOEconEquipSlot item_id
         * @property {number|null} [item_definition] CSOEconEquipSlot item_definition
         */
    
        /**
         * Constructs a new CSOEconEquipSlot.
         * @exports CSOEconEquipSlot
         * @classdesc Represents a CSOEconEquipSlot.
         * @implements ICSOEconEquipSlot
         * @constructor
         * @param {ICSOEconEquipSlot=} [properties] Properties to set
         */
        function CSOEconEquipSlot(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconEquipSlot account_id.
         * @member {number} account_id
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.account_id = 0;
    
        /**
         * CSOEconEquipSlot class_id.
         * @member {number} class_id
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.class_id = 0;
    
        /**
         * CSOEconEquipSlot slot_id.
         * @member {number} slot_id
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.slot_id = 0;
    
        /**
         * CSOEconEquipSlot item_id.
         * @member {number|Long} item_id
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconEquipSlot item_definition.
         * @member {number} item_definition
         * @memberof CSOEconEquipSlot
         * @instance
         */
        CSOEconEquipSlot.prototype.item_definition = 0;
    
        /**
         * Creates a new CSOEconEquipSlot instance using the specified properties.
         * @function create
         * @memberof CSOEconEquipSlot
         * @static
         * @param {ICSOEconEquipSlot=} [properties] Properties to set
         * @returns {CSOEconEquipSlot} CSOEconEquipSlot instance
         */
        CSOEconEquipSlot.create = function create(properties) {
            return new CSOEconEquipSlot(properties);
        };
    
        /**
         * Encodes the specified CSOEconEquipSlot message. Does not implicitly {@link CSOEconEquipSlot.verify|verify} messages.
         * @function encode
         * @memberof CSOEconEquipSlot
         * @static
         * @param {ICSOEconEquipSlot} message CSOEconEquipSlot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconEquipSlot.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.account_id);
            if (message.class_id != null && Object.hasOwnProperty.call(message, "class_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.class_id);
            if (message.slot_id != null && Object.hasOwnProperty.call(message, "slot_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.slot_id);
            if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.item_id);
            if (message.item_definition != null && Object.hasOwnProperty.call(message, "item_definition"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.item_definition);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconEquipSlot message, length delimited. Does not implicitly {@link CSOEconEquipSlot.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconEquipSlot
         * @static
         * @param {ICSOEconEquipSlot} message CSOEconEquipSlot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconEquipSlot.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconEquipSlot message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconEquipSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconEquipSlot} CSOEconEquipSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconEquipSlot.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconEquipSlot();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.account_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.class_id = reader.uint32();
                        break;
                    }
                case 3: {
                        message.slot_id = reader.uint32();
                        break;
                    }
                case 4: {
                        message.item_id = reader.uint64();
                        break;
                    }
                case 5: {
                        message.item_definition = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconEquipSlot message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconEquipSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconEquipSlot} CSOEconEquipSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconEquipSlot.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconEquipSlot message.
         * @function verify
         * @memberof CSOEconEquipSlot
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconEquipSlot.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                if (!$util.isInteger(message.account_id))
                    return "account_id: integer expected";
            if (message.class_id != null && message.hasOwnProperty("class_id"))
                if (!$util.isInteger(message.class_id))
                    return "class_id: integer expected";
            if (message.slot_id != null && message.hasOwnProperty("slot_id"))
                if (!$util.isInteger(message.slot_id))
                    return "slot_id: integer expected";
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                    return "item_id: integer|Long expected";
            if (message.item_definition != null && message.hasOwnProperty("item_definition"))
                if (!$util.isInteger(message.item_definition))
                    return "item_definition: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconEquipSlot message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconEquipSlot
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconEquipSlot} CSOEconEquipSlot
         */
        CSOEconEquipSlot.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconEquipSlot)
                return object;
            var message = new $root.CSOEconEquipSlot();
            if (object.account_id != null)
                message.account_id = object.account_id >>> 0;
            if (object.class_id != null)
                message.class_id = object.class_id >>> 0;
            if (object.slot_id != null)
                message.slot_id = object.slot_id >>> 0;
            if (object.item_id != null)
                if ($util.Long)
                    (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                else if (typeof object.item_id === "string")
                    message.item_id = parseInt(object.item_id, 10);
                else if (typeof object.item_id === "number")
                    message.item_id = object.item_id;
                else if (typeof object.item_id === "object")
                    message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
            if (object.item_definition != null)
                message.item_definition = object.item_definition >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconEquipSlot message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconEquipSlot
         * @static
         * @param {CSOEconEquipSlot} message CSOEconEquipSlot
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconEquipSlot.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_id = 0;
                object.class_id = 0;
                object.slot_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_id = options.longs === String ? "0" : 0;
                object.item_definition = 0;
            }
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                object.account_id = message.account_id;
            if (message.class_id != null && message.hasOwnProperty("class_id"))
                object.class_id = message.class_id;
            if (message.slot_id != null && message.hasOwnProperty("slot_id"))
                object.slot_id = message.slot_id;
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (typeof message.item_id === "number")
                    object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                else
                    object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
            if (message.item_definition != null && message.hasOwnProperty("item_definition"))
                object.item_definition = message.item_definition;
            return object;
        };
    
        /**
         * Converts this CSOEconEquipSlot to JSON.
         * @function toJSON
         * @memberof CSOEconEquipSlot
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconEquipSlot.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconEquipSlot
         * @function getTypeUrl
         * @memberof CSOEconEquipSlot
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconEquipSlot.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconEquipSlot";
        };
    
        return CSOEconEquipSlot;
    })();
    
    $root.CMsgAdjustEquipSlot = (function() {
    
        /**
         * Properties of a CMsgAdjustEquipSlot.
         * @exports ICMsgAdjustEquipSlot
         * @interface ICMsgAdjustEquipSlot
         * @property {number|null} [class_id] CMsgAdjustEquipSlot class_id
         * @property {number|null} [slot_id] CMsgAdjustEquipSlot slot_id
         * @property {number|Long|null} [item_id] CMsgAdjustEquipSlot item_id
         */
    
        /**
         * Constructs a new CMsgAdjustEquipSlot.
         * @exports CMsgAdjustEquipSlot
         * @classdesc Represents a CMsgAdjustEquipSlot.
         * @implements ICMsgAdjustEquipSlot
         * @constructor
         * @param {ICMsgAdjustEquipSlot=} [properties] Properties to set
         */
        function CMsgAdjustEquipSlot(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAdjustEquipSlot class_id.
         * @member {number} class_id
         * @memberof CMsgAdjustEquipSlot
         * @instance
         */
        CMsgAdjustEquipSlot.prototype.class_id = 0;
    
        /**
         * CMsgAdjustEquipSlot slot_id.
         * @member {number} slot_id
         * @memberof CMsgAdjustEquipSlot
         * @instance
         */
        CMsgAdjustEquipSlot.prototype.slot_id = 0;
    
        /**
         * CMsgAdjustEquipSlot item_id.
         * @member {number|Long} item_id
         * @memberof CMsgAdjustEquipSlot
         * @instance
         */
        CMsgAdjustEquipSlot.prototype.item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgAdjustEquipSlot instance using the specified properties.
         * @function create
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {ICMsgAdjustEquipSlot=} [properties] Properties to set
         * @returns {CMsgAdjustEquipSlot} CMsgAdjustEquipSlot instance
         */
        CMsgAdjustEquipSlot.create = function create(properties) {
            return new CMsgAdjustEquipSlot(properties);
        };
    
        /**
         * Encodes the specified CMsgAdjustEquipSlot message. Does not implicitly {@link CMsgAdjustEquipSlot.verify|verify} messages.
         * @function encode
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {ICMsgAdjustEquipSlot} message CMsgAdjustEquipSlot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustEquipSlot.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.class_id != null && Object.hasOwnProperty.call(message, "class_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.class_id);
            if (message.slot_id != null && Object.hasOwnProperty.call(message, "slot_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.slot_id);
            if (message.item_id != null && Object.hasOwnProperty.call(message, "item_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAdjustEquipSlot message, length delimited. Does not implicitly {@link CMsgAdjustEquipSlot.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {ICMsgAdjustEquipSlot} message CMsgAdjustEquipSlot message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustEquipSlot.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAdjustEquipSlot message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAdjustEquipSlot} CMsgAdjustEquipSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustEquipSlot.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAdjustEquipSlot();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.class_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.slot_id = reader.uint32();
                        break;
                    }
                case 3: {
                        message.item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAdjustEquipSlot message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAdjustEquipSlot} CMsgAdjustEquipSlot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustEquipSlot.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAdjustEquipSlot message.
         * @function verify
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAdjustEquipSlot.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.class_id != null && message.hasOwnProperty("class_id"))
                if (!$util.isInteger(message.class_id))
                    return "class_id: integer expected";
            if (message.slot_id != null && message.hasOwnProperty("slot_id"))
                if (!$util.isInteger(message.slot_id))
                    return "slot_id: integer expected";
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (!$util.isInteger(message.item_id) && !(message.item_id && $util.isInteger(message.item_id.low) && $util.isInteger(message.item_id.high)))
                    return "item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgAdjustEquipSlot message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAdjustEquipSlot} CMsgAdjustEquipSlot
         */
        CMsgAdjustEquipSlot.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAdjustEquipSlot)
                return object;
            var message = new $root.CMsgAdjustEquipSlot();
            if (object.class_id != null)
                message.class_id = object.class_id >>> 0;
            if (object.slot_id != null)
                message.slot_id = object.slot_id >>> 0;
            if (object.item_id != null)
                if ($util.Long)
                    (message.item_id = $util.Long.fromValue(object.item_id)).unsigned = true;
                else if (typeof object.item_id === "string")
                    message.item_id = parseInt(object.item_id, 10);
                else if (typeof object.item_id === "number")
                    message.item_id = object.item_id;
                else if (typeof object.item_id === "object")
                    message.item_id = new $util.LongBits(object.item_id.low >>> 0, object.item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAdjustEquipSlot message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {CMsgAdjustEquipSlot} message CMsgAdjustEquipSlot
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAdjustEquipSlot.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.class_id = 0;
                object.slot_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.item_id = options.longs === String ? "0" : 0;
            }
            if (message.class_id != null && message.hasOwnProperty("class_id"))
                object.class_id = message.class_id;
            if (message.slot_id != null && message.hasOwnProperty("slot_id"))
                object.slot_id = message.slot_id;
            if (message.item_id != null && message.hasOwnProperty("item_id"))
                if (typeof message.item_id === "number")
                    object.item_id = options.longs === String ? String(message.item_id) : message.item_id;
                else
                    object.item_id = options.longs === String ? $util.Long.prototype.toString.call(message.item_id) : options.longs === Number ? new $util.LongBits(message.item_id.low >>> 0, message.item_id.high >>> 0).toNumber(true) : message.item_id;
            return object;
        };
    
        /**
         * Converts this CMsgAdjustEquipSlot to JSON.
         * @function toJSON
         * @memberof CMsgAdjustEquipSlot
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAdjustEquipSlot.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAdjustEquipSlot
         * @function getTypeUrl
         * @memberof CMsgAdjustEquipSlot
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAdjustEquipSlot.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAdjustEquipSlot";
        };
    
        return CMsgAdjustEquipSlot;
    })();
    
    $root.CMsgAdjustEquipSlots = (function() {
    
        /**
         * Properties of a CMsgAdjustEquipSlots.
         * @exports ICMsgAdjustEquipSlots
         * @interface ICMsgAdjustEquipSlots
         * @property {Array.<ICMsgAdjustEquipSlot>|null} [slots] CMsgAdjustEquipSlots slots
         * @property {number|null} [change_num] CMsgAdjustEquipSlots change_num
         */
    
        /**
         * Constructs a new CMsgAdjustEquipSlots.
         * @exports CMsgAdjustEquipSlots
         * @classdesc Represents a CMsgAdjustEquipSlots.
         * @implements ICMsgAdjustEquipSlots
         * @constructor
         * @param {ICMsgAdjustEquipSlots=} [properties] Properties to set
         */
        function CMsgAdjustEquipSlots(properties) {
            this.slots = [];
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAdjustEquipSlots slots.
         * @member {Array.<ICMsgAdjustEquipSlot>} slots
         * @memberof CMsgAdjustEquipSlots
         * @instance
         */
        CMsgAdjustEquipSlots.prototype.slots = $util.emptyArray;
    
        /**
         * CMsgAdjustEquipSlots change_num.
         * @member {number} change_num
         * @memberof CMsgAdjustEquipSlots
         * @instance
         */
        CMsgAdjustEquipSlots.prototype.change_num = 0;
    
        /**
         * Creates a new CMsgAdjustEquipSlots instance using the specified properties.
         * @function create
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {ICMsgAdjustEquipSlots=} [properties] Properties to set
         * @returns {CMsgAdjustEquipSlots} CMsgAdjustEquipSlots instance
         */
        CMsgAdjustEquipSlots.create = function create(properties) {
            return new CMsgAdjustEquipSlots(properties);
        };
    
        /**
         * Encodes the specified CMsgAdjustEquipSlots message. Does not implicitly {@link CMsgAdjustEquipSlots.verify|verify} messages.
         * @function encode
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {ICMsgAdjustEquipSlots} message CMsgAdjustEquipSlots message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustEquipSlots.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.slots != null && message.slots.length)
                for (var i = 0; i < message.slots.length; ++i)
                    $root.CMsgAdjustEquipSlot.encode(message.slots[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
            if (message.change_num != null && Object.hasOwnProperty.call(message, "change_num"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.change_num);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAdjustEquipSlots message, length delimited. Does not implicitly {@link CMsgAdjustEquipSlots.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {ICMsgAdjustEquipSlots} message CMsgAdjustEquipSlots message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAdjustEquipSlots.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAdjustEquipSlots message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAdjustEquipSlots} CMsgAdjustEquipSlots
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustEquipSlots.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAdjustEquipSlots();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        if (!(message.slots && message.slots.length))
                            message.slots = [];
                        message.slots.push($root.CMsgAdjustEquipSlot.decode(reader, reader.uint32()));
                        break;
                    }
                case 2: {
                        message.change_num = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAdjustEquipSlots message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAdjustEquipSlots} CMsgAdjustEquipSlots
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAdjustEquipSlots.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAdjustEquipSlots message.
         * @function verify
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAdjustEquipSlots.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.slots != null && message.hasOwnProperty("slots")) {
                if (!Array.isArray(message.slots))
                    return "slots: array expected";
                for (var i = 0; i < message.slots.length; ++i) {
                    var error = $root.CMsgAdjustEquipSlot.verify(message.slots[i]);
                    if (error)
                        return "slots." + error;
                }
            }
            if (message.change_num != null && message.hasOwnProperty("change_num"))
                if (!$util.isInteger(message.change_num))
                    return "change_num: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgAdjustEquipSlots message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAdjustEquipSlots} CMsgAdjustEquipSlots
         */
        CMsgAdjustEquipSlots.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAdjustEquipSlots)
                return object;
            var message = new $root.CMsgAdjustEquipSlots();
            if (object.slots) {
                if (!Array.isArray(object.slots))
                    throw TypeError(".CMsgAdjustEquipSlots.slots: array expected");
                message.slots = [];
                for (var i = 0; i < object.slots.length; ++i) {
                    if (typeof object.slots[i] !== "object")
                        throw TypeError(".CMsgAdjustEquipSlots.slots: object expected");
                    message.slots[i] = $root.CMsgAdjustEquipSlot.fromObject(object.slots[i]);
                }
            }
            if (object.change_num != null)
                message.change_num = object.change_num >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAdjustEquipSlots message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {CMsgAdjustEquipSlots} message CMsgAdjustEquipSlots
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAdjustEquipSlots.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.arrays || options.defaults)
                object.slots = [];
            if (options.defaults)
                object.change_num = 0;
            if (message.slots && message.slots.length) {
                object.slots = [];
                for (var j = 0; j < message.slots.length; ++j)
                    object.slots[j] = $root.CMsgAdjustEquipSlot.toObject(message.slots[j], options);
            }
            if (message.change_num != null && message.hasOwnProperty("change_num"))
                object.change_num = message.change_num;
            return object;
        };
    
        /**
         * Converts this CMsgAdjustEquipSlots to JSON.
         * @function toJSON
         * @memberof CMsgAdjustEquipSlots
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAdjustEquipSlots.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAdjustEquipSlots
         * @function getTypeUrl
         * @memberof CMsgAdjustEquipSlots
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAdjustEquipSlots.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAdjustEquipSlots";
        };
    
        return CMsgAdjustEquipSlots;
    })();
    
    $root.CMsgOpenCrate = (function() {
    
        /**
         * Properties of a CMsgOpenCrate.
         * @exports ICMsgOpenCrate
         * @interface ICMsgOpenCrate
         * @property {number|Long|null} [tool_item_id] CMsgOpenCrate tool_item_id
         * @property {number|Long|null} [subject_item_id] CMsgOpenCrate subject_item_id
         * @property {boolean|null} [for_rental] CMsgOpenCrate for_rental
         * @property {number|null} [points_remaining] CMsgOpenCrate points_remaining
         */
    
        /**
         * Constructs a new CMsgOpenCrate.
         * @exports CMsgOpenCrate
         * @classdesc Represents a CMsgOpenCrate.
         * @implements ICMsgOpenCrate
         * @constructor
         * @param {ICMsgOpenCrate=} [properties] Properties to set
         */
        function CMsgOpenCrate(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgOpenCrate tool_item_id.
         * @member {number|Long} tool_item_id
         * @memberof CMsgOpenCrate
         * @instance
         */
        CMsgOpenCrate.prototype.tool_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgOpenCrate subject_item_id.
         * @member {number|Long} subject_item_id
         * @memberof CMsgOpenCrate
         * @instance
         */
        CMsgOpenCrate.prototype.subject_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CMsgOpenCrate for_rental.
         * @member {boolean} for_rental
         * @memberof CMsgOpenCrate
         * @instance
         */
        CMsgOpenCrate.prototype.for_rental = false;
    
        /**
         * CMsgOpenCrate points_remaining.
         * @member {number} points_remaining
         * @memberof CMsgOpenCrate
         * @instance
         */
        CMsgOpenCrate.prototype.points_remaining = 0;
    
        /**
         * Creates a new CMsgOpenCrate instance using the specified properties.
         * @function create
         * @memberof CMsgOpenCrate
         * @static
         * @param {ICMsgOpenCrate=} [properties] Properties to set
         * @returns {CMsgOpenCrate} CMsgOpenCrate instance
         */
        CMsgOpenCrate.create = function create(properties) {
            return new CMsgOpenCrate(properties);
        };
    
        /**
         * Encodes the specified CMsgOpenCrate message. Does not implicitly {@link CMsgOpenCrate.verify|verify} messages.
         * @function encode
         * @memberof CMsgOpenCrate
         * @static
         * @param {ICMsgOpenCrate} message CMsgOpenCrate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgOpenCrate.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.tool_item_id != null && Object.hasOwnProperty.call(message, "tool_item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.tool_item_id);
            if (message.subject_item_id != null && Object.hasOwnProperty.call(message, "subject_item_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.subject_item_id);
            if (message.for_rental != null && Object.hasOwnProperty.call(message, "for_rental"))
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.for_rental);
            if (message.points_remaining != null && Object.hasOwnProperty.call(message, "points_remaining"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.points_remaining);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgOpenCrate message, length delimited. Does not implicitly {@link CMsgOpenCrate.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgOpenCrate
         * @static
         * @param {ICMsgOpenCrate} message CMsgOpenCrate message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgOpenCrate.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgOpenCrate message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgOpenCrate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgOpenCrate} CMsgOpenCrate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgOpenCrate.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgOpenCrate();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.tool_item_id = reader.uint64();
                        break;
                    }
                case 2: {
                        message.subject_item_id = reader.uint64();
                        break;
                    }
                case 3: {
                        message.for_rental = reader.bool();
                        break;
                    }
                case 4: {
                        message.points_remaining = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgOpenCrate message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgOpenCrate
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgOpenCrate} CMsgOpenCrate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgOpenCrate.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgOpenCrate message.
         * @function verify
         * @memberof CMsgOpenCrate
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgOpenCrate.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.tool_item_id != null && message.hasOwnProperty("tool_item_id"))
                if (!$util.isInteger(message.tool_item_id) && !(message.tool_item_id && $util.isInteger(message.tool_item_id.low) && $util.isInteger(message.tool_item_id.high)))
                    return "tool_item_id: integer|Long expected";
            if (message.subject_item_id != null && message.hasOwnProperty("subject_item_id"))
                if (!$util.isInteger(message.subject_item_id) && !(message.subject_item_id && $util.isInteger(message.subject_item_id.low) && $util.isInteger(message.subject_item_id.high)))
                    return "subject_item_id: integer|Long expected";
            if (message.for_rental != null && message.hasOwnProperty("for_rental"))
                if (typeof message.for_rental !== "boolean")
                    return "for_rental: boolean expected";
            if (message.points_remaining != null && message.hasOwnProperty("points_remaining"))
                if (!$util.isInteger(message.points_remaining))
                    return "points_remaining: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgOpenCrate message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgOpenCrate
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgOpenCrate} CMsgOpenCrate
         */
        CMsgOpenCrate.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgOpenCrate)
                return object;
            var message = new $root.CMsgOpenCrate();
            if (object.tool_item_id != null)
                if ($util.Long)
                    (message.tool_item_id = $util.Long.fromValue(object.tool_item_id)).unsigned = true;
                else if (typeof object.tool_item_id === "string")
                    message.tool_item_id = parseInt(object.tool_item_id, 10);
                else if (typeof object.tool_item_id === "number")
                    message.tool_item_id = object.tool_item_id;
                else if (typeof object.tool_item_id === "object")
                    message.tool_item_id = new $util.LongBits(object.tool_item_id.low >>> 0, object.tool_item_id.high >>> 0).toNumber(true);
            if (object.subject_item_id != null)
                if ($util.Long)
                    (message.subject_item_id = $util.Long.fromValue(object.subject_item_id)).unsigned = true;
                else if (typeof object.subject_item_id === "string")
                    message.subject_item_id = parseInt(object.subject_item_id, 10);
                else if (typeof object.subject_item_id === "number")
                    message.subject_item_id = object.subject_item_id;
                else if (typeof object.subject_item_id === "object")
                    message.subject_item_id = new $util.LongBits(object.subject_item_id.low >>> 0, object.subject_item_id.high >>> 0).toNumber(true);
            if (object.for_rental != null)
                message.for_rental = Boolean(object.for_rental);
            if (object.points_remaining != null)
                message.points_remaining = object.points_remaining >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgOpenCrate message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgOpenCrate
         * @static
         * @param {CMsgOpenCrate} message CMsgOpenCrate
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgOpenCrate.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.tool_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.tool_item_id = options.longs === String ? "0" : 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.subject_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.subject_item_id = options.longs === String ? "0" : 0;
                object.for_rental = false;
                object.points_remaining = 0;
            }
            if (message.tool_item_id != null && message.hasOwnProperty("tool_item_id"))
                if (typeof message.tool_item_id === "number")
                    object.tool_item_id = options.longs === String ? String(message.tool_item_id) : message.tool_item_id;
                else
                    object.tool_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.tool_item_id) : options.longs === Number ? new $util.LongBits(message.tool_item_id.low >>> 0, message.tool_item_id.high >>> 0).toNumber(true) : message.tool_item_id;
            if (message.subject_item_id != null && message.hasOwnProperty("subject_item_id"))
                if (typeof message.subject_item_id === "number")
                    object.subject_item_id = options.longs === String ? String(message.subject_item_id) : message.subject_item_id;
                else
                    object.subject_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.subject_item_id) : options.longs === Number ? new $util.LongBits(message.subject_item_id.low >>> 0, message.subject_item_id.high >>> 0).toNumber(true) : message.subject_item_id;
            if (message.for_rental != null && message.hasOwnProperty("for_rental"))
                object.for_rental = message.for_rental;
            if (message.points_remaining != null && message.hasOwnProperty("points_remaining"))
                object.points_remaining = message.points_remaining;
            return object;
        };
    
        /**
         * Converts this CMsgOpenCrate to JSON.
         * @function toJSON
         * @memberof CMsgOpenCrate
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgOpenCrate.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgOpenCrate
         * @function getTypeUrl
         * @memberof CMsgOpenCrate
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgOpenCrate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgOpenCrate";
        };
    
        return CMsgOpenCrate;
    })();
    
    $root.CSOEconRentalHistory = (function() {
    
        /**
         * Properties of a CSOEconRentalHistory.
         * @exports ICSOEconRentalHistory
         * @interface ICSOEconRentalHistory
         * @property {number|null} [account_id] CSOEconRentalHistory account_id
         * @property {number|Long|null} [crate_item_id] CSOEconRentalHistory crate_item_id
         * @property {number|null} [crate_def_index] CSOEconRentalHistory crate_def_index
         * @property {number|null} [issue_date] CSOEconRentalHistory issue_date
         * @property {number|null} [expiration_date] CSOEconRentalHistory expiration_date
         */
    
        /**
         * Constructs a new CSOEconRentalHistory.
         * @exports CSOEconRentalHistory
         * @classdesc Represents a CSOEconRentalHistory.
         * @implements ICSOEconRentalHistory
         * @constructor
         * @param {ICSOEconRentalHistory=} [properties] Properties to set
         */
        function CSOEconRentalHistory(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CSOEconRentalHistory account_id.
         * @member {number} account_id
         * @memberof CSOEconRentalHistory
         * @instance
         */
        CSOEconRentalHistory.prototype.account_id = 0;
    
        /**
         * CSOEconRentalHistory crate_item_id.
         * @member {number|Long} crate_item_id
         * @memberof CSOEconRentalHistory
         * @instance
         */
        CSOEconRentalHistory.prototype.crate_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * CSOEconRentalHistory crate_def_index.
         * @member {number} crate_def_index
         * @memberof CSOEconRentalHistory
         * @instance
         */
        CSOEconRentalHistory.prototype.crate_def_index = 0;
    
        /**
         * CSOEconRentalHistory issue_date.
         * @member {number} issue_date
         * @memberof CSOEconRentalHistory
         * @instance
         */
        CSOEconRentalHistory.prototype.issue_date = 0;
    
        /**
         * CSOEconRentalHistory expiration_date.
         * @member {number} expiration_date
         * @memberof CSOEconRentalHistory
         * @instance
         */
        CSOEconRentalHistory.prototype.expiration_date = 0;
    
        /**
         * Creates a new CSOEconRentalHistory instance using the specified properties.
         * @function create
         * @memberof CSOEconRentalHistory
         * @static
         * @param {ICSOEconRentalHistory=} [properties] Properties to set
         * @returns {CSOEconRentalHistory} CSOEconRentalHistory instance
         */
        CSOEconRentalHistory.create = function create(properties) {
            return new CSOEconRentalHistory(properties);
        };
    
        /**
         * Encodes the specified CSOEconRentalHistory message. Does not implicitly {@link CSOEconRentalHistory.verify|verify} messages.
         * @function encode
         * @memberof CSOEconRentalHistory
         * @static
         * @param {ICSOEconRentalHistory} message CSOEconRentalHistory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconRentalHistory.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.account_id != null && Object.hasOwnProperty.call(message, "account_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.account_id);
            if (message.crate_item_id != null && Object.hasOwnProperty.call(message, "crate_item_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.crate_item_id);
            if (message.crate_def_index != null && Object.hasOwnProperty.call(message, "crate_def_index"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.crate_def_index);
            if (message.issue_date != null && Object.hasOwnProperty.call(message, "issue_date"))
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.issue_date);
            if (message.expiration_date != null && Object.hasOwnProperty.call(message, "expiration_date"))
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.expiration_date);
            return writer;
        };
    
        /**
         * Encodes the specified CSOEconRentalHistory message, length delimited. Does not implicitly {@link CSOEconRentalHistory.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CSOEconRentalHistory
         * @static
         * @param {ICSOEconRentalHistory} message CSOEconRentalHistory message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CSOEconRentalHistory.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CSOEconRentalHistory message from the specified reader or buffer.
         * @function decode
         * @memberof CSOEconRentalHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CSOEconRentalHistory} CSOEconRentalHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconRentalHistory.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CSOEconRentalHistory();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.account_id = reader.uint32();
                        break;
                    }
                case 2: {
                        message.crate_item_id = reader.uint64();
                        break;
                    }
                case 3: {
                        message.crate_def_index = reader.uint32();
                        break;
                    }
                case 4: {
                        message.issue_date = reader.uint32();
                        break;
                    }
                case 5: {
                        message.expiration_date = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CSOEconRentalHistory message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CSOEconRentalHistory
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CSOEconRentalHistory} CSOEconRentalHistory
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CSOEconRentalHistory.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CSOEconRentalHistory message.
         * @function verify
         * @memberof CSOEconRentalHistory
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CSOEconRentalHistory.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                if (!$util.isInteger(message.account_id))
                    return "account_id: integer expected";
            if (message.crate_item_id != null && message.hasOwnProperty("crate_item_id"))
                if (!$util.isInteger(message.crate_item_id) && !(message.crate_item_id && $util.isInteger(message.crate_item_id.low) && $util.isInteger(message.crate_item_id.high)))
                    return "crate_item_id: integer|Long expected";
            if (message.crate_def_index != null && message.hasOwnProperty("crate_def_index"))
                if (!$util.isInteger(message.crate_def_index))
                    return "crate_def_index: integer expected";
            if (message.issue_date != null && message.hasOwnProperty("issue_date"))
                if (!$util.isInteger(message.issue_date))
                    return "issue_date: integer expected";
            if (message.expiration_date != null && message.hasOwnProperty("expiration_date"))
                if (!$util.isInteger(message.expiration_date))
                    return "expiration_date: integer expected";
            return null;
        };
    
        /**
         * Creates a CSOEconRentalHistory message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CSOEconRentalHistory
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CSOEconRentalHistory} CSOEconRentalHistory
         */
        CSOEconRentalHistory.fromObject = function fromObject(object) {
            if (object instanceof $root.CSOEconRentalHistory)
                return object;
            var message = new $root.CSOEconRentalHistory();
            if (object.account_id != null)
                message.account_id = object.account_id >>> 0;
            if (object.crate_item_id != null)
                if ($util.Long)
                    (message.crate_item_id = $util.Long.fromValue(object.crate_item_id)).unsigned = true;
                else if (typeof object.crate_item_id === "string")
                    message.crate_item_id = parseInt(object.crate_item_id, 10);
                else if (typeof object.crate_item_id === "number")
                    message.crate_item_id = object.crate_item_id;
                else if (typeof object.crate_item_id === "object")
                    message.crate_item_id = new $util.LongBits(object.crate_item_id.low >>> 0, object.crate_item_id.high >>> 0).toNumber(true);
            if (object.crate_def_index != null)
                message.crate_def_index = object.crate_def_index >>> 0;
            if (object.issue_date != null)
                message.issue_date = object.issue_date >>> 0;
            if (object.expiration_date != null)
                message.expiration_date = object.expiration_date >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CSOEconRentalHistory message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CSOEconRentalHistory
         * @static
         * @param {CSOEconRentalHistory} message CSOEconRentalHistory
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CSOEconRentalHistory.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.account_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.crate_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.crate_item_id = options.longs === String ? "0" : 0;
                object.crate_def_index = 0;
                object.issue_date = 0;
                object.expiration_date = 0;
            }
            if (message.account_id != null && message.hasOwnProperty("account_id"))
                object.account_id = message.account_id;
            if (message.crate_item_id != null && message.hasOwnProperty("crate_item_id"))
                if (typeof message.crate_item_id === "number")
                    object.crate_item_id = options.longs === String ? String(message.crate_item_id) : message.crate_item_id;
                else
                    object.crate_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.crate_item_id) : options.longs === Number ? new $util.LongBits(message.crate_item_id.low >>> 0, message.crate_item_id.high >>> 0).toNumber(true) : message.crate_item_id;
            if (message.crate_def_index != null && message.hasOwnProperty("crate_def_index"))
                object.crate_def_index = message.crate_def_index;
            if (message.issue_date != null && message.hasOwnProperty("issue_date"))
                object.issue_date = message.issue_date;
            if (message.expiration_date != null && message.hasOwnProperty("expiration_date"))
                object.expiration_date = message.expiration_date;
            return object;
        };
    
        /**
         * Converts this CSOEconRentalHistory to JSON.
         * @function toJSON
         * @memberof CSOEconRentalHistory
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CSOEconRentalHistory.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CSOEconRentalHistory
         * @function getTypeUrl
         * @memberof CSOEconRentalHistory
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CSOEconRentalHistory.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CSOEconRentalHistory";
        };
    
        return CSOEconRentalHistory;
    })();
    
    $root.CMsgAcknowledgeRentalExpiration = (function() {
    
        /**
         * Properties of a CMsgAcknowledgeRentalExpiration.
         * @exports ICMsgAcknowledgeRentalExpiration
         * @interface ICMsgAcknowledgeRentalExpiration
         * @property {number|Long|null} [crate_item_id] CMsgAcknowledgeRentalExpiration crate_item_id
         */
    
        /**
         * Constructs a new CMsgAcknowledgeRentalExpiration.
         * @exports CMsgAcknowledgeRentalExpiration
         * @classdesc Represents a CMsgAcknowledgeRentalExpiration.
         * @implements ICMsgAcknowledgeRentalExpiration
         * @constructor
         * @param {ICMsgAcknowledgeRentalExpiration=} [properties] Properties to set
         */
        function CMsgAcknowledgeRentalExpiration(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgAcknowledgeRentalExpiration crate_item_id.
         * @member {number|Long} crate_item_id
         * @memberof CMsgAcknowledgeRentalExpiration
         * @instance
         */
        CMsgAcknowledgeRentalExpiration.prototype.crate_item_id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
        /**
         * Creates a new CMsgAcknowledgeRentalExpiration instance using the specified properties.
         * @function create
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {ICMsgAcknowledgeRentalExpiration=} [properties] Properties to set
         * @returns {CMsgAcknowledgeRentalExpiration} CMsgAcknowledgeRentalExpiration instance
         */
        CMsgAcknowledgeRentalExpiration.create = function create(properties) {
            return new CMsgAcknowledgeRentalExpiration(properties);
        };
    
        /**
         * Encodes the specified CMsgAcknowledgeRentalExpiration message. Does not implicitly {@link CMsgAcknowledgeRentalExpiration.verify|verify} messages.
         * @function encode
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {ICMsgAcknowledgeRentalExpiration} message CMsgAcknowledgeRentalExpiration message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAcknowledgeRentalExpiration.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.crate_item_id != null && Object.hasOwnProperty.call(message, "crate_item_id"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.crate_item_id);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgAcknowledgeRentalExpiration message, length delimited. Does not implicitly {@link CMsgAcknowledgeRentalExpiration.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {ICMsgAcknowledgeRentalExpiration} message CMsgAcknowledgeRentalExpiration message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgAcknowledgeRentalExpiration.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgAcknowledgeRentalExpiration message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgAcknowledgeRentalExpiration} CMsgAcknowledgeRentalExpiration
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAcknowledgeRentalExpiration.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgAcknowledgeRentalExpiration();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.crate_item_id = reader.uint64();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgAcknowledgeRentalExpiration message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgAcknowledgeRentalExpiration} CMsgAcknowledgeRentalExpiration
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgAcknowledgeRentalExpiration.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgAcknowledgeRentalExpiration message.
         * @function verify
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgAcknowledgeRentalExpiration.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.crate_item_id != null && message.hasOwnProperty("crate_item_id"))
                if (!$util.isInteger(message.crate_item_id) && !(message.crate_item_id && $util.isInteger(message.crate_item_id.low) && $util.isInteger(message.crate_item_id.high)))
                    return "crate_item_id: integer|Long expected";
            return null;
        };
    
        /**
         * Creates a CMsgAcknowledgeRentalExpiration message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgAcknowledgeRentalExpiration} CMsgAcknowledgeRentalExpiration
         */
        CMsgAcknowledgeRentalExpiration.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgAcknowledgeRentalExpiration)
                return object;
            var message = new $root.CMsgAcknowledgeRentalExpiration();
            if (object.crate_item_id != null)
                if ($util.Long)
                    (message.crate_item_id = $util.Long.fromValue(object.crate_item_id)).unsigned = true;
                else if (typeof object.crate_item_id === "string")
                    message.crate_item_id = parseInt(object.crate_item_id, 10);
                else if (typeof object.crate_item_id === "number")
                    message.crate_item_id = object.crate_item_id;
                else if (typeof object.crate_item_id === "object")
                    message.crate_item_id = new $util.LongBits(object.crate_item_id.low >>> 0, object.crate_item_id.high >>> 0).toNumber(true);
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgAcknowledgeRentalExpiration message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {CMsgAcknowledgeRentalExpiration} message CMsgAcknowledgeRentalExpiration
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgAcknowledgeRentalExpiration.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                if ($util.Long) {
                    var long = new $util.Long(0, 0, true);
                    object.crate_item_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.crate_item_id = options.longs === String ? "0" : 0;
            if (message.crate_item_id != null && message.hasOwnProperty("crate_item_id"))
                if (typeof message.crate_item_id === "number")
                    object.crate_item_id = options.longs === String ? String(message.crate_item_id) : message.crate_item_id;
                else
                    object.crate_item_id = options.longs === String ? $util.Long.prototype.toString.call(message.crate_item_id) : options.longs === Number ? new $util.LongBits(message.crate_item_id.low >>> 0, message.crate_item_id.high >>> 0).toNumber(true) : message.crate_item_id;
            return object;
        };
    
        /**
         * Converts this CMsgAcknowledgeRentalExpiration to JSON.
         * @function toJSON
         * @memberof CMsgAcknowledgeRentalExpiration
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgAcknowledgeRentalExpiration.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgAcknowledgeRentalExpiration
         * @function getTypeUrl
         * @memberof CMsgAcknowledgeRentalExpiration
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgAcknowledgeRentalExpiration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgAcknowledgeRentalExpiration";
        };
    
        return CMsgAcknowledgeRentalExpiration;
    })();
    
    /**
     * GCProtoBufMsgSrc enum.
     * @exports GCProtoBufMsgSrc
     * @enum {number}
     * @property {number} GCProtoBufMsgSrc_Unspecified=0 GCProtoBufMsgSrc_Unspecified value
     * @property {number} GCProtoBufMsgSrc_FromSystem=1 GCProtoBufMsgSrc_FromSystem value
     * @property {number} GCProtoBufMsgSrc_FromSteamID=2 GCProtoBufMsgSrc_FromSteamID value
     * @property {number} GCProtoBufMsgSrc_FromGC=3 GCProtoBufMsgSrc_FromGC value
     * @property {number} GCProtoBufMsgSrc_ReplySystem=4 GCProtoBufMsgSrc_ReplySystem value
     */
    $root.GCProtoBufMsgSrc = (function() {
        var valuesById = {}, values = Object.create(valuesById);
        values[valuesById[0] = "GCProtoBufMsgSrc_Unspecified"] = 0;
        values[valuesById[1] = "GCProtoBufMsgSrc_FromSystem"] = 1;
        values[valuesById[2] = "GCProtoBufMsgSrc_FromSteamID"] = 2;
        values[valuesById[3] = "GCProtoBufMsgSrc_FromGC"] = 3;
        values[valuesById[4] = "GCProtoBufMsgSrc_ReplySystem"] = 4;
        return values;
    })();
    
    $root.CMsgProtoBufHeader = (function() {
    
        /**
         * Properties of a CMsgProtoBufHeader.
         * @exports ICMsgProtoBufHeader
         * @interface ICMsgProtoBufHeader
         * @property {number|Long|null} [client_steam_id] CMsgProtoBufHeader client_steam_id
         * @property {number|null} [client_session_id] CMsgProtoBufHeader client_session_id
         * @property {number|null} [source_app_id] CMsgProtoBufHeader source_app_id
         * @property {number|Long|null} [job_id_source] CMsgProtoBufHeader job_id_source
         * @property {number|Long|null} [job_id_target] CMsgProtoBufHeader job_id_target
         * @property {string|null} [target_job_name] CMsgProtoBufHeader target_job_name
         * @property {number|null} [eresult] CMsgProtoBufHeader eresult
         * @property {string|null} [error_message] CMsgProtoBufHeader error_message
         * @property {number|null} [ip] CMsgProtoBufHeader ip
         * @property {GCProtoBufMsgSrc|null} [gc_msg_src] CMsgProtoBufHeader gc_msg_src
         * @property {number|null} [gc_dir_index_source] CMsgProtoBufHeader gc_dir_index_source
         */
    
        /**
         * Constructs a new CMsgProtoBufHeader.
         * @exports CMsgProtoBufHeader
         * @classdesc Represents a CMsgProtoBufHeader.
         * @implements ICMsgProtoBufHeader
         * @constructor
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         */
        function CMsgProtoBufHeader(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CMsgProtoBufHeader client_steam_id.
         * @member {number|Long} client_steam_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.client_steam_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CMsgProtoBufHeader client_session_id.
         * @member {number} client_session_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.client_session_id = 0;
    
        /**
         * CMsgProtoBufHeader source_app_id.
         * @member {number} source_app_id
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.source_app_id = 0;
    
        /**
         * CMsgProtoBufHeader job_id_source.
         * @member {number|Long} job_id_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.job_id_source = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader job_id_target.
         * @member {number|Long} job_id_target
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.job_id_target = $util.Long ? $util.Long.fromBits(-1,2147483647,false) : 9223372036854776000;
    
        /**
         * CMsgProtoBufHeader target_job_name.
         * @member {string} target_job_name
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.target_job_name = "";
    
        /**
         * CMsgProtoBufHeader eresult.
         * @member {number} eresult
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.eresult = 2;
    
        /**
         * CMsgProtoBufHeader error_message.
         * @member {string} error_message
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.error_message = "";
    
        /**
         * CMsgProtoBufHeader ip.
         * @member {number} ip
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.ip = 0;
    
        /**
         * CMsgProtoBufHeader gc_msg_src.
         * @member {GCProtoBufMsgSrc} gc_msg_src
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.gc_msg_src = 0;
    
        /**
         * CMsgProtoBufHeader gc_dir_index_source.
         * @member {number} gc_dir_index_source
         * @memberof CMsgProtoBufHeader
         * @instance
         */
        CMsgProtoBufHeader.prototype.gc_dir_index_source = 0;
    
        /**
         * Creates a new CMsgProtoBufHeader instance using the specified properties.
         * @function create
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader=} [properties] Properties to set
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader instance
         */
        CMsgProtoBufHeader.create = function create(properties) {
            return new CMsgProtoBufHeader(properties);
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.client_steam_id != null && Object.hasOwnProperty.call(message, "client_steam_id"))
                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.client_steam_id);
            if (message.client_session_id != null && Object.hasOwnProperty.call(message, "client_session_id"))
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.client_session_id);
            if (message.source_app_id != null && Object.hasOwnProperty.call(message, "source_app_id"))
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.source_app_id);
            if (message.job_id_source != null && Object.hasOwnProperty.call(message, "job_id_source"))
                writer.uint32(/* id 10, wireType 1 =*/81).fixed64(message.job_id_source);
            if (message.job_id_target != null && Object.hasOwnProperty.call(message, "job_id_target"))
                writer.uint32(/* id 11, wireType 1 =*/89).fixed64(message.job_id_target);
            if (message.target_job_name != null && Object.hasOwnProperty.call(message, "target_job_name"))
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.target_job_name);
            if (message.eresult != null && Object.hasOwnProperty.call(message, "eresult"))
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.eresult);
            if (message.error_message != null && Object.hasOwnProperty.call(message, "error_message"))
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.error_message);
            if (message.ip != null && Object.hasOwnProperty.call(message, "ip"))
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.ip);
            if (message.gc_msg_src != null && Object.hasOwnProperty.call(message, "gc_msg_src"))
                writer.uint32(/* id 200, wireType 0 =*/1600).int32(message.gc_msg_src);
            if (message.gc_dir_index_source != null && Object.hasOwnProperty.call(message, "gc_dir_index_source"))
                writer.uint32(/* id 201, wireType 0 =*/1608).uint32(message.gc_dir_index_source);
            return writer;
        };
    
        /**
         * Encodes the specified CMsgProtoBufHeader message, length delimited. Does not implicitly {@link CMsgProtoBufHeader.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {ICMsgProtoBufHeader} message CMsgProtoBufHeader message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CMsgProtoBufHeader.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer.
         * @function decode
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CMsgProtoBufHeader();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.client_steam_id = reader.fixed64();
                        break;
                    }
                case 2: {
                        message.client_session_id = reader.int32();
                        break;
                    }
                case 3: {
                        message.source_app_id = reader.uint32();
                        break;
                    }
                case 10: {
                        message.job_id_source = reader.fixed64();
                        break;
                    }
                case 11: {
                        message.job_id_target = reader.fixed64();
                        break;
                    }
                case 12: {
                        message.target_job_name = reader.string();
                        break;
                    }
                case 13: {
                        message.eresult = reader.int32();
                        break;
                    }
                case 14: {
                        message.error_message = reader.string();
                        break;
                    }
                case 15: {
                        message.ip = reader.uint32();
                        break;
                    }
                case 200: {
                        message.gc_msg_src = reader.int32();
                        break;
                    }
                case 201: {
                        message.gc_dir_index_source = reader.uint32();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CMsgProtoBufHeader message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CMsgProtoBufHeader.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CMsgProtoBufHeader message.
         * @function verify
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CMsgProtoBufHeader.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.client_steam_id != null && message.hasOwnProperty("client_steam_id"))
                if (!$util.isInteger(message.client_steam_id) && !(message.client_steam_id && $util.isInteger(message.client_steam_id.low) && $util.isInteger(message.client_steam_id.high)))
                    return "client_steam_id: integer|Long expected";
            if (message.client_session_id != null && message.hasOwnProperty("client_session_id"))
                if (!$util.isInteger(message.client_session_id))
                    return "client_session_id: integer expected";
            if (message.source_app_id != null && message.hasOwnProperty("source_app_id"))
                if (!$util.isInteger(message.source_app_id))
                    return "source_app_id: integer expected";
            if (message.job_id_source != null && message.hasOwnProperty("job_id_source"))
                if (!$util.isInteger(message.job_id_source) && !(message.job_id_source && $util.isInteger(message.job_id_source.low) && $util.isInteger(message.job_id_source.high)))
                    return "job_id_source: integer|Long expected";
            if (message.job_id_target != null && message.hasOwnProperty("job_id_target"))
                if (!$util.isInteger(message.job_id_target) && !(message.job_id_target && $util.isInteger(message.job_id_target.low) && $util.isInteger(message.job_id_target.high)))
                    return "job_id_target: integer|Long expected";
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                if (!$util.isString(message.target_job_name))
                    return "target_job_name: string expected";
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                if (!$util.isInteger(message.eresult))
                    return "eresult: integer expected";
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                if (!$util.isString(message.error_message))
                    return "error_message: string expected";
            if (message.ip != null && message.hasOwnProperty("ip"))
                if (!$util.isInteger(message.ip))
                    return "ip: integer expected";
            if (message.gc_msg_src != null && message.hasOwnProperty("gc_msg_src"))
                switch (message.gc_msg_src) {
                default:
                    return "gc_msg_src: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
            if (message.gc_dir_index_source != null && message.hasOwnProperty("gc_dir_index_source"))
                if (!$util.isInteger(message.gc_dir_index_source))
                    return "gc_dir_index_source: integer expected";
            return null;
        };
    
        /**
         * Creates a CMsgProtoBufHeader message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CMsgProtoBufHeader} CMsgProtoBufHeader
         */
        CMsgProtoBufHeader.fromObject = function fromObject(object) {
            if (object instanceof $root.CMsgProtoBufHeader)
                return object;
            var message = new $root.CMsgProtoBufHeader();
            if (object.client_steam_id != null)
                if ($util.Long)
                    (message.client_steam_id = $util.Long.fromValue(object.client_steam_id)).unsigned = false;
                else if (typeof object.client_steam_id === "string")
                    message.client_steam_id = parseInt(object.client_steam_id, 10);
                else if (typeof object.client_steam_id === "number")
                    message.client_steam_id = object.client_steam_id;
                else if (typeof object.client_steam_id === "object")
                    message.client_steam_id = new $util.LongBits(object.client_steam_id.low >>> 0, object.client_steam_id.high >>> 0).toNumber();
            if (object.client_session_id != null)
                message.client_session_id = object.client_session_id | 0;
            if (object.source_app_id != null)
                message.source_app_id = object.source_app_id >>> 0;
            if (object.job_id_source != null)
                if ($util.Long)
                    (message.job_id_source = $util.Long.fromValue(object.job_id_source)).unsigned = false;
                else if (typeof object.job_id_source === "string")
                    message.job_id_source = parseInt(object.job_id_source, 10);
                else if (typeof object.job_id_source === "number")
                    message.job_id_source = object.job_id_source;
                else if (typeof object.job_id_source === "object")
                    message.job_id_source = new $util.LongBits(object.job_id_source.low >>> 0, object.job_id_source.high >>> 0).toNumber();
            if (object.job_id_target != null)
                if ($util.Long)
                    (message.job_id_target = $util.Long.fromValue(object.job_id_target)).unsigned = false;
                else if (typeof object.job_id_target === "string")
                    message.job_id_target = parseInt(object.job_id_target, 10);
                else if (typeof object.job_id_target === "number")
                    message.job_id_target = object.job_id_target;
                else if (typeof object.job_id_target === "object")
                    message.job_id_target = new $util.LongBits(object.job_id_target.low >>> 0, object.job_id_target.high >>> 0).toNumber();
            if (object.target_job_name != null)
                message.target_job_name = String(object.target_job_name);
            if (object.eresult != null)
                message.eresult = object.eresult | 0;
            if (object.error_message != null)
                message.error_message = String(object.error_message);
            if (object.ip != null)
                message.ip = object.ip >>> 0;
            switch (object.gc_msg_src) {
            default:
                if (typeof object.gc_msg_src === "number") {
                    message.gc_msg_src = object.gc_msg_src;
                    break;
                }
                break;
            case "GCProtoBufMsgSrc_Unspecified":
            case 0:
                message.gc_msg_src = 0;
                break;
            case "GCProtoBufMsgSrc_FromSystem":
            case 1:
                message.gc_msg_src = 1;
                break;
            case "GCProtoBufMsgSrc_FromSteamID":
            case 2:
                message.gc_msg_src = 2;
                break;
            case "GCProtoBufMsgSrc_FromGC":
            case 3:
                message.gc_msg_src = 3;
                break;
            case "GCProtoBufMsgSrc_ReplySystem":
            case 4:
                message.gc_msg_src = 4;
                break;
            }
            if (object.gc_dir_index_source != null)
                message.gc_dir_index_source = object.gc_dir_index_source >>> 0;
            return message;
        };
    
        /**
         * Creates a plain object from a CMsgProtoBufHeader message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {CMsgProtoBufHeader} message CMsgProtoBufHeader
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CMsgProtoBufHeader.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.client_steam_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.client_steam_id = options.longs === String ? "0" : 0;
                object.client_session_id = 0;
                object.source_app_id = 0;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.job_id_source = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.job_id_source = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                if ($util.Long) {
                    var long = new $util.Long(-1, 2147483647, false);
                    object.job_id_target = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.job_id_target = options.longs === String ? "9223372036854775807" : 9223372036854776000;
                object.target_job_name = "";
                object.eresult = 2;
                object.error_message = "";
                object.ip = 0;
                object.gc_msg_src = options.enums === String ? "GCProtoBufMsgSrc_Unspecified" : 0;
                object.gc_dir_index_source = 0;
            }
            if (message.client_steam_id != null && message.hasOwnProperty("client_steam_id"))
                if (typeof message.client_steam_id === "number")
                    object.client_steam_id = options.longs === String ? String(message.client_steam_id) : message.client_steam_id;
                else
                    object.client_steam_id = options.longs === String ? $util.Long.prototype.toString.call(message.client_steam_id) : options.longs === Number ? new $util.LongBits(message.client_steam_id.low >>> 0, message.client_steam_id.high >>> 0).toNumber() : message.client_steam_id;
            if (message.client_session_id != null && message.hasOwnProperty("client_session_id"))
                object.client_session_id = message.client_session_id;
            if (message.source_app_id != null && message.hasOwnProperty("source_app_id"))
                object.source_app_id = message.source_app_id;
            if (message.job_id_source != null && message.hasOwnProperty("job_id_source"))
                if (typeof message.job_id_source === "number")
                    object.job_id_source = options.longs === String ? String(message.job_id_source) : message.job_id_source;
                else
                    object.job_id_source = options.longs === String ? $util.Long.prototype.toString.call(message.job_id_source) : options.longs === Number ? new $util.LongBits(message.job_id_source.low >>> 0, message.job_id_source.high >>> 0).toNumber() : message.job_id_source;
            if (message.job_id_target != null && message.hasOwnProperty("job_id_target"))
                if (typeof message.job_id_target === "number")
                    object.job_id_target = options.longs === String ? String(message.job_id_target) : message.job_id_target;
                else
                    object.job_id_target = options.longs === String ? $util.Long.prototype.toString.call(message.job_id_target) : options.longs === Number ? new $util.LongBits(message.job_id_target.low >>> 0, message.job_id_target.high >>> 0).toNumber() : message.job_id_target;
            if (message.target_job_name != null && message.hasOwnProperty("target_job_name"))
                object.target_job_name = message.target_job_name;
            if (message.eresult != null && message.hasOwnProperty("eresult"))
                object.eresult = message.eresult;
            if (message.error_message != null && message.hasOwnProperty("error_message"))
                object.error_message = message.error_message;
            if (message.ip != null && message.hasOwnProperty("ip"))
                object.ip = message.ip;
            if (message.gc_msg_src != null && message.hasOwnProperty("gc_msg_src"))
                object.gc_msg_src = options.enums === String ? $root.GCProtoBufMsgSrc[message.gc_msg_src] === undefined ? message.gc_msg_src : $root.GCProtoBufMsgSrc[message.gc_msg_src] : message.gc_msg_src;
            if (message.gc_dir_index_source != null && message.hasOwnProperty("gc_dir_index_source"))
                object.gc_dir_index_source = message.gc_dir_index_source;
            return object;
        };
    
        /**
         * Converts this CMsgProtoBufHeader to JSON.
         * @function toJSON
         * @memberof CMsgProtoBufHeader
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CMsgProtoBufHeader.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CMsgProtoBufHeader
         * @function getTypeUrl
         * @memberof CMsgProtoBufHeader
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CMsgProtoBufHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CMsgProtoBufHeader";
        };
    
        return CMsgProtoBufHeader;
    })();
    
    $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request = (function() {
    
        /**
         * Properties of a CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @exports ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @interface ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @property {number|null} [appid] CChinaAgreementSessions_StartAgreementSessionInGame_Request appid
         * @property {number|Long|null} [steamid] CChinaAgreementSessions_StartAgreementSessionInGame_Request steamid
         * @property {string|null} [client_ipaddress] CChinaAgreementSessions_StartAgreementSessionInGame_Request client_ipaddress
         */
    
        /**
         * Constructs a new CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @exports CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @classdesc Represents a CChinaAgreementSessions_StartAgreementSessionInGame_Request.
         * @implements ICChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @constructor
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request=} [properties] Properties to set
         */
        function CChinaAgreementSessions_StartAgreementSessionInGame_Request(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request appid.
         * @member {number} appid
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.appid = 0;
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request steamid.
         * @member {number|Long} steamid
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.steamid = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Request client_ipaddress.
         * @member {string} client_ipaddress
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.client_ipaddress = "";
    
        /**
         * Creates a new CChinaAgreementSessions_StartAgreementSessionInGame_Request instance using the specified properties.
         * @function create
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request=} [properties] Properties to set
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.create = function create(properties) {
            return new CChinaAgreementSessions_StartAgreementSessionInGame_Request(properties);
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Request message. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify|verify} messages.
         * @function encode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.appid != null && Object.hasOwnProperty.call(message, "appid"))
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.appid);
            if (message.steamid != null && Object.hasOwnProperty.call(message, "steamid"))
                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.steamid);
            if (message.client_ipaddress != null && Object.hasOwnProperty.call(message, "client_ipaddress"))
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.client_ipaddress);
            return writer;
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Request message, length delimited. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from the specified reader or buffer.
         * @function decode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.appid = reader.uint32();
                        break;
                    }
                case 2: {
                        message.steamid = reader.fixed64();
                        break;
                    }
                case 3: {
                        message.client_ipaddress = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChinaAgreementSessions_StartAgreementSessionInGame_Request message.
         * @function verify
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.appid != null && message.hasOwnProperty("appid"))
                if (!$util.isInteger(message.appid))
                    return "appid: integer expected";
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (!$util.isInteger(message.steamid) && !(message.steamid && $util.isInteger(message.steamid.low) && $util.isInteger(message.steamid.high)))
                    return "steamid: integer|Long expected";
            if (message.client_ipaddress != null && message.hasOwnProperty("client_ipaddress"))
                if (!$util.isString(message.client_ipaddress))
                    return "client_ipaddress: string expected";
            return null;
        };
    
        /**
         * Creates a CChinaAgreementSessions_StartAgreementSessionInGame_Request message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Request} CChinaAgreementSessions_StartAgreementSessionInGame_Request
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.fromObject = function fromObject(object) {
            if (object instanceof $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request)
                return object;
            var message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Request();
            if (object.appid != null)
                message.appid = object.appid >>> 0;
            if (object.steamid != null)
                if ($util.Long)
                    (message.steamid = $util.Long.fromValue(object.steamid)).unsigned = false;
                else if (typeof object.steamid === "string")
                    message.steamid = parseInt(object.steamid, 10);
                else if (typeof object.steamid === "number")
                    message.steamid = object.steamid;
                else if (typeof object.steamid === "object")
                    message.steamid = new $util.LongBits(object.steamid.low >>> 0, object.steamid.high >>> 0).toNumber();
            if (object.client_ipaddress != null)
                message.client_ipaddress = String(object.client_ipaddress);
            return message;
        };
    
        /**
         * Creates a plain object from a CChinaAgreementSessions_StartAgreementSessionInGame_Request message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {CChinaAgreementSessions_StartAgreementSessionInGame_Request} message CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults) {
                object.appid = 0;
                if ($util.Long) {
                    var long = new $util.Long(0, 0, false);
                    object.steamid = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                } else
                    object.steamid = options.longs === String ? "0" : 0;
                object.client_ipaddress = "";
            }
            if (message.appid != null && message.hasOwnProperty("appid"))
                object.appid = message.appid;
            if (message.steamid != null && message.hasOwnProperty("steamid"))
                if (typeof message.steamid === "number")
                    object.steamid = options.longs === String ? String(message.steamid) : message.steamid;
                else
                    object.steamid = options.longs === String ? $util.Long.prototype.toString.call(message.steamid) : options.longs === Number ? new $util.LongBits(message.steamid.low >>> 0, message.steamid.high >>> 0).toNumber() : message.steamid;
            if (message.client_ipaddress != null && message.hasOwnProperty("client_ipaddress"))
                object.client_ipaddress = message.client_ipaddress;
            return object;
        };
    
        /**
         * Converts this CChinaAgreementSessions_StartAgreementSessionInGame_Request to JSON.
         * @function toJSON
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @function getTypeUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Request
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Request.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CChinaAgreementSessions_StartAgreementSessionInGame_Request";
        };
    
        return CChinaAgreementSessions_StartAgreementSessionInGame_Request;
    })();
    
    $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response = (function() {
    
        /**
         * Properties of a CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @exports ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @interface ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @property {string|null} [agreement_url] CChinaAgreementSessions_StartAgreementSessionInGame_Response agreement_url
         */
    
        /**
         * Constructs a new CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @exports CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @classdesc Represents a CChinaAgreementSessions_StartAgreementSessionInGame_Response.
         * @implements ICChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @constructor
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response=} [properties] Properties to set
         */
        function CChinaAgreementSessions_StartAgreementSessionInGame_Response(properties) {
            if (properties)
                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                    if (properties[keys[i]] != null)
                        this[keys[i]] = properties[keys[i]];
        }
    
        /**
         * CChinaAgreementSessions_StartAgreementSessionInGame_Response agreement_url.
         * @member {string} agreement_url
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.prototype.agreement_url = "";
    
        /**
         * Creates a new CChinaAgreementSessions_StartAgreementSessionInGame_Response instance using the specified properties.
         * @function create
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response=} [properties] Properties to set
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response instance
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.create = function create(properties) {
            return new CChinaAgreementSessions_StartAgreementSessionInGame_Response(properties);
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Response message. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify|verify} messages.
         * @function encode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.encode = function encode(message, writer) {
            if (!writer)
                writer = $Writer.create();
            if (message.agreement_url != null && Object.hasOwnProperty.call(message, "agreement_url"))
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.agreement_url);
            return writer;
        };
    
        /**
         * Encodes the specified CChinaAgreementSessions_StartAgreementSessionInGame_Response message, length delimited. Does not implicitly {@link CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify|verify} messages.
         * @function encodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {ICChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response message or plain object to encode
         * @param {$protobuf.Writer} [writer] Writer to encode to
         * @returns {$protobuf.Writer} Writer
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.encodeDelimited = function encodeDelimited(message, writer) {
            return this.encode(message, writer).ldelim();
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from the specified reader or buffer.
         * @function decode
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @param {number} [length] Message length if known beforehand
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.decode = function decode(reader, length, error) {
            if (!(reader instanceof $Reader))
                reader = $Reader.create(reader);
            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response();
            while (reader.pos < end) {
                var tag = reader.uint32();
                if (tag === error)
                    break;
                switch (tag >>> 3) {
                case 1: {
                        message.agreement_url = reader.string();
                        break;
                    }
                default:
                    reader.skipType(tag & 7);
                    break;
                }
            }
            return message;
        };
    
        /**
         * Decodes a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from the specified reader or buffer, length delimited.
         * @function decodeDelimited
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.decodeDelimited = function decodeDelimited(reader) {
            if (!(reader instanceof $Reader))
                reader = new $Reader(reader);
            return this.decode(reader, reader.uint32());
        };
    
        /**
         * Verifies a CChinaAgreementSessions_StartAgreementSessionInGame_Response message.
         * @function verify
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {Object.<string,*>} message Plain object to verify
         * @returns {string|null} `null` if valid, otherwise the reason why it is not
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.verify = function verify(message) {
            if (typeof message !== "object" || message === null)
                return "object expected";
            if (message.agreement_url != null && message.hasOwnProperty("agreement_url"))
                if (!$util.isString(message.agreement_url))
                    return "agreement_url: string expected";
            return null;
        };
    
        /**
         * Creates a CChinaAgreementSessions_StartAgreementSessionInGame_Response message from a plain object. Also converts values to their respective internal types.
         * @function fromObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {Object.<string,*>} object Plain object
         * @returns {CChinaAgreementSessions_StartAgreementSessionInGame_Response} CChinaAgreementSessions_StartAgreementSessionInGame_Response
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.fromObject = function fromObject(object) {
            if (object instanceof $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response)
                return object;
            var message = new $root.CChinaAgreementSessions_StartAgreementSessionInGame_Response();
            if (object.agreement_url != null)
                message.agreement_url = String(object.agreement_url);
            return message;
        };
    
        /**
         * Creates a plain object from a CChinaAgreementSessions_StartAgreementSessionInGame_Response message. Also converts values to other types if specified.
         * @function toObject
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {CChinaAgreementSessions_StartAgreementSessionInGame_Response} message CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @param {$protobuf.IConversionOptions} [options] Conversion options
         * @returns {Object.<string,*>} Plain object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.toObject = function toObject(message, options) {
            if (!options)
                options = {};
            var object = {};
            if (options.defaults)
                object.agreement_url = "";
            if (message.agreement_url != null && message.hasOwnProperty("agreement_url"))
                object.agreement_url = message.agreement_url;
            return object;
        };
    
        /**
         * Converts this CChinaAgreementSessions_StartAgreementSessionInGame_Response to JSON.
         * @function toJSON
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @instance
         * @returns {Object.<string,*>} JSON object
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.prototype.toJSON = function toJSON() {
            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
        };
    
        /**
         * Gets the default type url for CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @function getTypeUrl
         * @memberof CChinaAgreementSessions_StartAgreementSessionInGame_Response
         * @static
         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns {string} The default type url
         */
        CChinaAgreementSessions_StartAgreementSessionInGame_Response.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
            if (typeUrlPrefix === undefined) {
                typeUrlPrefix = "type.googleapis.com";
            }
            return typeUrlPrefix + "/CChinaAgreementSessions_StartAgreementSessionInGame_Response";
        };
    
        return CChinaAgreementSessions_StartAgreementSessionInGame_Response;
    })();
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [message_type] FileDescriptorProto message_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] FileDescriptorProto enum_type
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [source_code_info] FileDescriptorProto source_code_info
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.message_type = [];
                    this.enum_type = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto message_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} message_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.message_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto source_code_info.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} source_code_info
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.source_code_info = null;
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.message_type != null && message.message_type.length)
                        for (var i = 0; i < message.message_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.message_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.source_code_info != null && Object.hasOwnProperty.call(message, "source_code_info"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.source_code_info, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 4: {
                                if (!(message.message_type && message.message_type.length))
                                    message.message_type = [];
                                message.message_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enum_type && message.enum_type.length))
                                    message.enum_type = [];
                                message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.source_code_info = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.message_type != null && message.hasOwnProperty("message_type")) {
                        if (!Array.isArray(message.message_type))
                            return "message_type: array expected";
                        for (var i = 0; i < message.message_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.message_type[i]);
                            if (error)
                                return "message_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.source_code_info);
                        if (error)
                            return "source_code_info." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.message_type) {
                        if (!Array.isArray(object.message_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.message_type: array expected");
                        message.message_type = [];
                        for (var i = 0; i < object.message_type.length; ++i) {
                            if (typeof object.message_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.message_type: object expected");
                            message.message_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.message_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.source_code_info != null) {
                        if (typeof object.source_code_info !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.source_code_info: object expected");
                        message.source_code_info = $root.google.protobuf.SourceCodeInfo.fromObject(object.source_code_info);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.message_type = [];
                        object.enum_type = [];
                        object.service = [];
                        object.extension = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.source_code_info = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.message_type && message.message_type.length) {
                        object.message_type = [];
                        for (var j = 0; j < message.message_type.length; ++j)
                            object.message_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.message_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.source_code_info != null && message.hasOwnProperty("source_code_info"))
                        object.source_code_info = $root.google.protobuf.SourceCodeInfo.toObject(message.source_code_info, options);
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nested_type] DescriptorProto nested_type
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enum_type] DescriptorProto enum_type
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extension_range] DescriptorProto extension_range
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nested_type = [];
                    this.enum_type = [];
                    this.extension_range = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nested_type.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nested_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nested_type = $util.emptyArray;
    
                /**
                 * DescriptorProto enum_type.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enum_type
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enum_type = $util.emptyArray;
    
                /**
                 * DescriptorProto extension_range.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extension_range
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension_range = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nested_type != null && message.nested_type.length)
                        for (var i = 0; i < message.nested_type.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nested_type[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enum_type != null && message.enum_type.length)
                        for (var i = 0; i < message.enum_type.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enum_type[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extension_range != null && message.extension_range.length)
                        for (var i = 0; i < message.extension_range.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extension_range[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nested_type && message.nested_type.length))
                                    message.nested_type = [];
                                message.nested_type.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enum_type && message.enum_type.length))
                                    message.enum_type = [];
                                message.enum_type.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extension_range && message.extension_range.length))
                                    message.extension_range = [];
                                message.extension_range.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nested_type != null && message.hasOwnProperty("nested_type")) {
                        if (!Array.isArray(message.nested_type))
                            return "nested_type: array expected";
                        for (var i = 0; i < message.nested_type.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nested_type[i]);
                            if (error)
                                return "nested_type." + error;
                        }
                    }
                    if (message.enum_type != null && message.hasOwnProperty("enum_type")) {
                        if (!Array.isArray(message.enum_type))
                            return "enum_type: array expected";
                        for (var i = 0; i < message.enum_type.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enum_type[i]);
                            if (error)
                                return "enum_type." + error;
                        }
                    }
                    if (message.extension_range != null && message.hasOwnProperty("extension_range")) {
                        if (!Array.isArray(message.extension_range))
                            return "extension_range: array expected";
                        for (var i = 0; i < message.extension_range.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extension_range[i]);
                            if (error)
                                return "extension_range." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nested_type) {
                        if (!Array.isArray(object.nested_type))
                            throw TypeError(".google.protobuf.DescriptorProto.nested_type: array expected");
                        message.nested_type = [];
                        for (var i = 0; i < object.nested_type.length; ++i) {
                            if (typeof object.nested_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nested_type: object expected");
                            message.nested_type[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nested_type[i]);
                        }
                    }
                    if (object.enum_type) {
                        if (!Array.isArray(object.enum_type))
                            throw TypeError(".google.protobuf.DescriptorProto.enum_type: array expected");
                        message.enum_type = [];
                        for (var i = 0; i < object.enum_type.length; ++i) {
                            if (typeof object.enum_type[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enum_type: object expected");
                            message.enum_type[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enum_type[i]);
                        }
                    }
                    if (object.extension_range) {
                        if (!Array.isArray(object.extension_range))
                            throw TypeError(".google.protobuf.DescriptorProto.extension_range: array expected");
                        message.extension_range = [];
                        for (var i = 0; i < object.extension_range.length; ++i) {
                            if (typeof object.extension_range[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension_range: object expected");
                            message.extension_range[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extension_range[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nested_type = [];
                        object.enum_type = [];
                        object.extension_range = [];
                        object.extension = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nested_type && message.nested_type.length) {
                        object.nested_type = [];
                        for (var j = 0; j < message.nested_type.length; ++j)
                            object.nested_type[j] = $root.google.protobuf.DescriptorProto.toObject(message.nested_type[j], options);
                    }
                    if (message.enum_type && message.enum_type.length) {
                        object.enum_type = [];
                        for (var j = 0; j < message.enum_type.length; ++j)
                            object.enum_type[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enum_type[j], options);
                    }
                    if (message.extension_range && message.extension_range.length) {
                        object.extension_range = [];
                        for (var j = 0; j < message.extension_range.length; ++j)
                            object.extension_range[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extension_range[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [type_name] FieldDescriptorProto type_name
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [default_value] FieldDescriptorProto default_value
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto type_name.
                 * @member {string} type_name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type_name = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto default_value.
                 * @member {string} default_value
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.default_value = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.type_name != null && Object.hasOwnProperty.call(message, "type_name"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.type_name);
                    if (message.default_value != null && Object.hasOwnProperty.call(message, "default_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.default_value);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.type_name = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.default_value = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        if (!$util.isString(message.type_name))
                            return "type_name: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        if (!$util.isString(message.default_value))
                            return "default_value: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.type_name != null)
                        message.type_name = String(object.type_name);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.default_value != null)
                        message.default_value = String(object.default_value);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.type_name = "";
                        object.default_value = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.type_name != null && message.hasOwnProperty("type_name"))
                        object.type_name = message.type_name;
                    if (message.default_value != null && message.hasOwnProperty("default_value"))
                        object.default_value = message.default_value;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.value = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [input_type] MethodDescriptorProto input_type
                 * @property {string|null} [output_type] MethodDescriptorProto output_type
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto input_type.
                 * @member {string} input_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.input_type = "";
    
                /**
                 * MethodDescriptorProto output_type.
                 * @member {string} output_type
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.output_type = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.input_type != null && Object.hasOwnProperty.call(message, "input_type"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.input_type);
                    if (message.output_type != null && Object.hasOwnProperty.call(message, "output_type"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.output_type);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.input_type = reader.string();
                                break;
                            }
                        case 3: {
                                message.output_type = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        if (!$util.isString(message.input_type))
                            return "input_type: string expected";
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        if (!$util.isString(message.output_type))
                            return "output_type: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.input_type != null)
                        message.input_type = String(object.input_type);
                    if (object.output_type != null)
                        message.output_type = String(object.output_type);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.input_type = "";
                        object.output_type = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.input_type != null && message.hasOwnProperty("input_type"))
                        object.input_type = message.input_type;
                    if (message.output_type != null && message.hasOwnProperty("output_type"))
                        object.output_type = message.output_type;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [java_package] FileOptions java_package
                 * @property {string|null} [java_outer_classname] FileOptions java_outer_classname
                 * @property {boolean|null} [java_multiple_files] FileOptions java_multiple_files
                 * @property {boolean|null} [java_generate_equals_and_hash] FileOptions java_generate_equals_and_hash
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimize_for] FileOptions optimize_for
                 * @property {boolean|null} [cc_generic_services] FileOptions cc_generic_services
                 * @property {boolean|null} [java_generic_services] FileOptions java_generic_services
                 * @property {boolean|null} [py_generic_services] FileOptions py_generic_services
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FileOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions java_package.
                 * @member {string} java_package
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_package = "";
    
                /**
                 * FileOptions java_outer_classname.
                 * @member {string} java_outer_classname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_outer_classname = "";
    
                /**
                 * FileOptions java_multiple_files.
                 * @member {boolean} java_multiple_files
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_multiple_files = false;
    
                /**
                 * FileOptions java_generate_equals_and_hash.
                 * @member {boolean} java_generate_equals_and_hash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generate_equals_and_hash = false;
    
                /**
                 * FileOptions optimize_for.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimize_for
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimize_for = 1;
    
                /**
                 * FileOptions cc_generic_services.
                 * @member {boolean} cc_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.cc_generic_services = false;
    
                /**
                 * FileOptions java_generic_services.
                 * @member {boolean} java_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.java_generic_services = false;
    
                /**
                 * FileOptions py_generic_services.
                 * @member {boolean} py_generic_services
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.py_generic_services = false;
    
                /**
                 * FileOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.java_package != null && Object.hasOwnProperty.call(message, "java_package"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.java_package);
                    if (message.java_outer_classname != null && Object.hasOwnProperty.call(message, "java_outer_classname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.java_outer_classname);
                    if (message.optimize_for != null && Object.hasOwnProperty.call(message, "optimize_for"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimize_for);
                    if (message.java_multiple_files != null && Object.hasOwnProperty.call(message, "java_multiple_files"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.java_multiple_files);
                    if (message.cc_generic_services != null && Object.hasOwnProperty.call(message, "cc_generic_services"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.cc_generic_services);
                    if (message.java_generic_services != null && Object.hasOwnProperty.call(message, "java_generic_services"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.java_generic_services);
                    if (message.py_generic_services != null && Object.hasOwnProperty.call(message, "py_generic_services"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.py_generic_services);
                    if (message.java_generate_equals_and_hash != null && Object.hasOwnProperty.call(message, "java_generate_equals_and_hash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.java_generate_equals_and_hash);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.java_package = reader.string();
                                break;
                            }
                        case 8: {
                                message.java_outer_classname = reader.string();
                                break;
                            }
                        case 10: {
                                message.java_multiple_files = reader.bool();
                                break;
                            }
                        case 20: {
                                message.java_generate_equals_and_hash = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimize_for = reader.int32();
                                break;
                            }
                        case 16: {
                                message.cc_generic_services = reader.bool();
                                break;
                            }
                        case 17: {
                                message.java_generic_services = reader.bool();
                                break;
                            }
                        case 18: {
                                message.py_generic_services = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        if (!$util.isString(message.java_package))
                            return "java_package: string expected";
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        if (!$util.isString(message.java_outer_classname))
                            return "java_outer_classname: string expected";
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        if (typeof message.java_multiple_files !== "boolean")
                            return "java_multiple_files: boolean expected";
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        if (typeof message.java_generate_equals_and_hash !== "boolean")
                            return "java_generate_equals_and_hash: boolean expected";
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        switch (message.optimize_for) {
                        default:
                            return "optimize_for: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        if (typeof message.cc_generic_services !== "boolean")
                            return "cc_generic_services: boolean expected";
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        if (typeof message.java_generic_services !== "boolean")
                            return "java_generic_services: boolean expected";
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        if (typeof message.py_generic_services !== "boolean")
                            return "py_generic_services: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.java_package != null)
                        message.java_package = String(object.java_package);
                    if (object.java_outer_classname != null)
                        message.java_outer_classname = String(object.java_outer_classname);
                    if (object.java_multiple_files != null)
                        message.java_multiple_files = Boolean(object.java_multiple_files);
                    if (object.java_generate_equals_and_hash != null)
                        message.java_generate_equals_and_hash = Boolean(object.java_generate_equals_and_hash);
                    switch (object.optimize_for) {
                    default:
                        if (typeof object.optimize_for === "number") {
                            message.optimize_for = object.optimize_for;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimize_for = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimize_for = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimize_for = 3;
                        break;
                    }
                    if (object.cc_generic_services != null)
                        message.cc_generic_services = Boolean(object.cc_generic_services);
                    if (object.java_generic_services != null)
                        message.java_generic_services = Boolean(object.java_generic_services);
                    if (object.py_generic_services != null)
                        message.py_generic_services = Boolean(object.py_generic_services);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.java_package = "";
                        object.java_outer_classname = "";
                        object.optimize_for = options.enums === String ? "SPEED" : 1;
                        object.java_multiple_files = false;
                        object.cc_generic_services = false;
                        object.java_generic_services = false;
                        object.py_generic_services = false;
                        object.java_generate_equals_and_hash = false;
                    }
                    if (message.java_package != null && message.hasOwnProperty("java_package"))
                        object.java_package = message.java_package;
                    if (message.java_outer_classname != null && message.hasOwnProperty("java_outer_classname"))
                        object.java_outer_classname = message.java_outer_classname;
                    if (message.optimize_for != null && message.hasOwnProperty("optimize_for"))
                        object.optimize_for = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] === undefined ? message.optimize_for : $root.google.protobuf.FileOptions.OptimizeMode[message.optimize_for] : message.optimize_for;
                    if (message.java_multiple_files != null && message.hasOwnProperty("java_multiple_files"))
                        object.java_multiple_files = message.java_multiple_files;
                    if (message.cc_generic_services != null && message.hasOwnProperty("cc_generic_services"))
                        object.cc_generic_services = message.cc_generic_services;
                    if (message.java_generic_services != null && message.hasOwnProperty("java_generic_services"))
                        object.java_generic_services = message.java_generic_services;
                    if (message.py_generic_services != null && message.hasOwnProperty("py_generic_services"))
                        object.py_generic_services = message.py_generic_services;
                    if (message.java_generate_equals_and_hash != null && message.hasOwnProperty("java_generate_equals_and_hash"))
                        object.java_generate_equals_and_hash = message.java_generate_equals_and_hash;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [message_set_wire_format] MessageOptions message_set_wire_format
                 * @property {boolean|null} [no_standard_descriptor_accessor] MessageOptions no_standard_descriptor_accessor
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MessageOptions uninterpreted_option
                 * @property {number|null} [".msgpool_soft_limit"] MessageOptions .msgpool_soft_limit
                 * @property {number|null} [".msgpool_hard_limit"] MessageOptions .msgpool_hard_limit
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions message_set_wire_format.
                 * @member {boolean} message_set_wire_format
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.message_set_wire_format = false;
    
                /**
                 * MessageOptions no_standard_descriptor_accessor.
                 * @member {boolean} no_standard_descriptor_accessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.no_standard_descriptor_accessor = false;
    
                /**
                 * MessageOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * MessageOptions .msgpool_soft_limit.
                 * @member {number} .msgpool_soft_limit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpool_soft_limit"] = 32;
    
                /**
                 * MessageOptions .msgpool_hard_limit.
                 * @member {number} .msgpool_hard_limit
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".msgpool_hard_limit"] = 384;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.message_set_wire_format != null && Object.hasOwnProperty.call(message, "message_set_wire_format"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.message_set_wire_format);
                    if (message.no_standard_descriptor_accessor != null && Object.hasOwnProperty.call(message, "no_standard_descriptor_accessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.no_standard_descriptor_accessor);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".msgpool_soft_limit"] != null && Object.hasOwnProperty.call(message, ".msgpool_soft_limit"))
                        writer.uint32(/* id 60000, wireType 0 =*/480000).int32(message[".msgpool_soft_limit"]);
                    if (message[".msgpool_hard_limit"] != null && Object.hasOwnProperty.call(message, ".msgpool_hard_limit"))
                        writer.uint32(/* id 60001, wireType 0 =*/480008).int32(message[".msgpool_hard_limit"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.message_set_wire_format = reader.bool();
                                break;
                            }
                        case 2: {
                                message.no_standard_descriptor_accessor = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 60000: {
                                message[".msgpool_soft_limit"] = reader.int32();
                                break;
                            }
                        case 60001: {
                                message[".msgpool_hard_limit"] = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        if (typeof message.message_set_wire_format !== "boolean")
                            return "message_set_wire_format: boolean expected";
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        if (typeof message.no_standard_descriptor_accessor !== "boolean")
                            return "no_standard_descriptor_accessor: boolean expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        if (!$util.isInteger(message[".msgpool_soft_limit"]))
                            return ".msgpool_soft_limit: integer expected";
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        if (!$util.isInteger(message[".msgpool_hard_limit"]))
                            return ".msgpool_hard_limit: integer expected";
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.message_set_wire_format != null)
                        message.message_set_wire_format = Boolean(object.message_set_wire_format);
                    if (object.no_standard_descriptor_accessor != null)
                        message.no_standard_descriptor_accessor = Boolean(object.no_standard_descriptor_accessor);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".msgpool_soft_limit"] != null)
                        message[".msgpool_soft_limit"] = object[".msgpool_soft_limit"] | 0;
                    if (object[".msgpool_hard_limit"] != null)
                        message[".msgpool_hard_limit"] = object[".msgpool_hard_limit"] | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.message_set_wire_format = false;
                        object.no_standard_descriptor_accessor = false;
                        object[".msgpool_soft_limit"] = 32;
                        object[".msgpool_hard_limit"] = 384;
                    }
                    if (message.message_set_wire_format != null && message.hasOwnProperty("message_set_wire_format"))
                        object.message_set_wire_format = message.message_set_wire_format;
                    if (message.no_standard_descriptor_accessor != null && message.hasOwnProperty("no_standard_descriptor_accessor"))
                        object.no_standard_descriptor_accessor = message.no_standard_descriptor_accessor;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".msgpool_soft_limit"] != null && message.hasOwnProperty(".msgpool_soft_limit"))
                        object[".msgpool_soft_limit"] = message[".msgpool_soft_limit"];
                    if (message[".msgpool_hard_limit"] != null && message.hasOwnProperty(".msgpool_hard_limit"))
                        object[".msgpool_hard_limit"] = message[".msgpool_hard_limit"];
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {string|null} [experimental_map_key] FieldOptions experimental_map_key
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] FieldOptions uninterpreted_option
                 * @property {boolean|null} [".key_field"] FieldOptions .key_field
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions experimental_map_key.
                 * @member {string} experimental_map_key
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.experimental_map_key = "";
    
                /**
                 * FieldOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * FieldOptions .key_field.
                 * @member {boolean} .key_field
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".key_field"] = false;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.experimental_map_key != null && Object.hasOwnProperty.call(message, "experimental_map_key"))
                        writer.uint32(/* id 9, wireType 2 =*/74).string(message.experimental_map_key);
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".key_field"] != null && Object.hasOwnProperty.call(message, ".key_field"))
                        writer.uint32(/* id 60000, wireType 0 =*/480000).bool(message[".key_field"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 9: {
                                message.experimental_map_key = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 60000: {
                                message[".key_field"] = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.experimental_map_key != null && message.hasOwnProperty("experimental_map_key"))
                        if (!$util.isString(message.experimental_map_key))
                            return "experimental_map_key: string expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    if (message[".key_field"] != null && message.hasOwnProperty(".key_field"))
                        if (typeof message[".key_field"] !== "boolean")
                            return ".key_field: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.experimental_map_key != null)
                        message.experimental_map_key = String(object.experimental_map_key);
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    if (object[".key_field"] != null)
                        message[".key_field"] = Boolean(object[".key_field"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.experimental_map_key = "";
                        object[".key_field"] = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.experimental_map_key != null && message.hasOwnProperty("experimental_map_key"))
                        object.experimental_map_key = message.experimental_map_key;
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    if (message[".key_field"] != null && message.hasOwnProperty(".key_field"))
                        object[".key_field"] = message[".key_field"];
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] EnumValueOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] ServiceOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpreted_option] MethodOptions uninterpreted_option
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpreted_option = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions uninterpreted_option.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpreted_option
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpreted_option = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpreted_option != null && message.uninterpreted_option.length)
                        for (var i = 0; i < message.uninterpreted_option.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpreted_option[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpreted_option && message.uninterpreted_option.length))
                                    message.uninterpreted_option = [];
                                message.uninterpreted_option.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpreted_option != null && message.hasOwnProperty("uninterpreted_option")) {
                        if (!Array.isArray(message.uninterpreted_option))
                            return "uninterpreted_option: array expected";
                        for (var i = 0; i < message.uninterpreted_option.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpreted_option[i]);
                            if (error)
                                return "uninterpreted_option." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.uninterpreted_option) {
                        if (!Array.isArray(object.uninterpreted_option))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: array expected");
                        message.uninterpreted_option = [];
                        for (var i = 0; i < object.uninterpreted_option.length; ++i) {
                            if (typeof object.uninterpreted_option[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpreted_option: object expected");
                            message.uninterpreted_option[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpreted_option[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpreted_option = [];
                    if (message.uninterpreted_option && message.uninterpreted_option.length) {
                        object.uninterpreted_option = [];
                        for (var j = 0; j < message.uninterpreted_option.length; ++j)
                            object.uninterpreted_option[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpreted_option[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifier_value] UninterpretedOption identifier_value
                 * @property {number|Long|null} [positive_int_value] UninterpretedOption positive_int_value
                 * @property {number|Long|null} [negative_int_value] UninterpretedOption negative_int_value
                 * @property {number|null} [double_value] UninterpretedOption double_value
                 * @property {Uint8Array|null} [string_value] UninterpretedOption string_value
                 * @property {string|null} [aggregate_value] UninterpretedOption aggregate_value
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifier_value.
                 * @member {string} identifier_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifier_value = "";
    
                /**
                 * UninterpretedOption positive_int_value.
                 * @member {number|Long} positive_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positive_int_value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negative_int_value.
                 * @member {number|Long} negative_int_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negative_int_value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption double_value.
                 * @member {number} double_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.double_value = 0;
    
                /**
                 * UninterpretedOption string_value.
                 * @member {Uint8Array} string_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.string_value = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregate_value.
                 * @member {string} aggregate_value
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregate_value = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifier_value != null && Object.hasOwnProperty.call(message, "identifier_value"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifier_value);
                    if (message.positive_int_value != null && Object.hasOwnProperty.call(message, "positive_int_value"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positive_int_value);
                    if (message.negative_int_value != null && Object.hasOwnProperty.call(message, "negative_int_value"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negative_int_value);
                    if (message.double_value != null && Object.hasOwnProperty.call(message, "double_value"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.double_value);
                    if (message.string_value != null && Object.hasOwnProperty.call(message, "string_value"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.string_value);
                    if (message.aggregate_value != null && Object.hasOwnProperty.call(message, "aggregate_value"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregate_value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifier_value = reader.string();
                                break;
                            }
                        case 4: {
                                message.positive_int_value = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negative_int_value = reader.int64();
                                break;
                            }
                        case 6: {
                                message.double_value = reader.double();
                                break;
                            }
                        case 7: {
                                message.string_value = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregate_value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        if (!$util.isString(message.identifier_value))
                            return "identifier_value: string expected";
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (!$util.isInteger(message.positive_int_value) && !(message.positive_int_value && $util.isInteger(message.positive_int_value.low) && $util.isInteger(message.positive_int_value.high)))
                            return "positive_int_value: integer|Long expected";
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (!$util.isInteger(message.negative_int_value) && !(message.negative_int_value && $util.isInteger(message.negative_int_value.low) && $util.isInteger(message.negative_int_value.high)))
                            return "negative_int_value: integer|Long expected";
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        if (typeof message.double_value !== "number")
                            return "double_value: number expected";
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        if (!(message.string_value && typeof message.string_value.length === "number" || $util.isString(message.string_value)))
                            return "string_value: buffer expected";
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        if (!$util.isString(message.aggregate_value))
                            return "aggregate_value: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifier_value != null)
                        message.identifier_value = String(object.identifier_value);
                    if (object.positive_int_value != null)
                        if ($util.Long)
                            (message.positive_int_value = $util.Long.fromValue(object.positive_int_value)).unsigned = true;
                        else if (typeof object.positive_int_value === "string")
                            message.positive_int_value = parseInt(object.positive_int_value, 10);
                        else if (typeof object.positive_int_value === "number")
                            message.positive_int_value = object.positive_int_value;
                        else if (typeof object.positive_int_value === "object")
                            message.positive_int_value = new $util.LongBits(object.positive_int_value.low >>> 0, object.positive_int_value.high >>> 0).toNumber(true);
                    if (object.negative_int_value != null)
                        if ($util.Long)
                            (message.negative_int_value = $util.Long.fromValue(object.negative_int_value)).unsigned = false;
                        else if (typeof object.negative_int_value === "string")
                            message.negative_int_value = parseInt(object.negative_int_value, 10);
                        else if (typeof object.negative_int_value === "number")
                            message.negative_int_value = object.negative_int_value;
                        else if (typeof object.negative_int_value === "object")
                            message.negative_int_value = new $util.LongBits(object.negative_int_value.low >>> 0, object.negative_int_value.high >>> 0).toNumber();
                    if (object.double_value != null)
                        message.double_value = Number(object.double_value);
                    if (object.string_value != null)
                        if (typeof object.string_value === "string")
                            $util.base64.decode(object.string_value, message.string_value = $util.newBuffer($util.base64.length(object.string_value)), 0);
                        else if (object.string_value.length >= 0)
                            message.string_value = object.string_value;
                    if (object.aggregate_value != null)
                        message.aggregate_value = String(object.aggregate_value);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifier_value = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positive_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positive_int_value = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negative_int_value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negative_int_value = options.longs === String ? "0" : 0;
                        object.double_value = 0;
                        if (options.bytes === String)
                            object.string_value = "";
                        else {
                            object.string_value = [];
                            if (options.bytes !== Array)
                                object.string_value = $util.newBuffer(object.string_value);
                        }
                        object.aggregate_value = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifier_value != null && message.hasOwnProperty("identifier_value"))
                        object.identifier_value = message.identifier_value;
                    if (message.positive_int_value != null && message.hasOwnProperty("positive_int_value"))
                        if (typeof message.positive_int_value === "number")
                            object.positive_int_value = options.longs === String ? String(message.positive_int_value) : message.positive_int_value;
                        else
                            object.positive_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.positive_int_value) : options.longs === Number ? new $util.LongBits(message.positive_int_value.low >>> 0, message.positive_int_value.high >>> 0).toNumber(true) : message.positive_int_value;
                    if (message.negative_int_value != null && message.hasOwnProperty("negative_int_value"))
                        if (typeof message.negative_int_value === "number")
                            object.negative_int_value = options.longs === String ? String(message.negative_int_value) : message.negative_int_value;
                        else
                            object.negative_int_value = options.longs === String ? $util.Long.prototype.toString.call(message.negative_int_value) : options.longs === Number ? new $util.LongBits(message.negative_int_value.low >>> 0, message.negative_int_value.high >>> 0).toNumber() : message.negative_int_value;
                    if (message.double_value != null && message.hasOwnProperty("double_value"))
                        object.double_value = options.json && !isFinite(message.double_value) ? String(message.double_value) : message.double_value;
                    if (message.string_value != null && message.hasOwnProperty("string_value"))
                        object.string_value = options.bytes === String ? $util.base64.encode(message.string_value, 0, message.string_value.length) : options.bytes === Array ? Array.prototype.slice.call(message.string_value) : message.string_value;
                    if (message.aggregate_value != null && message.hasOwnProperty("aggregate_value"))
                        object.aggregate_value = message.aggregate_value;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} name_part NamePart name_part
                     * @property {boolean} is_extension NamePart is_extension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart name_part.
                     * @member {string} name_part
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.name_part = "";
    
                    /**
                     * NamePart is_extension.
                     * @member {boolean} is_extension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.is_extension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name_part);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.is_extension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name_part = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.is_extension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("name_part"))
                            throw $util.ProtocolError("missing required 'name_part'", { instance: message });
                        if (!message.hasOwnProperty("is_extension"))
                            throw $util.ProtocolError("missing required 'is_extension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.name_part))
                            return "name_part: string expected";
                        if (typeof message.is_extension !== "boolean")
                            return "is_extension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.name_part != null)
                            message.name_part = String(object.name_part);
                        if (object.is_extension != null)
                            message.is_extension = Boolean(object.is_extension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.name_part = "";
                            object.is_extension = false;
                        }
                        if (message.name_part != null && message.hasOwnProperty("name_part"))
                            object.name_part = message.name_part;
                        if (message.is_extension != null && message.hasOwnProperty("is_extension"))
                            object.is_extension = message.is_extension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length, error) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        if (tag === error)
                            break;
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length, error) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            if (tag === error)
                                break;
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();

    return $root;
});
